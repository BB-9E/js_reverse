export memory memory(initial: 17, max: 0);

global g_a:int = 1048576;

table T_a:funcref(min: 59, max: 59);

data d_srcsignrsMMMCMZcalledOptionu(offset: 1048576) =
  "src/sign.rs\00\00\00\10\00\0b\00\00\00M\00\00\00\13\00\00\00\00\00\10\00"
  "\0b\00\00\00M\00\00\00+\00\00\00\00\00\10\00\0b\00\00\00M\00\00\00C\00"
  "\00\00\00\00\10\00\0b\00\00\00M\00\00\00Z\00\00\00called `Option::unwr"
  "ap()` on a `None` value/rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35"
  "/library/core/src/slice/iter.rs\00\00\00w\00\10\00N\00\00\00w\05\00\00"
  "\15\00\00\00\00\00\00\00\00\00\00\00attempt to divide by zero\00\00\00"
  "w\00\10\00N\00\00\00x\05\00\00\17\00\00\00\00\00\00\00attempt to calcu"
  "late the remainder with a divisor of zeroassertion failed: step != 0/r"
  "ustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/iter/ad"
  "apters/step_by.rs\00\00\00d\01\10\00Y\00\00\00\15\00\00\00\09\00\00\00"
  "/rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/core/src/ops/b"
  "it.rs\00\d0\01\10\00K\00\00\00[\02\00\00\01\00\00\00\00\00\00\00attemp"
  "t to shift right with overflow\00\00\00\00/rustc/59eed8a2aac0230a8b53e"
  "89d4e99d55912ba6b35/library/core/src/slice/mod.rs\00\00\00X\02\10\00M\00"
  "\00\00\14\03\00\00\09\00\00\00assertion failed: mid <= self.len()\00X\02"
  "\10\00M\00\00\00\e1\05\00\00\09\00\00\00x\a4j\d7V\b7\c7\e8\dbp $\ee\ce"
  "\bd\c1\af\0f|\f5*\c6\87G\13F0\a8\01\95F\fd\d8\98\80i\af\f7D\8b\b1[\ff\ff"
  "\be\d7\\89"\11\90k\93q\98\fd\8eCy\a6!\08\b4Ib%\1e\f6@\b3@\c0QZ^&\aa\c7"
  "\b6\e9]\10/\d6S\14D\02\81\e6\a1\d8\c8\fb\d3\e7\e6\cd\e1!\d6\077\c3\87\0d"
  "\d5\f4\ed\14ZE\05\e9\e3\a9\f8\a3\ef\fc\d9\02og\8aL*\8dB9\fa\ff\81\f6q\87"
  ""a\9dm\0c8\e5\fdD\ea\be\a4\a9\cf\deK`K\bb\f6p\bc\bf\be\c6~\9b(\fa'\a1\ea"
  "\850\ef\d4\05\1d\88\049\d0\d4\d9\e5\99\db\e6\f8|\a2\1feV\ac\c4D")\f4\97"
  "\ff*C\a7#\94\ab9\a0\93\fc\c3Y[e\92\cc\0c\8f}\f4\ef\ff\d1]\84\85O~\a8o\e0"
  "\e6,\fe\14C\01\a3\a1\11\08N\82~S\f75\f2:\bd\bb\d2\d7*\91\d3\86\ebsrc/s"
  "ign.rs\00\ec\03\10\00\0b\00\00\004\00\00\00\1e\00\00\00\00\00\00\00\00"
  "\00\00\00attempt to multiply with overflow\00\00\00\ec\03\10\00\0b\00\00"
  "\009\00\00\00\10\00\00\00\ec\03\10\00\0b\00\00\009\00\00\00\0f\00\00\00"
  "\00\00\00\00\00\00\00\00\00\00\00\00attempt to add with overflow\ec\03"
  "\10\00\0b\00\00\00>\00\00\00,\00\00\00\ec\03\10\00\0b\00\00\00>\00\00\00"
  "\19\00\00\00\00\00\00\00attempt to shift right with overflow\ec\03\10\00"
  "\0b\00\00\00W\00\00\00$\00\00\00\ec\03\10\00\0b\00\00\00W\00\00\006\00"
  "\00\00\ec\03\10\00\0b\00\00\00X\00\00\00&\00\00\00\ec\03\10\00\0b\00\00"
  "\00X\00\00\00$\00\00\00\ec\03\10\00\0b\00\00\00X\00\00\00<\00\00\00\ec"
  "\03\10\00\0b\00\00\00X\00\00\00:\00\00\00\ec\03\10\00\0b\00\00\00Y\00\00"
  "\00&\00\00\00\ec\03\10\00\0b\00\00\00Y\00\00\00$\00\00\00\ec\03\10\00\0b"
  "\00\00\00Y\00\00\00<\00\00\00\ec\03\10\00\0b\00\00\00Y\00\00\00:\00\00"
  "\00\ec\03\10\00\0b\00\00\00Z\00\00\00&\00\00\00\ec\03\10\00\0b\00\00\00"
  "Z\00\00\00$\00\00\00\ec\03\10\00\0b\00\00\00Z\00\00\00<\00\00\00\ec\03"
  "\10\00\0b\00\00\00Z\00\00\00:\00\00\00\ec\03\10\00\0b\00\00\00`\00\00\00"
  "$\00\00\00\ec\03\10\00\0b\00\00\00`\00\00\00?\00\00\00\ec\03\10\00\0b\00"
  "\00\00`\00\00\00=\00\00\00\ec\03\10\00\0b\00\00\00a\00\00\00&\00\00\00"
  "\ec\03\10\00\0b\00\00\00a\00\00\00$\00\00\00\ec\03\10\00\0b\00\00\00a\00"
  "\00\00E\00\00\00\ec\03\10\00\0b\00\00\00a\00\00\00C\00\00\00\ec\03\10\00"
  "\0b\00\00\00b\00\00\00&\00\00\00\ec\03\10\00\0b\00\00\00b\00\00\00$\00"
  "\00\00\ec\03\10\00\0b\00\00\00b\00\00\00F\00\00\00\ec\03\10\00\0b\00\00"
  "\00b\00\00\00D\00\00\00\ec\03\10\00\0b\00\00\00c\00\00\00&\00\00\00\ec"
  "\03\10\00\0b\00\00\00c\00\00\00$\00\00\00\ec\03\10\00\0b\00\00\00c\00\00"
  "\00F\00\00\00\ec\03\10\00\0b\00\00\00c\00\00\00D\00\00\00\ec\03\10\00\0b"
  "\00\00\00d\00\00\00\11\00\00\00\ec\03\10\00\0b\00\00\00j\00\00\00$\00\00"
  "\00\ec\03\10\00\0b\00\00\00j\00\00\00?\00\00\00\ec\03\10\00\0b\00\00\00"
  "j\00\00\00=\00\00\00\ec\03\10\00\0b\00\00\00k\00\00\00&\00\00\00\ec\03"
  "\10\00\0b\00\00\00k\00\00\00$\00\00\00\ec\03\10\00\0b\00\00\00k\00\00\00"
  "E\00\00\00\ec\03\10\00\0b\00\00\00k\00\00\00C\00\00\00\ec\03\10\00\0b\00"
  "\00\00l\00\00\00&\00\00\00\ec\03\10\00\0b\00\00\00l\00\00\00$\00\00\00"
  "\ec\03\10\00\0b\00\00\00l\00\00\00E\00\00\00\ec\03\10\00\0b\00\00\00l\00"
  "\00\00C\00\00\00\ec\03\10\00\0b\00\00\00m\00\00\00&\00\00\00\ec\03\10\00"
  "\0b\00\00\00m\00\00\00$\00\00\00\ec\03\10\00\0b\00\00\00m\00\00\00E\00"
  "\00\00\ec\03\10\00\0b\00\00\00m\00\00\00C\00\00\00\ec\03\10\00\0b\00\00"
  "\00n\00\00\00\11\00\00\00\ec\03\10\00\0b\00\00\00t\00\00\00$\00\00\00\ec"
  "\03\10\00\0b\00\00\00t\00\00\00?\00\00\00\ec\03\10\00\0b\00\00\00t\00\00"
  "\00=\00\00\00\ec\03\10\00\0b\00\00\00u\00\00\00&\00\00\00\ec\03\10\00\0b"
  "\00\00\00u\00\00\00$\00\00\00\ec\03\10\00\0b\00\00\00u\00\00\00E\00\00"
  "\00\ec\03\10\00\0b\00\00\00u\00\00\00C\00\00\00\ec\03\10\00\0b\00\00\00"
  "v\00\00\00&\00\00\00\ec\03\10\00\0b\00\00\00v\00\00\00$\00\00\00\ec\03"
  "\10\00\0b\00\00\00v\00\00\00F\00\00\00\ec\03\10\00\0b\00\00\00v\00\00\00"
  "D\00\00\00\ec\03\10\00\0b\00\00\00w\00\00\00&\00\00\00\ec\03\10\00\0b\00"
  "\00\00w\00\00\00$\00\00\00\ec\03\10\00\0b\00\00\00w\00\00\00F\00\00\00"
  "\ec\03\10\00\0b\00\00\00w\00\00\00D\00\00\00\ec\03\10\00\0b\00\00\00x\00"
  "\00\00\11\00\00\00\a4\08\10\00\00\00\00\00\a4\08\10\00\00\00\00\00\a4\08"
  "\10\00\00\00\00\00\a4\08\10\00\00\00\00\00\00\00\00\00 \00\00\00\08\00"
  "\00\00\02\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\03\00\00\00\01\00"
  "\00\00 \00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\02\00"
  "\00\00\03\00\00\00\02\00\00\00 \00\00\00\08\00\00\00\02\00\00\00\00\00"
  "\00\00\00\00\00\00\02\00\00\00\03\00\00\00\03\00\00\00 \00\00\00\08\00"
  "\00\00\02\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\03\00\00\00capa"
  "city overflow/rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/a"
  "lloc/src/vec/spec_from_iter_nested.rs\00U\09\10\00^\00\00\005\00\00\00"
  "\12\00\00\00/rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/al"
  "loc/src/vec/spec_extend.rs\c4\09\10\00T\00\00\007\00\00\00\0d\00\00\00"
  "src/lib.rs\00\00(\0a\10\00\0a\00\00\00+\00\00\00$\00\00\00(\0a\10\00\0a"
  "\00\00\00,\00\00\00&\00\00\00(\0a\10\00\0a\00\00\00-\00\00\00 \00\00\00"
  "D#uqGdcw41pWeNXm\03\00\00\00return thisassertion failed: this.is_some("
  ")/Users/littleq/.cargo/registry/src/github.com-1ecc6299db9ec823/js-sys"
  "-0.3.56/src/lib.rs\00\00\a3\0a\10\00W\00\00\00R\15\00\00\09\00\00\00/r"
  "ustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/raw_ve"
  "c.rs\0c\0b\10\00L\00\00\00\97\01\00\00\09\00\00\00\00\00\00\00\00\00\00"
  "\00attempt to divide by zeroTried to shrink to a larger capacity\00\00"
  "\00\0c\0b\10\00L\00\00\00\d4\01\00\00\09\00\00\00\04\00\00\00\00\00\00"
  "\00\01\00\00\00\05\00\00\00\07\00\00\00\04\00\00\00\04\00\00\00\08\00\00"
  "\00free of stack slot \00\e0\0b\10\00\13\00\00\00/Users/littleq/.cargo"
  "/registry/src/github.com-1ecc6299db9ec823/wasm-bindgen-0.2.79/src/lib."
  "rs\00\00\00\fc\0b\10\00]\00\00\00\d2\03\00\00\0d\00\00\00closure invok"
  "ed recursively or destroyed alreadycannot access a Thread Local Storag"
  "e value during or after destruction/rustc/59eed8a2aac0230a8b53e89d4e99"
  "d55912ba6b35/library/std/src/thread/local.rs\00\00\00\e2\0c\10\00O\00\00"
  "\00w\01\00\00\1a\00\00\00/rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b"
  "35/library/core/src/alloc/layout.rsD\0d\10\00P\00\00\00\10\01\00\009\00"
  "\00\00invalid args/rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/libr"
  "ary/core/src/fmt/mod.rs\00\b0\0d\10\00K\00\00\00Z\01\00\00\0d\00\00\00"
  "/rustc/59eed8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/raw_"
  "vec.rs\0c\0e\10\00L\00\00\00\97\01\00\00\09\00\00\00\00\00\00\00\00\00"
  "\00\00attempt to divide by zeroTried to shrink to a larger capacity\00"
  "\00\00\0c\0e\10\00L\00\00\00\d4\01\00\00\09\00\00\00/rustc/59eed8a2aac"
  "0230a8b53e89d4e99d55912ba6b35/library/core/src/alloc/layout.rs\c0\0e\10"
  "\00P\00\00\00\10\01\00\009\00\00\00\01\00\00\00\00\00\00\00/rustc/59ee"
  "d8a2aac0230a8b53e89d4e99d55912ba6b35/library/alloc/src/raw_vec.rs(\0f\10"
  "\00L\00\00\00\97\01\00\00\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
  "\00attempt to divide by zerocalled `Result::unwrap()` on an `Err` valu"
  "e\1d\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00/rustc/59eed8a2aac023"
  "0a8b53e89d4e99d55912ba6b35/library/core/src/alloc/layout.rs\e4\0f\10\00"
  "P\00\00\00\10\01\00\009\00\00\00/Users/littleq/.cargo/registry/src/git"
  "hub.com-1ecc6299db9ec823/wasm-bindgen-0.2.79/src/externref.rs\00D\10\10"
  "\00c\00\00\00-\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00attempt to "
  "add with overflowsomeone else allocated table entires?\00\00\00D\10\10"
  "\00c\00\00\003\00\00\00#\00\00\00D\10\10\00c\00\00\004\00\00\00 \00\00"
  "\00\00\00\00\00\00\00\00\00\00\00\00\00attempt to multiply with overfl"
  "owsize/align layout failureallocation failuretable grow failurepush sh"
  "ould be infallible now\00D\10\10\00c\00\00\00J\00\00\00\1c\00\00\00D\10"
  "\10\00c\00\00\00S\00\00\00\09\00\00\00ret out of boundsfree reserved s"
  "lot\00D\10\10\00c\00\00\00Z\00\00\00\14\00\00\00attempt to subtract wi"
  "th overflowslot out of boundsassertion failed: (free_count as usize) <"
  " self.data.len()D\10\10\00c\00\00\00k\00\00\00\0d\00\00\00D\10\10\00c\00"
  "\00\00l\00\00\00\0d\00\00\00D\10\10\00c\00\00\00r\00\00\00\09\00\00\00"
  " \00\00\00tls access failure\00\00\04\00\00\00\00\00\00\00\00\00\00\00"
  "/Users/littleq/.cargo/registry/src/github.com-1ecc6299db9ec823/wasm-bi"
  "ndgen-0.2.79/src/lib.rs\00\00\00\c0\12\10\00]\00\00\00\d4\05\00\00\09\00"
  "\00\00assertion failed: old_size > 0\00\00\c0\12\10\00]\00\00\00\8a\05"
  "\00\00\0d\00\00\00assertion failed: new_size > 0\00\00\c0\12\10\00]\00"
  "\00\00\8b\05\00\00\0d\00\00\00invalid malloc request\00\00!\00\00\00\04"
  "\00\00\00\04\00\00\00"\00\00\00$\00\00\00\04\00\00\00\04\00\00\00%\00\00"
  "\00&\00\00\00'\00\00\00called `Option::unwrap()` on a `None` value\00\01"
  "\00\00\00\00\00\00\00AccessErrorlibrary/std/src/panicking.rs\00\0f\14\10"
  "\00\1c\00\00\00\03\02\00\00\1f\00\00\00\0f\14\10\00\1c\00\00\00\04\02\00"
  "\00\1e\00\00\00(\00\00\00\10\00\00\00\04\00\00\00)\00\00\00*\00\00\00$"
  "\00\00\00\08\00\00\00\04\00\00\00+\00\00\00,\00\00\00-\00\00\00\0c\00\00"
  "\00\04\00\00\00.\00\00\00$\00\00\00\08\00\00\00\04\00\00\00/\00\00\000"
  "\00\00\00\04\00\00\00\04\00\00\001\00\00\002\00\00\003\00\00\000\00\00"
  "\00\00\00\00\00\01\00\00\004\00\00\00a formatting trait implementation"
  " returned an errorlibrary/alloc/src/fmt.rs\00\ef\14\10\00\18\00\00\00G"
  "\02\00\00\1c\00\00\00library/alloc/src/raw_vec.rscapacity overflow\00\00"
  "\00\18\15\10\00\1c\00\00\00/\02\00\00\05\00\00\00X\15\10\00\00\00\00\00"
  "9\00\00\00\00\00\00\00\01\00\00\00:\00\00\00index out of bounds: the l"
  "en is  but the index is \00\00p\15\10\00 \00\00\00\90\15\10\00\12\00\00"
  "\00matches!===assertion failed: `(left  right)`\0a  left: ``,\0a right"
  ": ``: \00\00\00\bf\15\10\00\19\00\00\00\d8\15\10\00\12\00\00\00\ea\15\10"
  "\00\0c\00\00\00\f6\15\10\00\03\00\00\00`\00\00\00\bf\15\10\00\19\00\00"
  "\00\d8\15\10\00\12\00\00\00\ea\15\10\00\0c\00\00\00\1c\16\10\00\01\00\00"
  "\00: \00\00X\15\10\00\00\00\00\00@\16\10\00\02\00\00\00} }library/core"
  "/src/fmt/num.rs\00\00W\16\10\00\1b\00\00\00e\00\00\00\14\00\00\000x000"
  "1020304050607080910111213141516171819202122232425262728293031323334353"
  "6373839404142434445464748495051525354555657585960616263646566676869707"
  "172737475767778798081828384858687888990919293949596979899range start i"
  "ndex  out of range for slice of length \00\00N\17\10\00\12\00\00\00`\17"
  "\10\00"\00\00\00ErrorLayoutError";

import function web_sys_features_gen_Window_wbg_generated_Window_impl_wasm_bindgen_cast_JsCast_for_web_sys_features_(a:int):int;

import function web_sys_features_gen_Window_Window_document_wbg_document_5edd43643d1060d9_h4dd6605746ba6f29(a:int):int;

import function web_sys_features_gen_Document_Document_body_wbg_body_7538539844356c1c_hfdaa805e8515038e(a:int):int;

import function js_sys_Function_new_no_args_wbg_newnoargs_f579424187aa1717_hcf9f4085601eba82(a:int, b:int):int;

import function js_sys_Function_call0_wbg_call_89558c3e96703ca1_h880e42c5f49a4da1(a:int, b:int):int;

import function js_sys_global_get_global_object_Global_get_global_this_wbg_globalThis_d61b1f48a57191ae_h426f02238436():int;

import function js_sys_global_get_global_object_Global_get_self_wbg_self_e23d74ae45fb17d1_hf09e6b542e39556b():int;

import function js_sys_global_get_global_object_Global_get_window_wbg_window_b4be7f48b24ac56e_h870102b02733e0cf():int;

import function js_sys_global_get_global_object_Global_get_global_wbg_global_e7669da72fd7f239_h45aa136fe6efc352():int;

import function wasm_bindgen_wbindgen_is_undefined_h80067d99dd27ecb2(a:int):int;

import function wasm_bindgen_wbindgen_object_clone_ref_h09704c30037b1bcd(a:int):int;

import function wasm_bindgen_wbindgen_object_drop_ref_h4d878503ff5d9264(a:int);

import function wasm_bindgen_wbindgen_throw_ha4b1f9432cf5af56(a:int, b:int);

function match_twenty_sign_MD5_hash_hd3cc2e6ebf304f6f(a:int, b:int, c:int) {
  var de:int;
  var xe:int_ptr;
  var ag:int;
  var ug:int_ptr;
  var xh:int;
  var ri:int_ptr;
  var uj:int;
  var qm:int;
  var nn:int_ptr;
  var ao:int;
  var ap:int;
  var xp:int_ptr;
  var kq:int;
  var kr:int;
  var hs:int_ptr;
  var us:int;
  var ut:int;
  var bx:int;
  var yx:int_ptr;
  var ly:int;
  var lz:int;
  var iaa:int_ptr;
  var vaa:int;
  var vba:int;
  var sca:int_ptr;
  var fda:int;
  var fea:int;
  var gha:int;
  var dia:int_ptr;
  var qia:int;
  var qja:int;
  var nka:int_ptr;
  var ala:int;
  var ama:int;
  var xma:int_ptr;
  var kna:int;
  var koa:int;
  var ufa:int;
  var d:int = g_a;
  var e:int = 928;
  var f:int = d - e;
  g_a = f;
  f[164]:int = b;
  f[165]:int = c;
  var g:int = 96;
  var h:int = f + g;
  var i:int = h;
  match_twenty_sign_MD5_padding_h9ac408e9498a8a44(i, b, c);
  var j:int = 1732584193;
  f[28]:int = j;
  var k:int = -271733879;
  f[29]:int = k;
  var l:int = -1732584194;
  f[30]:int = l;
  var m:int = 271733878;
  f[31]:int = m;
  var n:int = 88;
  var o:int = f + n;
  var p:int = 96;
  var q:int = f + p;
  alloc_vec_Vec_T_A_as_core_ops_deref_Deref_deref_h30bd18da80b67e7c(o, q);
  var r:int = f[23]:int;
  var s:int = f[22]:int;
  var t:int = 144;
  var u:int = f + t;
  var v:int = u;
  var w:int = 64;
  core_slice_impl_T_chunks_h903fd931d63b0a1f(v, s, r, w);
  var x:int = 128;
  var y:int = f + x;
  var z:int = y;
  var aa:int = 144;
  var ba:int = f + aa;
  var ca:int = ba;
  I_as_core_iter_collect_IntoIterator_into_iter_hbf288caaed930b74(z, ca);
  var da:int = 160;
  var ea:int = f + da;
  var fa:long_ptr@4 = ea;
  var ga:int = 128;
  var ha:int = f + ga;
  var ia:long_ptr@4 = ha;
  var nta:long = ia[0];
  fa[0] = nta;
  var ja:int = 8;
  var ka:int_ptr = fa + ja;
  var la:int_ptr = ia + ja;
  var ma:int = la[0];
  ka[0] = ma;
  loop L_a {
    var na:int = 80;
    var oa:int = f + na;
    var pa:int = 160;
    var qa:int = f + pa;
    core_slice_iter_Chunks_T_as_core_iter_iterator_Iterator_next_h20719db59d8af8b6(
      oa,
      qa);
    var ra:int = f[20]:int;
    var sa:int = f[21]:int;
    f[45]:int = sa;
    f[44]:int = ra;
    var ta:int = f[44]:int;
    var ua:int = 0;
    var va:int = ta != ua;
    br_table[B_d, B_c, ..B_d](va)
    label B_d:
    alloc_string_String_new_h583f567769abe97c(a);
    goto B_b;
    label B_c:
    var wa:int = f[44]:int;
    var xa:int = f[45]:int;
    f[166]:int = wa;
    f[167]:int = xa;
    f[168]:int = wa;
    f[169]:int = xa;
    f[170]:int = wa;
    f[171]:int = xa;
    var ya:int = 216;
    var za:int = f + ya;
    var ab:int = za;
    var bb:int = 4;
    core_slice_impl_T_chunks_h903fd931d63b0a1f(ab, wa, xa, bb);
    var cb:int = 200;
    var db:int = f + cb;
    var eb:int = db;
    var fb:int = 216;
    var gb:int = f + fb;
    var hb:int = gb;
    core_iter_iterator_Iterator_map_h5107fa9604aacbca(eb, hb);
    var ib:int = 184;
    var jb:int = f + ib;
    var kb:int = jb;
    var lb:int = 200;
    var mb:int = f + lb;
    var nb:int = mb;
    core_iter_iterator_Iterator_collect_hd595ea78ce0ec62b(kb, nb);
    var ob:int = f[28]:int;
    f[58]:int = ob;
    var pb:int = f[29]:int;
    f[59]:int = pb;
    var qb:int = f[30]:int;
    f[60]:int = qb;
    var rb:int = f[31]:int;
    f[61]:int = rb;
    var sb:int = 0;
    f[70]:int = sb;
    var tb:int = 16;
    f[71]:int = tb;
    var ub:int = f[70]:int;
    var vb:int = f[71]:int;
    var wb:int = 264;
    var xb:int = f + wb;
    var yb:int = xb;
    var zb:int = 4;
    core_iter_iterator_Iterator_step_by_hfa611ae80be08bc6(yb, ub, vb, zb);
    var ac:int = 248;
    var bc:int = f + ac;
    var cc:int = bc;
    var dc:int = 264;
    var ec:int = f + dc;
    var fc:int = ec;
    I_as_core_iter_collect_IntoIterator_into_iter_h1bc5167ff51c5e3e(cc, fc);
    var gc:int = 288;
    var hc:int = f + gc;
    var ic:long_ptr@4 = hc;
    var jc:int = 248;
    var kc:int = f + jc;
    var lc:long_ptr@4 = kc;
    var ota:long = lc[0];
    ic[0] = ota;
    var mc:int = 8;
    var nc:long_ptr@4 = ic + mc;
    var oc:long_ptr@4 = lc + mc;
    var pta:long = oc[0];
    nc[0] = pta;
    loop L_e {
      var pc:int = 72;
      var qc:int = f + pc;
      var rc:int = 288;
      var sc:int = f + rc;
      core_iter_adapters_step_by_StepBy_I_as_core_iter_iterator_Iterator_next_hf53707e22247256d(
        qc,
        sc);
      var tc:int = f[18]:int;
      var uc:int = f[19]:int;
      f[77]:int = uc;
      f[76]:int = tc;
      var vc:int = f[76]:int;
      br_table[B_h, B_g, ..B_h](vc)
      label B_h:
      var wc:int = 1;
      f[79]:int = wc;
      var xc:int = 0;
      f[88]:int = xc;
      var yc:int = 16;
      f[89]:int = yc;
      var zc:int = f[88]:int;
      var ad:int = f[89]:int;
      var bd:int = 336;
      var cd:int = f + bd;
      var dd:int = cd;
      var ed:int = 4;
      core_iter_iterator_Iterator_step_by_hfa611ae80be08bc6(dd, zc, ad, ed);
      goto B_f;
      label B_g:
      var fd:int = f[77]:int;
      f[172]:int = fd;
      f[173]:int = fd;
      f[174]:int = fd;
      var gd:int = f[58]:int;
      var hd:int = f[59]:int;
      var id:int = f[60]:int;
      var jd:int = f[61]:int;
      var kd:int = 184;
      var ld:int = f + kd;
      var md:int = ld;
      var nd:int = 1049796;
      var od:int = nd;
      var pd:int_ptr =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          md,
          fd,
          od);
      var qd:int = pd[0];
      var rd:int = 64;
      var sd:int = fd;
      var td:int = rd;
      var ud:int = sd < td;
      var vd:int = 1;
      var wd:int = ud & vd;
      if (eqz(wd)) goto B_j;
      var xd:int = 1049324;
      var yd:int = xd;
      var zd:int = 2;
      var ae:int = fd << zd;
      var be:int_ptr = yd + ae;
      var ce:int = be[0];
      f[192]:int = qd;
      f[193]:int = ce;
      de = qd + ce;
      goto B_i;
      label B_j:
      var ee:int = 64;
      var fe:int = 1049812;
      var ge:int = fe;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(fd, ee, ge);
      unreachable;
      label B_i:
      var he:int = 7;
      var ie:int =
        match_twenty_sign_ff_h987cd8ee6b2ffbed(gd, hd, id, jd, de, he);
      f[58]:int = ie;
      var je:int = f[61]:int;
      var ke:int = f[58]:int;
      var le:int = f[59]:int;
      var me:int = f[60]:int;
      var ne:int = 1;
      var oe:int = fd + ne;
      var pe:int = oe < fd;
      var qe:int = 1;
      var re:int = pe & qe;
      if (re) goto B_l;
      var se:int = 184;
      var te:int = f + se;
      var ue:int = te;
      var ve:int = 1049844;
      var we:int = ve;
      xe =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          ue,
          oe,
          we);
      goto B_k;
      label B_l:
      var ye:int = 1049696;
      var ze:int = ye;
      var af:int = 28;
      var bf:int = 1049828;
      var cf:int = bf;
      core_panicking_panic_hceae0c79b0247f98(ze, af, cf);
      unreachable;
      label B_k:
      var df:int = xe[0];
      var ef:int = 1;
      var ff:int = fd + ef;
      var gf:int = ff < fd;
      var hf:int = 1;
      var if:int = gf & hf;
      if (if) goto B_p;
      var jf:int = 64;
      var kf:int = ff;
      var lf:int = jf;
      var mf:int = kf < lf;
      var nf:int = 1;
      var of:int = mf & nf;
      if (of) goto B_o;
      goto B_n;
      label B_p:
      var pf:int = 1049696;
      var qf:int = pf;
      var rf:int = 28;
      var sf:int = 1049860;
      var tf:int = sf;
      core_panicking_panic_hceae0c79b0247f98(qf, rf, tf);
      unreachable;
      label B_o:
      var uf:int = 1049324;
      var vf:int = uf;
      var wf:int = 2;
      var xf:int = ff << wf;
      var yf:int_ptr = vf + xf;
      var zf:int = yf[0];
      f[200]:int = df;
      f[201]:int = zf;
      ag = df + zf;
      goto B_m;
      label B_n:
      var bg:int = 64;
      var cg:int = 1049876;
      var dg:int = cg;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(ff, bg, dg);
      unreachable;
      label B_m:
      var eg:int = 12;
      var fg:int =
        match_twenty_sign_ff_h987cd8ee6b2ffbed(je, ke, le, me, ag, eg);
      f[61]:int = fg;
      var gg:int = f[60]:int;
      var hg:int = f[61]:int;
      var ig:int = f[58]:int;
      var jg:int = f[59]:int;
      var kg:int = 2;
      var lg:int = fd + kg;
      var mg:int = lg < fd;
      var ng:int = 1;
      var og:int = mg & ng;
      if (og) goto B_r;
      var pg:int = 184;
      var qg:int = f + pg;
      var rg:int = qg;
      var sg:int = 1049908;
      var tg:int = sg;
      ug =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          rg,
          lg,
          tg);
      goto B_q;
      label B_r:
      var vg:int = 1049696;
      var wg:int = vg;
      var xg:int = 28;
      var yg:int = 1049892;
      var zg:int = yg;
      core_panicking_panic_hceae0c79b0247f98(wg, xg, zg);
      unreachable;
      label B_q:
      var ah:int = ug[0];
      var bh:int = 2;
      var ch:int = fd + bh;
      var dh:int = ch < fd;
      var eh:int = 1;
      var fh:int = dh & eh;
      if (fh) goto B_v;
      var gh:int = 64;
      var hh:int = ch;
      var ih:int = gh;
      var jh:int = hh < ih;
      var kh:int = 1;
      var lh:int = jh & kh;
      if (lh) goto B_u;
      goto B_t;
      label B_v:
      var mh:int = 1049696;
      var nh:int = mh;
      var oh:int = 28;
      var ph:int = 1049924;
      var qh:int = ph;
      core_panicking_panic_hceae0c79b0247f98(nh, oh, qh);
      unreachable;
      label B_u:
      var rh:int = 1049324;
      var sh:int = rh;
      var th:int = 2;
      var uh:int = ch << th;
      var vh:int_ptr = sh + uh;
      var wh:int = vh[0];
      f[204]:int = ah;
      f[205]:int = wh;
      xh = ah + wh;
      goto B_s;
      label B_t:
      var yh:int = 64;
      var zh:int = 1049940;
      var ai:int = zh;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(ch, yh, ai);
      unreachable;
      label B_s:
      var bi:int = 17;
      var ci:int =
        match_twenty_sign_ff_h987cd8ee6b2ffbed(gg, hg, ig, jg, xh, bi);
      f[60]:int = ci;
      var di:int = f[59]:int;
      var ei:int = f[60]:int;
      var fi:int = f[61]:int;
      var gi:int = f[58]:int;
      var hi:int = 3;
      var ii:int = fd + hi;
      var ji:int = ii < fd;
      var ki:int = 1;
      var li:int = ji & ki;
      if (li) goto B_x;
      var mi:int = 184;
      var ni:int = f + mi;
      var oi:int = ni;
      var pi:int = 1049972;
      var qi:int = pi;
      ri =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          oi,
          ii,
          qi);
      goto B_w;
      label B_x:
      var si:int = 1049696;
      var ti:int = si;
      var ui:int = 28;
      var vi:int = 1049956;
      var wi:int = vi;
      core_panicking_panic_hceae0c79b0247f98(ti, ui, wi);
      unreachable;
      label B_w:
      var xi:int = ri[0];
      var yi:int = 3;
      var zi:int = fd + yi;
      var aj:int = zi < fd;
      var bj:int = 1;
      var cj:int = aj & bj;
      if (cj) goto B_ba;
      var dj:int = 64;
      var ej:int = zi;
      var fj:int = dj;
      var gj:int = ej < fj;
      var hj:int = 1;
      var ij:int = gj & hj;
      if (ij) goto B_aa;
      goto B_z;
      label B_ba:
      var jj:int = 1049696;
      var kj:int = jj;
      var lj:int = 28;
      var mj:int = 1049988;
      var nj:int = mj;
      core_panicking_panic_hceae0c79b0247f98(kj, lj, nj);
      unreachable;
      label B_aa:
      var oj:int = 1049324;
      var pj:int = oj;
      var qj:int = 2;
      var rj:int = zi << qj;
      var sj:int_ptr = pj + rj;
      var tj:int = sj[0];
      f[208]:int = xi;
      f[209]:int = tj;
      uj = xi + tj;
      goto B_y;
      label B_z:
      var vj:int = 64;
      var wj:int = 1050004;
      var xj:int = wj;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(zi, vj, xj);
      unreachable;
      label B_y:
      var yj:int = 22;
      var zj:int =
        match_twenty_sign_ff_h987cd8ee6b2ffbed(di, ei, fi, gi, uj, yj);
      f[59]:int = zj;
      continue L_e;
      label B_f:
    }
    var ak:int = 320;
    var bk:int = f + ak;
    var ck:int = bk;
    var dk:int = 336;
    var ek:int = f + dk;
    var fk:int = ek;
    I_as_core_iter_collect_IntoIterator_into_iter_h1bc5167ff51c5e3e(ck, fk);
    var gk:int = 360;
    var hk:int = f + gk;
    var ik:long_ptr@4 = hk;
    var jk:int = 320;
    var kk:int = f + jk;
    var lk:long_ptr@4 = kk;
    var qta:long = lk[0];
    ik[0] = qta;
    var mk:int = 8;
    var nk:long_ptr@4 = ik + mk;
    var ok:long_ptr@4 = lk + mk;
    var rta:long = ok[0];
    nk[0] = rta;
    loop L_da {
      var pk:int = 64;
      var qk:int = f + pk;
      var rk:int = 360;
      var sk:int = f + rk;
      core_iter_adapters_step_by_StepBy_I_as_core_iter_iterator_Iterator_next_hf53707e22247256d(
        qk,
        sk);
      var tk:int = f[16]:int;
      var uk:int = f[17]:int;
      f[95]:int = uk;
      f[94]:int = tk;
      var vk:int = f[94]:int;
      br_table[B_fa, B_ea, ..B_fa](vk)
      label B_fa:
      var wk:int = 5;
      f[79]:int = wk;
      var xk:int = 0;
      f[104]:int = xk;
      var yk:int = 16;
      f[105]:int = yk;
      var zk:int = f[104]:int;
      var al:int = f[105]:int;
      var bl:int = 400;
      var cl:int = f + bl;
      var dl:int = cl;
      var el:int = 4;
      core_iter_iterator_Iterator_step_by_hfa611ae80be08bc6(dl, zk, al, el);
      goto B_ca;
      label B_ea:
      var fl:int = f[95]:int;
      f[175]:int = fl;
      f[176]:int = fl;
      f[177]:int = fl;
      var gl:int = f[58]:int;
      var hl:int = f[59]:int;
      var il:int = f[60]:int;
      var jl:int = f[61]:int;
      var kl:int = f[79]:int;
      var ll:int = 15;
      var ml:int = kl & ll;
      var nl:int = 184;
      var ol:int = f + nl;
      var pl:int = ol;
      var ql:int = 1050020;
      var rl:int = ql;
      var sl:int_ptr =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          pl,
          ml,
          rl);
      var tl:int = sl[0];
      var ul:int = 16;
      var vl:int = fl + ul;
      var wl:int = vl < fl;
      var xl:int = 1;
      var yl:int = wl & xl;
      if (yl) goto B_ja;
      var zl:int = 64;
      var am:int = vl;
      var bm:int = zl;
      var cm:int = am < bm;
      var dm:int = 1;
      var em:int = cm & dm;
      if (em) goto B_ia;
      goto B_ha;
      label B_ja:
      var fm:int = 1049696;
      var gm:int = fm;
      var hm:int = 28;
      var im:int = 1050036;
      var jm:int = im;
      core_panicking_panic_hceae0c79b0247f98(gm, hm, jm);
      unreachable;
      label B_ia:
      var km:int = 1049324;
      var lm:int = km;
      var mm:int = 2;
      var nm:int = vl << mm;
      var om:int_ptr = lm + nm;
      var pm:int = om[0];
      f[212]:int = tl;
      f[213]:int = pm;
      qm = tl + pm;
      goto B_ga;
      label B_ha:
      var rm:int = 64;
      var sm:int = 1050052;
      var tm:int = sm;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(vl, rm, tm);
      unreachable;
      label B_ga:
      var um:int = 5;
      var vm:int =
        match_twenty_sign_gg_h0bc14fece0614bb7(gl, hl, il, jl, qm, um);
      f[58]:int = vm;
      var wm:int = f[61]:int;
      var xm:int = f[58]:int;
      var ym:int = f[59]:int;
      var zm:int = f[60]:int;
      var an:int = f[79]:int;
      var bn:int = 5;
      var cn:int = an + bn;
      var dn:int = cn < an;
      var en:int = 1;
      var fn:int = dn & en;
      if (fn) goto B_la;
      var gn:int = 15;
      var hn:int = cn & gn;
      var in:int = 184;
      var jn:int = f + in;
      var kn:int = jn;
      var ln:int = 1050084;
      var mn:int = ln;
      nn =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          kn,
          hn,
          mn);
      goto B_ka;
      label B_la:
      var on:int = 1049696;
      var pn:int = on;
      var qn:int = 28;
      var rn:int = 1050068;
      var sn:int = rn;
      core_panicking_panic_hceae0c79b0247f98(pn, qn, sn);
      unreachable;
      label B_ka:
      var tn:int = nn[0];
      var un:int = 16;
      var vn:int = fl + un;
      var wn:int = vn < fl;
      var xn:int = 1;
      var yn:int = wn & xn;
      if (yn) goto B_ra;
      var zn:int = 1;
      ao = vn + zn;
      var bo:int = ao < vn;
      var co:int = 1;
      var do:int = bo & co;
      if (do) goto B_pa;
      goto B_qa;
      label B_ra:
      var eo:int = 1049696;
      var fo:int = eo;
      var go:int = 28;
      var ho:int = 1050100;
      var io:int = ho;
      core_panicking_panic_hceae0c79b0247f98(fo, go, io);
      unreachable;
      label B_qa:
      var jo:int = 64;
      var ko:int = ao;
      var lo:int = jo;
      var mo:int = ko < lo;
      var no:int = 1;
      var oo:int = mo & no;
      if (oo) goto B_oa;
      goto B_na;
      label B_pa:
      var po:int = 1049696;
      var qo:int = po;
      var ro:int = 28;
      var so:int = 1050100;
      var to:int = so;
      core_panicking_panic_hceae0c79b0247f98(qo, ro, to);
      unreachable;
      label B_oa:
      var uo:int = 1049324;
      var vo:int = uo;
      var wo:int = 2;
      var xo:int = ao << wo;
      var yo:int_ptr = vo + xo;
      var zo:int = yo[0];
      f[218]:int = tn;
      f[219]:int = zo;
      ap = tn + zo;
      goto B_ma;
      label B_na:
      var bp:int = 64;
      var cp:int = 1050116;
      var dp:int = cp;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(ao, bp, dp);
      unreachable;
      label B_ma:
      var ep:int = 9;
      var fp:int =
        match_twenty_sign_gg_h0bc14fece0614bb7(wm, xm, ym, zm, ap, ep);
      f[61]:int = fp;
      var gp:int = f[60]:int;
      var hp:int = f[61]:int;
      var ip:int = f[58]:int;
      var jp:int = f[59]:int;
      var kp:int = f[79]:int;
      var lp:int = 10;
      var mp:int = kp + lp;
      var np:int = mp < kp;
      var op:int = 1;
      var pp:int = np & op;
      if (pp) goto B_ta;
      var qp:int = 15;
      var rp:int = mp & qp;
      var sp:int = 184;
      var tp:int = f + sp;
      var up:int = tp;
      var vp:int = 1050148;
      var wp:int = vp;
      xp =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          up,
          rp,
          wp);
      goto B_sa;
      label B_ta:
      var yp:int = 1049696;
      var zp:int = yp;
      var aq:int = 28;
      var bq:int = 1050132;
      var cq:int = bq;
      core_panicking_panic_hceae0c79b0247f98(zp, aq, cq);
      unreachable;
      label B_sa:
      var dq:int = xp[0];
      var eq:int = 16;
      var fq:int = fl + eq;
      var gq:int = fq < fl;
      var hq:int = 1;
      var iq:int = gq & hq;
      if (iq) goto B_za;
      var jq:int = 2;
      kq = fq + jq;
      var lq:int = kq < fq;
      var mq:int = 1;
      var nq:int = lq & mq;
      if (nq) goto B_xa;
      goto B_ya;
      label B_za:
      var oq:int = 1049696;
      var pq:int = oq;
      var qq:int = 28;
      var rq:int = 1050164;
      var sq:int = rq;
      core_panicking_panic_hceae0c79b0247f98(pq, qq, sq);
      unreachable;
      label B_ya:
      var tq:int = 64;
      var uq:int = kq;
      var vq:int = tq;
      var wq:int = uq < vq;
      var xq:int = 1;
      var yq:int = wq & xq;
      if (yq) goto B_wa;
      goto B_va;
      label B_xa:
      var zq:int = 1049696;
      var ar:int = zq;
      var br:int = 28;
      var cr:int = 1050164;
      var dr:int = cr;
      core_panicking_panic_hceae0c79b0247f98(ar, br, dr);
      unreachable;
      label B_wa:
      var er:int = 1049324;
      var fr:int = er;
      var gr:int = 2;
      var hr:int = kq << gr;
      var ir:int_ptr = fr + hr;
      var jr:int = ir[0];
      f[222]:int = dq;
      f[223]:int = jr;
      kr = dq + jr;
      goto B_ua;
      label B_va:
      var lr:int = 64;
      var mr:int = 1050180;
      var nr:int = mr;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(kq, lr, nr);
      unreachable;
      label B_ua:
      var or:int = 14;
      var pr:int =
        match_twenty_sign_gg_h0bc14fece0614bb7(gp, hp, ip, jp, kr, or);
      f[60]:int = pr;
      var qr:int = f[59]:int;
      var rr:int = f[60]:int;
      var sr:int = f[61]:int;
      var tr:int = f[58]:int;
      var ur:int = f[79]:int;
      var vr:int = 15;
      var wr:int = ur + vr;
      var xr:int = wr < ur;
      var yr:int = 1;
      var zr:int = xr & yr;
      if (zr) goto B_bb;
      var as:int = 15;
      var bs:int = wr & as;
      var cs:int = 184;
      var ds:int = f + cs;
      var es:int = ds;
      var fs:int = 1050212;
      var gs:int = fs;
      hs =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          es,
          bs,
          gs);
      goto B_ab;
      label B_bb:
      var is:int = 1049696;
      var js:int = is;
      var ks:int = 28;
      var ls:int = 1050196;
      var ms:int = ls;
      core_panicking_panic_hceae0c79b0247f98(js, ks, ms);
      unreachable;
      label B_ab:
      var ns:int = hs[0];
      var os:int = 16;
      var ps:int = fl + os;
      var qs:int = ps < fl;
      var rs:int = 1;
      var ss:int = qs & rs;
      if (ss) goto B_hb;
      var ts:int = 3;
      us = ps + ts;
      var vs:int = us < ps;
      var ws:int = 1;
      var xs:int = vs & ws;
      if (xs) goto B_fb;
      goto B_gb;
      label B_hb:
      var ys:int = 1049696;
      var zs:int = ys;
      var at:int = 28;
      var bt:int = 1050228;
      var ct:int = bt;
      core_panicking_panic_hceae0c79b0247f98(zs, at, ct);
      unreachable;
      label B_gb:
      var dt:int = 64;
      var et:int = us;
      var ft:int = dt;
      var gt:int = et < ft;
      var ht:int = 1;
      var it:int = gt & ht;
      if (it) goto B_eb;
      goto B_db;
      label B_fb:
      var jt:int = 1049696;
      var kt:int = jt;
      var lt:int = 28;
      var mt:int = 1050228;
      var nt:int = mt;
      core_panicking_panic_hceae0c79b0247f98(kt, lt, nt);
      unreachable;
      label B_eb:
      var ot:int = 1049324;
      var pt:int = ot;
      var qt:int = 2;
      var rt:int = us << qt;
      var st:int_ptr = pt + rt;
      var tt:int = st[0];
      f[226]:int = ns;
      f[227]:int = tt;
      ut = ns + tt;
      goto B_cb;
      label B_db:
      var vt:int = 64;
      var wt:int = 1050244;
      var xt:int = wt;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(us, vt, xt);
      unreachable;
      label B_cb:
      var yt:int = 20;
      var zt:int =
        match_twenty_sign_gg_h0bc14fece0614bb7(qr, rr, sr, tr, ut, yt);
      f[59]:int = zt;
      var au:int = f[79]:int;
      var bu:int = 20;
      var cu:int = au + bu;
      var du:int = cu < au;
      var eu:int = 1;
      var fu:int = du & eu;
      if (fu) goto B_ib;
      f[79]:int = cu;
      continue L_da;
      label B_ib:
    }
    var gu:int = 1049696;
    var hu:int = gu;
    var iu:int = 28;
    var ju:int = 1050260;
    var ku:int = ju;
    core_panicking_panic_hceae0c79b0247f98(hu, iu, ku);
    unreachable;
    label B_ca:
    var lu:int = 384;
    var mu:int = f + lu;
    var nu:int = mu;
    var ou:int = 400;
    var pu:int = f + ou;
    var qu:int = pu;
    I_as_core_iter_collect_IntoIterator_into_iter_h1bc5167ff51c5e3e(nu, qu);
    var ru:int = 424;
    var su:int = f + ru;
    var tu:long_ptr@4 = su;
    var uu:int = 384;
    var vu:int = f + uu;
    var wu:long_ptr@4 = vu;
    var sta:long = wu[0];
    tu[0] = sta;
    var xu:int = 8;
    var yu:long_ptr@4 = tu + xu;
    var zu:long_ptr@4 = wu + xu;
    var tta:long = zu[0];
    yu[0] = tta;
    loop L_kb {
      var av:int = 56;
      var bv:int = f + av;
      var cv:int = 424;
      var dv:int = f + cv;
      core_iter_adapters_step_by_StepBy_I_as_core_iter_iterator_Iterator_next_hf53707e22247256d(
        bv,
        dv);
      var ev:int = f[14]:int;
      var fv:int = f[15]:int;
      f[111]:int = fv;
      f[110]:int = ev;
      var gv:int = f[110]:int;
      br_table[B_mb, B_lb, ..B_mb](gv)
      label B_mb:
      var hv:int = 0;
      f[79]:int = hv;
      var iv:int = 0;
      f[120]:int = iv;
      var jv:int = 16;
      f[121]:int = jv;
      var kv:int = f[120]:int;
      var lv:int = f[121]:int;
      var mv:int = 464;
      var nv:int = f + mv;
      var ov:int = nv;
      var pv:int = 4;
      core_iter_iterator_Iterator_step_by_hfa611ae80be08bc6(ov, kv, lv, pv);
      goto B_jb;
      label B_lb:
      var qv:int = f[111]:int;
      f[178]:int = qv;
      f[179]:int = qv;
      f[180]:int = qv;
      var rv:int = f[58]:int;
      var sv:int = f[59]:int;
      var tv:int = f[60]:int;
      var uv:int = f[61]:int;
      var vv:int = f[79]:int;
      var wv:int = 15;
      var xv:int = vv & wv;
      var yv:int = 184;
      var zv:int = f + yv;
      var aw:int = zv;
      var bw:int = 1050276;
      var cw:int = bw;
      var dw:int_ptr =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          aw,
          xv,
          cw);
      var ew:int = dw[0];
      var fw:int = 32;
      var gw:int = qv + fw;
      var hw:int = gw < qv;
      var iw:int = 1;
      var jw:int = hw & iw;
      if (jw) goto B_qb;
      var kw:int = 64;
      var lw:int = gw;
      var mw:int = kw;
      var nw:int = lw < mw;
      var ow:int = 1;
      var pw:int = nw & ow;
      if (pw) goto B_pb;
      goto B_ob;
      label B_qb:
      var qw:int = 1049696;
      var rw:int = qw;
      var sw:int = 28;
      var tw:int = 1050292;
      var uw:int = tw;
      core_panicking_panic_hceae0c79b0247f98(rw, sw, uw);
      unreachable;
      label B_pb:
      var vw:int = 1049324;
      var ww:int = vw;
      var xw:int = 2;
      var yw:int = gw << xw;
      var zw:int_ptr = ww + yw;
      var ax:int = zw[0];
      f[230]:int = ew;
      f[231]:int = ax;
      bx = ew + ax;
      goto B_nb;
      label B_ob:
      var cx:int = 64;
      var dx:int = 1050308;
      var ex:int = dx;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(gw, cx, ex);
      unreachable;
      label B_nb:
      var fx:int = 4;
      var gx:int =
        match_twenty_sign_hh_hab51d95fe96a8025(rv, sv, tv, uv, bx, fx);
      f[58]:int = gx;
      var hx:int = f[61]:int;
      var ix:int = f[58]:int;
      var jx:int = f[59]:int;
      var kx:int = f[60]:int;
      var lx:int = f[79]:int;
      var mx:int = 3;
      var nx:int = lx + mx;
      var ox:int = nx < lx;
      var px:int = 1;
      var qx:int = ox & px;
      if (qx) goto B_sb;
      var rx:int = 15;
      var sx:int = nx & rx;
      var tx:int = 184;
      var ux:int = f + tx;
      var vx:int = ux;
      var wx:int = 1050340;
      var xx:int = wx;
      yx =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          vx,
          sx,
          xx);
      goto B_rb;
      label B_sb:
      var zx:int = 1049696;
      var ay:int = zx;
      var by:int = 28;
      var cy:int = 1050324;
      var dy:int = cy;
      core_panicking_panic_hceae0c79b0247f98(ay, by, dy);
      unreachable;
      label B_rb:
      var ey:int = yx[0];
      var fy:int = 32;
      var gy:int = qv + fy;
      var hy:int = gy < qv;
      var iy:int = 1;
      var jy:int = hy & iy;
      if (jy) goto B_yb;
      var ky:int = 1;
      ly = gy + ky;
      var my:int = ly < gy;
      var ny:int = 1;
      var oy:int = my & ny;
      if (oy) goto B_wb;
      goto B_xb;
      label B_yb:
      var py:int = 1049696;
      var qy:int = py;
      var ry:int = 28;
      var sy:int = 1050356;
      var ty:int = sy;
      core_panicking_panic_hceae0c79b0247f98(qy, ry, ty);
      unreachable;
      label B_xb:
      var uy:int = 64;
      var vy:int = ly;
      var wy:int = uy;
      var xy:int = vy < wy;
      var yy:int = 1;
      var zy:int = xy & yy;
      if (zy) goto B_vb;
      goto B_ub;
      label B_wb:
      var az:int = 1049696;
      var bz:int = az;
      var cz:int = 28;
      var dz:int = 1050356;
      var ez:int = dz;
      core_panicking_panic_hceae0c79b0247f98(bz, cz, ez);
      unreachable;
      label B_vb:
      var fz:int = 1049324;
      var gz:int = fz;
      var hz:int = 2;
      var iz:int = ly << hz;
      var jz:int_ptr = gz + iz;
      var kz:int = jz[0];
      f[228]:int = ey;
      f[229]:int = kz;
      lz = ey + kz;
      goto B_tb;
      label B_ub:
      var mz:int = 64;
      var nz:int = 1050372;
      var oz:int = nz;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(ly, mz, oz);
      unreachable;
      label B_tb:
      var pz:int = 11;
      var qz:int =
        match_twenty_sign_hh_hab51d95fe96a8025(hx, ix, jx, kx, lz, pz);
      f[61]:int = qz;
      var rz:int = f[60]:int;
      var sz:int = f[61]:int;
      var tz:int = f[58]:int;
      var uz:int = f[59]:int;
      var vz:int = f[79]:int;
      var wz:int = 6;
      var xz:int = vz + wz;
      var yz:int = xz < vz;
      var zz:int = 1;
      var aaa:int = yz & zz;
      if (aaa) goto B_ac;
      var baa:int = 15;
      var caa:int = xz & baa;
      var daa:int = 184;
      var eaa:int = f + daa;
      var faa:int = eaa;
      var gaa:int = 1050404;
      var haa:int = gaa;
      iaa =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          faa,
          caa,
          haa);
      goto B_zb;
      label B_ac:
      var jaa:int = 1049696;
      var kaa:int = jaa;
      var laa:int = 28;
      var maa:int = 1050388;
      var naa:int = maa;
      core_panicking_panic_hceae0c79b0247f98(kaa, laa, naa);
      unreachable;
      label B_zb:
      var oaa:int = iaa[0];
      var paa:int = 32;
      var qaa:int = qv + paa;
      var raa:int = qaa < qv;
      var saa:int = 1;
      var taa:int = raa & saa;
      if (taa) goto B_gc;
      var uaa:int = 2;
      vaa = qaa + uaa;
      var waa:int = vaa < qaa;
      var xaa:int = 1;
      var yaa:int = waa & xaa;
      if (yaa) goto B_ec;
      goto B_fc;
      label B_gc:
      var zaa:int = 1049696;
      var aba:int = zaa;
      var bba:int = 28;
      var cba:int = 1050420;
      var dba:int = cba;
      core_panicking_panic_hceae0c79b0247f98(aba, bba, dba);
      unreachable;
      label B_fc:
      var eba:int = 64;
      var fba:int = vaa;
      var gba:int = eba;
      var hba:int = fba < gba;
      var iba:int = 1;
      var jba:int = hba & iba;
      if (jba) goto B_dc;
      goto B_cc;
      label B_ec:
      var kba:int = 1049696;
      var lba:int = kba;
      var mba:int = 28;
      var nba:int = 1050420;
      var oba:int = nba;
      core_panicking_panic_hceae0c79b0247f98(lba, mba, oba);
      unreachable;
      label B_dc:
      var pba:int = 1049324;
      var qba:int = pba;
      var rba:int = 2;
      var sba:int = vaa << rba;
      var tba:int_ptr = qba + sba;
      var uba:int = tba[0];
      f[224]:int = oaa;
      f[225]:int = uba;
      vba = oaa + uba;
      goto B_bc;
      label B_cc:
      var wba:int = 64;
      var xba:int = 1050436;
      var yba:int = xba;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(vaa, wba, yba);
      unreachable;
      label B_bc:
      var zba:int = 16;
      var aca:int =
        match_twenty_sign_hh_hab51d95fe96a8025(rz, sz, tz, uz, vba, zba);
      f[60]:int = aca;
      var bca:int = f[59]:int;
      var cca:int = f[60]:int;
      var dca:int = f[61]:int;
      var eca:int = f[58]:int;
      var fca:int = f[79]:int;
      var gca:int = 9;
      var hca:int = fca + gca;
      var ica:int = hca < fca;
      var jca:int = 1;
      var kca:int = ica & jca;
      if (kca) goto B_ic;
      var lca:int = 15;
      var mca:int = hca & lca;
      var nca:int = 184;
      var oca:int = f + nca;
      var pca:int = oca;
      var qca:int = 1050468;
      var rca:int = qca;
      sca =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          pca,
          mca,
          rca);
      goto B_hc;
      label B_ic:
      var tca:int = 1049696;
      var uca:int = tca;
      var vca:int = 28;
      var wca:int = 1050452;
      var xca:int = wca;
      core_panicking_panic_hceae0c79b0247f98(uca, vca, xca);
      unreachable;
      label B_hc:
      var yca:int = sca[0];
      var zca:int = 32;
      var ada:int = qv + zca;
      var bda:int = ada < qv;
      var cda:int = 1;
      var dda:int = bda & cda;
      if (dda) goto B_oc;
      var eda:int = 3;
      fda = ada + eda;
      var gda:int = fda < ada;
      var hda:int = 1;
      var ida:int = gda & hda;
      if (ida) goto B_mc;
      goto B_nc;
      label B_oc:
      var jda:int = 1049696;
      var kda:int = jda;
      var lda:int = 28;
      var mda:int = 1050484;
      var nda:int = mda;
      core_panicking_panic_hceae0c79b0247f98(kda, lda, nda);
      unreachable;
      label B_nc:
      var oda:int = 64;
      var pda:int = fda;
      var qda:int = oda;
      var rda:int = pda < qda;
      var sda:int = 1;
      var tda:int = rda & sda;
      if (tda) goto B_lc;
      goto B_kc;
      label B_mc:
      var uda:int = 1049696;
      var vda:int = uda;
      var wda:int = 28;
      var xda:int = 1050484;
      var yda:int = xda;
      core_panicking_panic_hceae0c79b0247f98(vda, wda, yda);
      unreachable;
      label B_lc:
      var zda:int = 1049324;
      var aea:int = zda;
      var bea:int = 2;
      var cea:int = fda << bea;
      var dea:int_ptr = aea + cea;
      var eea:int = dea[0];
      f[220]:int = yca;
      f[221]:int = eea;
      fea = yca + eea;
      goto B_jc;
      label B_kc:
      var gea:int = 64;
      var hea:int = 1050500;
      var iea:int = hea;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(fda, gea, iea);
      unreachable;
      label B_jc:
      var jea:int = 23;
      var kea:int =
        match_twenty_sign_hh_hab51d95fe96a8025(bca, cca, dca, eca, fea, jea);
      f[59]:int = kea;
      var lea:int = f[79]:int;
      var mea:int = 12;
      var nea:int = lea + mea;
      var oea:int = nea < lea;
      var pea:int = 1;
      var qea:int = oea & pea;
      if (qea) goto B_pc;
      f[79]:int = nea;
      continue L_kb;
      label B_pc:
    }
    var rea:int = 1049696;
    var sea:int = rea;
    var tea:int = 28;
    var uea:int = 1050516;
    var vea:int = uea;
    core_panicking_panic_hceae0c79b0247f98(sea, tea, vea);
    unreachable;
    label B_jb:
    var wea:int = 448;
    var xea:int = f + wea;
    var yea:int = xea;
    var zea:int = 464;
    var afa:int = f + zea;
    var bfa:int = afa;
    I_as_core_iter_collect_IntoIterator_into_iter_h1bc5167ff51c5e3e(yea,
                                                                    bfa);
    var cfa:int = 488;
    var dfa:int = f + cfa;
    var efa:long_ptr@4 = dfa;
    var ffa:int = 448;
    var gfa:int = f + ffa;
    var hfa:long_ptr@4 = gfa;
    var uta:long = hfa[0];
    efa[0] = uta;
    var ifa:int = 8;
    var jfa:long_ptr@4 = efa + ifa;
    var kfa:long_ptr@4 = hfa + ifa;
    var vta:long = kfa[0];
    jfa[0] = vta;
    loop L_rc {
      var lfa:int = 48;
      var mfa:int = f + lfa;
      var nfa:int = 488;
      var ofa:int = f + nfa;
      core_iter_adapters_step_by_StepBy_I_as_core_iter_iterator_Iterator_next_hf53707e22247256d(
        mfa,
        ofa);
      var pfa:int = f[12]:int;
      var qfa:int = f[13]:int;
      f[127]:int = qfa;
      f[126]:int = pfa;
      var rfa:int = f[126]:int;
      br_table[B_tc, B_sc, ..B_tc](rfa)
      label B_tc:
      var sfa:int = f[28]:int;
      var tfa:int = f[58]:int;
      f[216]:int = sfa;
      f[217]:int = tfa;
      ufa = sfa + tfa;
      goto B_qc;
      label B_sc:
      var vfa:int = f[127]:int;
      f[181]:int = vfa;
      f[182]:int = vfa;
      f[183]:int = vfa;
      var wfa:int = f[58]:int;
      var xfa:int = f[59]:int;
      var yfa:int = f[60]:int;
      var zfa:int = f[61]:int;
      var aga:int = f[79]:int;
      var bga:int = 15;
      var cga:int = aga & bga;
      var dga:int = 184;
      var ega:int = f + dga;
      var fga:int = ega;
      var gga:int = 1050532;
      var hga:int = gga;
      var iga:int_ptr =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          fga,
          cga,
          hga);
      var jga:int = iga[0];
      var kga:int = 48;
      var lga:int = vfa + kga;
      var mga:int = lga < vfa;
      var nga:int = 1;
      var oga:int = mga & nga;
      if (oga) goto B_xc;
      var pga:int = 64;
      var qga:int = lga;
      var rga:int = pga;
      var sga:int = qga < rga;
      var tga:int = 1;
      var uga:int = sga & tga;
      if (uga) goto B_wc;
      goto B_vc;
      label B_xc:
      var vga:int = 1049696;
      var wga:int = vga;
      var xga:int = 28;
      var yga:int = 1050548;
      var zga:int = yga;
      core_panicking_panic_hceae0c79b0247f98(wga, xga, zga);
      unreachable;
      label B_wc:
      var aha:int = 1049324;
      var bha:int = aha;
      var cha:int = 2;
      var dha:int = lga << cha;
      var eha:int_ptr = bha + dha;
      var fha:int = eha[0];
      f[214]:int = jga;
      f[215]:int = fha;
      gha = jga + fha;
      goto B_uc;
      label B_vc:
      var hha:int = 64;
      var iha:int = 1050564;
      var jha:int = iha;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(lga, hha, jha);
      unreachable;
      label B_uc:
      var kha:int = 6;
      var lha:int =
        match_twenty_sign_ii_h842e08d6d70c5e90(wfa, xfa, yfa, zfa, gha, kha);
      f[58]:int = lha;
      var mha:int = f[61]:int;
      var nha:int = f[58]:int;
      var oha:int = f[59]:int;
      var pha:int = f[60]:int;
      var qha:int = f[79]:int;
      var rha:int = 7;
      var sha:int = qha + rha;
      var tha:int = sha < qha;
      var uha:int = 1;
      var vha:int = tha & uha;
      if (vha) goto B_zc;
      var wha:int = 15;
      var xha:int = sha & wha;
      var yha:int = 184;
      var zha:int = f + yha;
      var aia:int = zha;
      var bia:int = 1050596;
      var cia:int = bia;
      dia =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          aia,
          xha,
          cia);
      goto B_yc;
      label B_zc:
      var eia:int = 1049696;
      var fia:int = eia;
      var gia:int = 28;
      var hia:int = 1050580;
      var iia:int = hia;
      core_panicking_panic_hceae0c79b0247f98(fia, gia, iia);
      unreachable;
      label B_yc:
      var jia:int = dia[0];
      var kia:int = 48;
      var lia:int = vfa + kia;
      var mia:int = lia < vfa;
      var nia:int = 1;
      var oia:int = mia & nia;
      if (oia) goto B_fd;
      var pia:int = 1;
      qia = lia + pia;
      var ria:int = qia < lia;
      var sia:int = 1;
      var tia:int = ria & sia;
      if (tia) goto B_dd;
      goto B_ed;
      label B_fd:
      var uia:int = 1049696;
      var via:int = uia;
      var wia:int = 28;
      var xia:int = 1050612;
      var yia:int = xia;
      core_panicking_panic_hceae0c79b0247f98(via, wia, yia);
      unreachable;
      label B_ed:
      var zia:int = 64;
      var aja:int = qia;
      var bja:int = zia;
      var cja:int = aja < bja;
      var dja:int = 1;
      var eja:int = cja & dja;
      if (eja) goto B_cd;
      goto B_bd;
      label B_dd:
      var fja:int = 1049696;
      var gja:int = fja;
      var hja:int = 28;
      var ija:int = 1050612;
      var jja:int = ija;
      core_panicking_panic_hceae0c79b0247f98(gja, hja, jja);
      unreachable;
      label B_cd:
      var kja:int = 1049324;
      var lja:int = kja;
      var mja:int = 2;
      var nja:int = qia << mja;
      var oja:int_ptr = lja + nja;
      var pja:int = oja[0];
      f[210]:int = jia;
      f[211]:int = pja;
      qja = jia + pja;
      goto B_ad;
      label B_bd:
      var rja:int = 64;
      var sja:int = 1050628;
      var tja:int = sja;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(qia, rja, tja);
      unreachable;
      label B_ad:
      var uja:int = 10;
      var vja:int =
        match_twenty_sign_ii_h842e08d6d70c5e90(mha, nha, oha, pha, qja, uja);
      f[61]:int = vja;
      var wja:int = f[60]:int;
      var xja:int = f[61]:int;
      var yja:int = f[58]:int;
      var zja:int = f[59]:int;
      var aka:int = f[79]:int;
      var bka:int = 14;
      var cka:int = aka + bka;
      var dka:int = cka < aka;
      var eka:int = 1;
      var fka:int = dka & eka;
      if (fka) goto B_hd;
      var gka:int = 15;
      var hka:int = cka & gka;
      var ika:int = 184;
      var jka:int = f + ika;
      var kka:int = jka;
      var lka:int = 1050660;
      var mka:int = lka;
      nka =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          kka,
          hka,
          mka);
      goto B_gd;
      label B_hd:
      var oka:int = 1049696;
      var pka:int = oka;
      var qka:int = 28;
      var rka:int = 1050644;
      var ska:int = rka;
      core_panicking_panic_hceae0c79b0247f98(pka, qka, ska);
      unreachable;
      label B_gd:
      var tka:int = nka[0];
      var uka:int = 48;
      var vka:int = vfa + uka;
      var wka:int = vka < vfa;
      var xka:int = 1;
      var yka:int = wka & xka;
      if (yka) goto B_nd;
      var zka:int = 2;
      ala = vka + zka;
      var bla:int = ala < vka;
      var cla:int = 1;
      var dla:int = bla & cla;
      if (dla) goto B_ld;
      goto B_md;
      label B_nd:
      var ela:int = 1049696;
      var fla:int = ela;
      var gla:int = 28;
      var hla:int = 1050676;
      var ila:int = hla;
      core_panicking_panic_hceae0c79b0247f98(fla, gla, ila);
      unreachable;
      label B_md:
      var jla:int = 64;
      var kla:int = ala;
      var lla:int = jla;
      var mla:int = kla < lla;
      var nla:int = 1;
      var ola:int = mla & nla;
      if (ola) goto B_kd;
      goto B_jd;
      label B_ld:
      var pla:int = 1049696;
      var qla:int = pla;
      var rla:int = 28;
      var sla:int = 1050676;
      var tla:int = sla;
      core_panicking_panic_hceae0c79b0247f98(qla, rla, tla);
      unreachable;
      label B_kd:
      var ula:int = 1049324;
      var vla:int = ula;
      var wla:int = 2;
      var xla:int = ala << wla;
      var yla:int_ptr = vla + xla;
      var zla:int = yla[0];
      f[206]:int = tka;
      f[207]:int = zla;
      ama = tka + zla;
      goto B_id;
      label B_jd:
      var bma:int = 64;
      var cma:int = 1050692;
      var dma:int = cma;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(ala, bma, dma);
      unreachable;
      label B_id:
      var ema:int = 15;
      var fma:int =
        match_twenty_sign_ii_h842e08d6d70c5e90(wja, xja, yja, zja, ama, ema);
      f[60]:int = fma;
      var gma:int = f[59]:int;
      var hma:int = f[60]:int;
      var ima:int = f[61]:int;
      var jma:int = f[58]:int;
      var kma:int = f[79]:int;
      var lma:int = 21;
      var mma:int = kma + lma;
      var nma:int = mma < kma;
      var oma:int = 1;
      var pma:int = nma & oma;
      if (pma) goto B_pd;
      var qma:int = 15;
      var rma:int = mma & qma;
      var sma:int = 184;
      var tma:int = f + sma;
      var uma:int = tma;
      var vma:int = 1050724;
      var wma:int = vma;
      xma =
        alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(
          uma,
          rma,
          wma);
      goto B_od;
      label B_pd:
      var yma:int = 1049696;
      var zma:int = yma;
      var ana:int = 28;
      var bna:int = 1050708;
      var cna:int = bna;
      core_panicking_panic_hceae0c79b0247f98(zma, ana, cna);
      unreachable;
      label B_od:
      var dna:int = xma[0];
      var ena:int = 48;
      var fna:int = vfa + ena;
      var gna:int = fna < vfa;
      var hna:int = 1;
      var ina:int = gna & hna;
      if (ina) goto B_vd;
      var jna:int = 3;
      kna = fna + jna;
      var lna:int = kna < fna;
      var mna:int = 1;
      var nna:int = lna & mna;
      if (nna) goto B_td;
      goto B_ud;
      label B_vd:
      var ona:int = 1049696;
      var pna:int = ona;
      var qna:int = 28;
      var rna:int = 1050740;
      var sna:int = rna;
      core_panicking_panic_hceae0c79b0247f98(pna, qna, sna);
      unreachable;
      label B_ud:
      var tna:int = 64;
      var una:int = kna;
      var vna:int = tna;
      var wna:int = una < vna;
      var xna:int = 1;
      var yna:int = wna & xna;
      if (yna) goto B_sd;
      goto B_rd;
      label B_td:
      var zna:int = 1049696;
      var aoa:int = zna;
      var boa:int = 28;
      var coa:int = 1050740;
      var doa:int = coa;
      core_panicking_panic_hceae0c79b0247f98(aoa, boa, doa);
      unreachable;
      label B_sd:
      var eoa:int = 1049324;
      var foa:int = eoa;
      var goa:int = 2;
      var hoa:int = kna << goa;
      var ioa:int_ptr = foa + hoa;
      var joa:int = ioa[0];
      f[202]:int = dna;
      f[203]:int = joa;
      koa = dna + joa;
      goto B_qd;
      label B_rd:
      var loa:int = 64;
      var moa:int = 1050756;
      var noa:int = moa;
      core_panicking_panic_bounds_check_h1d84519ec46ed48c(kna, loa, noa);
      unreachable;
      label B_qd:
      var ooa:int = 21;
      var poa:int =
        match_twenty_sign_ii_h842e08d6d70c5e90(gma, hma, ima, jma, koa, ooa);
      f[59]:int = poa;
      var qoa:int = f[79]:int;
      var roa:int = 28;
      var soa:int = qoa + roa;
      var toa:int = soa < qoa;
      var uoa:int = 1;
      var voa:int = toa & uoa;
      if (voa) goto B_wd;
      f[79]:int = soa;
      continue L_rc;
      label B_wd:
    }
    var woa:int = 1049696;
    var xoa:int = woa;
    var yoa:int = 28;
    var zoa:int = 1050772;
    var apa:int = zoa;
    core_panicking_panic_hceae0c79b0247f98(xoa, yoa, apa);
    unreachable;
    label B_qc:
    f[28]:int = ufa;
    var bpa:int = f[29]:int;
    var cpa:int = f[59]:int;
    f[198]:int = bpa;
    f[199]:int = cpa;
    var dpa:int = bpa + cpa;
    f[29]:int = dpa;
    var epa:int = f[30]:int;
    var fpa:int = f[60]:int;
    f[196]:int = epa;
    f[197]:int = fpa;
    var gpa:int = epa + fpa;
    f[30]:int = gpa;
    var hpa:int = f[31]:int;
    var ipa:int = f[61]:int;
    f[194]:int = hpa;
    f[195]:int = ipa;
    var jpa:int = hpa + ipa;
    f[31]:int = jpa;
    var kpa:int = 184;
    var lpa:int = f + kpa;
    var mpa:int = lpa;
    core_ptr_drop_in_place_alloc_vec_Vec_u32_h6eb01096de591f4f(mpa);
    continue L_a;
    label B_b:
  }
  var npa:int = f[28]:int;
  var opa:int = f[29]:int;
  var ppa:int = f[30]:int;
  var qpa:int = f[31]:int;
  f[128]:int = npa;
  f[129]:int = opa;
  f[130]:int = ppa;
  f[131]:int = qpa;
  var rpa:int = 40;
  var spa:int = f + rpa;
  var tpa:int = 512;
  var upa:int = f + tpa;
  core_array_impl_core_iter_collect_IntoIterator_for_T_N_into_iter_h1596b510c5415bf4(
    spa,
    upa);
  var vpa:int = f[11]:int;
  var wpa:int = f[10]:int;
  f[132]:int = wpa;
  f[133]:int = vpa;
  loop L_xd {
    var xpa:int = 528;
    var ypa:int = f + xpa;
    var zpa:int = ypa;
    var aqa:int =
      core_slice_iter_Iter_T_as_core_iter_iterator_Iterator_next_h06b16cad560ddd3c(
        zpa);
    f[135]:int = aqa;
    var bqa:int = f[135]:int;
    var cqa:int = 0;
    var dqa:int = bqa != cqa;
    br_table[B_ae, B_zd, ..B_ae](dqa)
    label B_ae:
    var eqa:int = 96;
    var fqa:int = f + eqa;
    var gqa:int = fqa;
    core_ptr_drop_in_place_alloc_vec_Vec_u8_h5517fb22505fcaa0(gqa);
    goto B_yd;
    label B_zd:
    var hqa:int = f[135]:int;
    f[184]:int = hqa;
    f[185]:int = hqa;
    f[186]:int = hqa;
    var iqa:int = 0;
    var jqa:int =
      u32_as_core_ops_bit_Shr_i32_shr_h679fbe9fdd2f5553(hqa, iqa);
    f[652]:byte = jqa;
    var kqa:int = 8;
    var lqa:int =
      u32_as_core_ops_bit_Shr_i32_shr_h679fbe9fdd2f5553(hqa, kqa);
    f[653]:byte = lqa;
    var mqa:int = 16;
    var nqa:int =
      u32_as_core_ops_bit_Shr_i32_shr_h679fbe9fdd2f5553(hqa, mqa);
    f[654]:byte = nqa;
    var oqa:int = 24;
    var pqa:int =
      u32_as_core_ops_bit_Shr_i32_shr_h679fbe9fdd2f5553(hqa, oqa);
    f[655]:byte = pqa;
    var qqa:int = 652;
    var rqa:int = f + qqa;
    var sqa:int = rqa;
    f[158]:int = sqa;
    var tqa:int = 653;
    var uqa:int = f + tqa;
    var vqa:int = uqa;
    f[159]:int = vqa;
    var wqa:int = 654;
    var xqa:int = f + wqa;
    var yqa:int = xqa;
    f[160]:int = yqa;
    var zqa:int = 655;
    var ara:int = f + zqa;
    var bra:int = ara;
    f[161]:int = bra;
    var cra:int = f[158]:int;
    f[187]:int = cra;
    var dra:int = f[159]:int;
    f[188]:int = dra;
    var era:int = f[160]:int;
    f[189]:int = era;
    var fra:int = f[161]:int;
    f[190]:int = fra;
    var gra:int = 1;
    var hra:int = 32;
    var ira:int = f + hra;
    core_fmt_ArgumentV1_new_haa0d1c28daa7270e(ira, cra, gra);
    var jra:int = f[9]:int;
    var kra:int = f[8]:int;
    var lra:int = 1;
    var mra:int = 24;
    var nra:int = f + mra;
    core_fmt_ArgumentV1_new_haa0d1c28daa7270e(nra, dra, lra);
    var ora:int = f[7]:int;
    var pra:int = f[6]:int;
    var qra:int = 1;
    var rra:int = 16;
    var sra:int = f + rra;
    core_fmt_ArgumentV1_new_haa0d1c28daa7270e(sra, era, qra);
    var tra:int = f[5]:int;
    var ura:int = f[4]:int;
    var vra:int = 1;
    var wra:int = 8;
    var xra:int = f + wra;
    core_fmt_ArgumentV1_new_haa0d1c28daa7270e(xra, fra, vra);
    var yra:int = f[3]:int;
    var zra:int = f[2]:int;
    f[150]:int = kra;
    f[151]:int = jra;
    f[152]:int = pra;
    f[153]:int = ora;
    f[154]:int = ura;
    f[155]:int = tra;
    f[156]:int = zra;
    f[157]:int = yra;
    var asa:int = 600;
    var bsa:int = f + asa;
    var csa:int = bsa;
    f[191]:int = csa;
    var dsa:int = 600;
    var esa:int = f + dsa;
    var fsa:int = esa;
    var gsa:int = 576;
    var hsa:int = f + gsa;
    var isa:int = hsa;
    var jsa:int = 1050788;
    var ksa:int = jsa;
    var lsa:int = 4;
    var msa:int = 1050820;
    var nsa:int = msa;
    core_fmt_Arguments_new_v1_formatted_h619a5115d5a3e54f(isa,
                                                          ksa,
                                                          lsa,
                                                          fsa,
                                                          lsa,
                                                          nsa,
                                                          lsa);
    var osa:int = 560;
    var psa:int = f + osa;
    var qsa:int = psa;
    var rsa:int = 576;
    var ssa:int = f + rsa;
    var tsa:int = ssa;
    alloc_fmt_format_h2ab3fd7d817360ce(qsa, tsa);
    var usa:int = 544;
    var vsa:int = f + usa;
    var wsa:long_ptr@4 = vsa;
    var xsa:int = 560;
    var ysa:int = f + xsa;
    var zsa:long_ptr@4 = ysa;
    var wta:long = zsa[0];
    wsa[0] = wta;
    var ata:int = 8;
    var bta:int_ptr = wsa + ata;
    var cta:int_ptr = zsa + ata;
    var dta:int = cta[0];
    bta[0] = dta;
    var eta:int = 544;
    var fta:int = f + eta;
    alloc_string_String_as_core_ops_deref_Deref_deref_h8639249056b2035c(
      f,
      fta);
    var gta:int = f[1]:int;
    var hta:int = f[0]:int;
    alloc_string_String_push_str_he023cb8b7aed1167(a, hta, gta);
    var ita:int = 544;
    var jta:int = f + ita;
    var kta:int = jta;
    core_ptr_drop_in_place_alloc_string_String_h1a752c630726971c(kta);
    continue L_xd;
    label B_yd:
  }
  var lta:int = 928;
  var mta:int = f + lta;
  g_a = mta;
}

function dlmalloc_dlmalloc_Dlmalloc_A_malloc_heeb693c723d77fa0(a:{ a:int, b:int, c:int }):int {
  var e:int_ptr;
  var i:int_ptr;
  var h:int_ptr;
  var g:int_ptr;
  var d:int_ptr;
  var c:int;
  var f:int;
  var j:int;
  var k:int;
  var p:int_ptr;
  var q:int;
  var b:{ a:int, b:int, c:int } = g_a - 16;
  g_a = b;
  if (a < 245) goto B_c;
  c = 0;
  d = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
  d = (d -
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(d, 8) +
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8) +
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) +
       -65544 &
       -9) +
      -3;
  if (
    select_if(
      d,
      e = 0 - (dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) << 2),
      e > d) <=
    a) goto B_a;
  d = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(a + 4, 8);
  if (eqz(0[263674]:int)) goto B_b;
  f = 0;
  if (d < 256) goto B_d;
  f = 31;
  if (d > 16777215) goto B_d;
  f = (d >> 6 - (a = clz(d >> 8)) & 1) - (a << 1) + 62;
  label B_d:
  c = 0 - d;
  a = ((f << 2) + 1054964)[0]:int;
  if (eqz(a)) goto B_g;
  g =
    d << dlmalloc_dlmalloc_leftshift_for_tree_index_h62dacf28ccbe01be(f);
  h = 0;
  e = 0;
  loop L_h {
    i = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(
          dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(a));
    if (i < d) goto B_i;
    i = i - d;
    if (i >= c) goto B_i;
    c = i;
    e = a;
    if (i) goto B_i;
    c = 0;
    e = a;
    goto B_f;
    label B_i:
    i = (a + 20)[0]:int;
    h =
      select_if(select_if(i, h, i != (a = (a + (g >> 29 & 4) + 16)[0]:int)),
                h,
                i);
    g = g << 1;
    if (a) continue L_h;
  }
  if (eqz(h)) goto B_j;
  a = h;
  goto B_f;
  label B_j:
  if (e) goto B_e;
  label B_g:
  e = 0;
  a =
    dlmalloc_dlmalloc_left_bits_hfbf3138e75a56fe9(1 << f) & 0[263674]:int;
  if (eqz(a)) goto B_b;
  a = ((ctz(dlmalloc_dlmalloc_least_bit_hf1ac7fbb0c9afcf6(a)) << 2) +
       1054964)[0]:int;
  if (eqz(a)) goto B_b;
  label B_f:
  loop L_k {
    e =
      select_if(
        a,
        e,
        g =
          (h = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(
                 dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(a))) >=
          d &
          (h = h - d) < c);
    c = select_if(h, c, g);
    a = dlmalloc_dlmalloc_TreeChunk_leftmost_child_h48f2502fcdcfa0a2(a);
    if (a) continue L_k;
  }
  if (eqz(e)) goto B_b;
  label B_e:
  a = 0[263773]:int;
  if (a < d) goto B_l;
  if (c >= a - d) goto B_b;
  label B_l:
  a = dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(e);
  h = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(a, d);
  dlmalloc_dlmalloc_Dlmalloc_A_unlink_large_chunk_hb07925f032cc8648(e);
  if (c < dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8)) goto B_n;
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_inuse_chunk_hb3cda7ee1be519b8(
    a,
    d);
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_free_chunk_h94ceb082391f899d(
    h,
    c);
  if (c < 256) goto B_o;
  dlmalloc_dlmalloc_Dlmalloc_A_insert_large_chunk_h2d7ab4cd21b9b1e8(h, c);
  goto B_m;
  label B_o:
  e = c >> 3;
  c = (e << 3) + 1054700;
  g = 0[263673]:int;
  if (eqz(g & (e = 1 << e))) goto B_q;
  e = c[2]:int;
  goto B_p;
  label B_q:
  0[263673]:int = g | e;
  e = c;
  label B_p:
  c[2]:int = h;
  e[3] = h;
  h[3] = c;
  h[2] = e;
  goto B_m;
  label B_n:
  dlmalloc_dlmalloc_Chunk_set_inuse_and_pinuse_h75c2f837cb762f26(a,
                                                                 c + d);
  label B_m:
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a);
  if (eqz(c)) goto B_b;
  goto B_a;
  label B_c:
  d =
    dlmalloc_dlmalloc_align_up_h4772c6244aec6713(
      select_if(
        16,
        a + 4,
        dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) + -5 > a),
      8);
  h = 0[263673]:int;
  a = h >> (c = d >> 3);
  if (a & 3) goto B_x;
  if (d <= 0[263773]:int) goto B_b;
  if (a) goto B_w;
  a = 0[263674]:int;
  if (eqz(a)) goto B_b;
  e = ((ctz(dlmalloc_dlmalloc_least_bit_hf1ac7fbb0c9afcf6(a)) << 2) +
       1054964)[0]:int;
  c = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(
        dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(e)) -
      d;
  a = dlmalloc_dlmalloc_TreeChunk_leftmost_child_h48f2502fcdcfa0a2(e);
  if (eqz(a)) goto B_y;
  loop L_z {
    h = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(
          dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(a)) -
        d;
    c = select_if(h, c, h = h < c);
    e = select_if(a, e, h);
    a = dlmalloc_dlmalloc_TreeChunk_leftmost_child_h48f2502fcdcfa0a2(a);
    if (a) continue L_z;
  }
  label B_y:
  a = dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(e);
  h = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(a, d);
  dlmalloc_dlmalloc_Dlmalloc_A_unlink_large_chunk_hb07925f032cc8648(e);
  if (c < dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8)) goto B_s;
  h = dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(h);
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_inuse_chunk_hb3cda7ee1be519b8(
    a,
    d);
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_free_chunk_h94ceb082391f899d(
    h,
    c);
  e = 0[263773]:int;
  if (eqz(e)) goto B_t;
  i = e >> 3;
  g = (i << 3) + 1054700;
  e = 0[263775]:int;
  f = 0[263673]:int;
  if (eqz(f & (i = 1 << i))) goto B_v;
  i = g[2];
  goto B_u;
  label B_x:
  d = ((a ^ -1) & 1) + c;
  e = d << 3;
  a = (e + 1054708)[0]:int;
  c = (a + 8)[0]:int;
  if (c == (e = e + 1054700)) goto B_ba;
  c[3]:int = e;
  e[2] = c;
  goto B_aa;
  label B_ba:
  0[263673]:int = h & -2 << d;
  label B_aa:
  dlmalloc_dlmalloc_Chunk_set_inuse_and_pinuse_h75c2f837cb762f26(a,
                                                                 d << 3);
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a);
  goto B_a;
  label B_w:
  c =
    ctz(
      dlmalloc_dlmalloc_least_bit_hf1ac7fbb0c9afcf6(
        dlmalloc_dlmalloc_left_bits_hfbf3138e75a56fe9(1 << (c = c & 31)) &
        a << c));
  h = c << 3;
  a = (h + 1054708)[0]:int;
  e = (a + 8)[0]:int;
  if (e == (h = h + 1054700)) goto B_da;
  e[3] = h;
  h[2] = e;
  goto B_ca;
  label B_da:
  0[263673]:int = 0[263673]:int & -2 << c;
  label B_ca:
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_inuse_chunk_hb3cda7ee1be519b8(
    a,
    d);
  e = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(a, d);
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_free_chunk_h94ceb082391f899d(
    e,
    h = (c << 3) - d);
  d = 0[263773]:int;
  if (eqz(d)) goto B_ea;
  g = d >> 3;
  c = (g << 3) + 1054700;
  d = 0[263775]:int;
  i = 0[263673]:int;
  if (eqz(i & (g = 1 << g))) goto B_ga;
  g = c[2]:int;
  goto B_fa;
  label B_ga:
  0[263673]:int = i | g;
  g = c;
  label B_fa:
  c[2]:int = d;
  g[3] = d;
  d[3] = c;
  d[2] = g;
  label B_ea:
  0[263775]:int = e;
  0[263773]:int = h;
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a);
  goto B_a;
  label B_v:
  0[263673]:int = f | i;
  i = g;
  label B_u:
  g[2] = e;
  i[3] = e;
  e[3] = g;
  e[2] = i;
  label B_t:
  0[263775]:int = h;
  0[263773]:int = c;
  goto B_r;
  label B_s:
  dlmalloc_dlmalloc_Chunk_set_inuse_and_pinuse_h75c2f837cb762f26(a,
                                                                 c + d);
  label B_r:
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a);
  if (c) goto B_a;
  label B_b:
  c = 0[263773]:int;
  if (c >= d) goto B_ra;
  a = 0[263774]:int;
  if (a > d) goto B_na;
  c = 0;
  dlmalloc_sys_System_as_dlmalloc_Allocator_alloc_heece4aba06c14827(
    b,
    1054692,
    dlmalloc_dlmalloc_align_up_h4772c6244aec6713(
      d - (a = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0)) +
      dlmalloc_dlmalloc_align_up_h4772c6244aec6713(a, 8) +
      dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8) +
      dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) +
      8,
      65536));
  g = b.a;
  if (eqz(g)) goto B_a;
  j = b.c;
  0[263777]:int = (a = 0[263777]:int + (i = b.b));
  0[263778]:int = select_if(c = 0[263778]:int, a, c > a);
  if (eqz(0[263776]:int)) goto B_qa;
  a = 1055116;
  loop L_sa {
    if (
      g == dlmalloc_dlmalloc_Segment_top_h7ba4cb35b2ab78b3(a)) goto B_pa;
    a = a.c;
    if (a) continue L_sa;
    goto B_oa;
  }
  label B_ra:
  a = 0[263775]:int;
  c = c - d;
  if (
    c >= dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8)) goto B_ta;
  0[263775]:int = 0;
  d = 0[263773]:int;
  0[263773]:int = 0;
  dlmalloc_dlmalloc_Chunk_set_inuse_and_pinuse_h75c2f837cb762f26(a, d);
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a);
  goto B_a;
  label B_ta:
  e = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(a, d);
  0[263773]:int = c;
  0[263775]:int = e;
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_free_chunk_h94ceb082391f899d(
    e,
    c);
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_inuse_chunk_hb3cda7ee1be519b8(
    a,
    d);
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a);
  goto B_a;
  label B_qa:
  a = 0[263784]:int;
  if (eqz(a)) goto B_ma;
  if (g < a) goto B_ma;
  goto B_ia;
  label B_pa:
  if (
    dlmalloc_dlmalloc_Segment_is_extern_hcb93322195efbcce(a)) goto B_oa;
  if (
    dlmalloc_dlmalloc_Segment_sys_flags_hba09df10f4d19d6e(a) != j) goto B_oa;
  if (
    dlmalloc_dlmalloc_Segment_holds_h07422241f50b6662(a, 0[263776]:int)) goto B_la;
  label B_oa:
  0[263784]:int = select_if(a = 0[263784]:int, g, g > a);
  c = g + i;
  a = 1055116;
  loop L_xa {
    if (a.a == c) goto B_wa;
    a = a.c;
    if (a) continue L_xa;
    goto B_va;
  }
  label B_wa:
  if (
    dlmalloc_dlmalloc_Segment_is_extern_hcb93322195efbcce(a)) goto B_va;
  if (
    dlmalloc_dlmalloc_Segment_sys_flags_hba09df10f4d19d6e(a) == j) goto B_ua;
  label B_va:
  e = 0[263776]:int;
  a = 1055116;
  loop L_za {
    if (a.a > e) goto B_ab;
    if (dlmalloc_dlmalloc_Segment_top_h7ba4cb35b2ab78b3(a) > e) goto B_ya;
    label B_ab:
    a = a.c;
    if (a) continue L_za;
  }
  a = 0;
  label B_ya:
  h = dlmalloc_dlmalloc_Segment_top_h7ba4cb35b2ab78b3(a);
  a =
    h - (k = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8)) + -23;
  f = select_if(
        e,
        a = a +
            dlmalloc_dlmalloc_align_up_h4772c6244aec6713(
              c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a),
              8) -
            c,
        a < e + dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8));
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(f);
  a = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(f, k);
  var l:int = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
  var m:int = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(l, 8);
  var n:int = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8);
  var o:int = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8);
  0[263776]:int =
    (p = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(
           g,
           q = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(
                 p = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(g),
                 8) -
               p));
  0[263774]:int = (l = i + l - o + m + n + q);
  p[1] = l | 1;
  m = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
  n = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(m, 8);
  o = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8);
  q = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8);
  dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(p, l)[1]:int =
    q + o + n - m;
  0[263783]:int = 2097152;
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_inuse_chunk_hb3cda7ee1be519b8(
    f,
    k);
  var r:long = 0[263779]:long@4;
  (c + 8)[0]:long@4 = 0[263781]:long@4;
  c[0]:long@4 = r;
  0[263782]:int = j;
  0[263780]:int = i;
  0[263779]:int = g;
  0[263781]:int = c;
  loop L_bb {
    c = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(a, 4);
    a.b = dlmalloc_dlmalloc_Chunk_fencepost_head_h8f835e0dbf36cac4();
    a = c;
    if (h > c + 4) continue L_bb;
  }
  if (f == e) goto B_ha;
  a = f - e;
  dlmalloc_dlmalloc_Chunk_set_free_with_pinuse_hde64410721cd558f(
    e,
    a,
    dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(e, a));
  if (a < 256) goto B_cb;
  dlmalloc_dlmalloc_Dlmalloc_A_insert_large_chunk_h2d7ab4cd21b9b1e8(e, a);
  goto B_ha;
  label B_cb:
  c = a >> 3;
  a = (c << 3) + 1054700;
  h = 0[263673]:int;
  if (eqz(h & (c = 1 << c))) goto B_eb;
  c = a.c;
  goto B_db;
  label B_eb:
  0[263673]:int = h | c;
  c = a;
  label B_db:
  a.c = e;
  c[3]:int = e;
  e[3] = a;
  e[2] = c;
  goto B_ha;
  label B_ua:
  h = a.a;
  a.a = g;
  a.b = a.b + i;
  a = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(g);
  c = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(a, 8);
  i = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(h);
  f = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(i, 8);
  c = g + c - a;
  e = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(c, d);
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_inuse_chunk_hb3cda7ee1be519b8(
    c,
    d);
  a = h + f - i;
  d = a - d + c;
  if (0[263776]:int == a) goto B_fb;
  if (0[263775]:int == a) goto B_ka;
  if (dlmalloc_dlmalloc_Chunk_inuse_h8cfc6665aae9b287(a)) goto B_ja;
  h = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(a);
  if (h < 256) goto B_hb;
  dlmalloc_dlmalloc_Dlmalloc_A_unlink_large_chunk_hb07925f032cc8648(a);
  goto B_gb;
  label B_hb:
  g = (a + 12)[0]:int;
  if (g == (i = (a + 8)[0]:int)) goto B_ib;
  i[3] = g;
  g[2] = i;
  goto B_gb;
  label B_ib:
  0[263673]:int = 0[263673]:int & -2 << (h >> 3);
  label B_gb:
  d = h + d;
  a = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(a, h);
  goto B_ja;
  label B_fb:
  0[263776]:int = e;
  0[263774]:int = (a = 0[263774]:int + d);
  e[1] = a | 1;
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(c);
  goto B_a;
  label B_na:
  0[263774]:int = (c = a - d);
  0[263776]:int =
    (e = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(
           a = 0[263776]:int,
           d));
  e[1] = c | 1;
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_inuse_chunk_hb3cda7ee1be519b8(
    a,
    d);
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a);
  goto B_a;
  label B_ma:
  0[263784]:int = g;
  goto B_ia;
  label B_la:
  a.b = a.b + i;
  c = 0[263774]:int;
  a = 0[263776]:int;
  a = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(
        a,
        e = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(
              e = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a),
              8) -
            e);
  0[263774]:int = (c = c + i - e);
  0[263776]:int = a;
  a.b = c | 1;
  e = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
  h = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(e, 8);
  g = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8);
  i = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8);
  dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(a, c)[1]:int =
    i + g + h - e;
  0[263783]:int = 2097152;
  goto B_ha;
  label B_ka:
  0[263775]:int = e;
  0[263773]:int = (a = 0[263773]:int + d);
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_free_chunk_h94ceb082391f899d(
    e,
    a);
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(c);
  goto B_a;
  label B_ja:
  dlmalloc_dlmalloc_Chunk_set_free_with_pinuse_hde64410721cd558f(e, d, a);
  if (d < 256) goto B_jb;
  dlmalloc_dlmalloc_Dlmalloc_A_insert_large_chunk_h2d7ab4cd21b9b1e8(e, d);
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(c);
  goto B_a;
  label B_jb:
  d = d >> 3;
  a = (d << 3) + 1054700;
  h = 0[263673]:int;
  if (eqz(h & (d = 1 << d))) goto B_lb;
  d = a.c;
  goto B_kb;
  label B_lb:
  0[263673]:int = h | d;
  d = a;
  label B_kb:
  a.c = e;
  d[3] = e;
  e[3] = a;
  e[2] = d;
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(c);
  goto B_a;
  label B_ia:
  0[263785]:int = 4095;
  0[263782]:int = j;
  0[263780]:int = i;
  0[263779]:int = g;
  0[263678]:int = 1054700;
  0[263680]:int = 1054708;
  0[263677]:int = 1054700;
  0[263682]:int = 1054716;
  0[263679]:int = 1054708;
  0[263684]:int = 1054724;
  0[263681]:int = 1054716;
  0[263686]:int = 1054732;
  0[263683]:int = 1054724;
  0[263688]:int = 1054740;
  0[263685]:int = 1054732;
  0[263690]:int = 1054748;
  0[263687]:int = 1054740;
  0[263692]:int = 1054756;
  0[263689]:int = 1054748;
  0[263694]:int = 1054764;
  0[263691]:int = 1054756;
  0[263693]:int = 1054764;
  0[263696]:int = 1054772;
  0[263695]:int = 1054772;
  0[263698]:int = 1054780;
  0[263697]:int = 1054780;
  0[263700]:int = 1054788;
  0[263699]:int = 1054788;
  0[263702]:int = 1054796;
  0[263701]:int = 1054796;
  0[263704]:int = 1054804;
  0[263703]:int = 1054804;
  0[263706]:int = 1054812;
  0[263705]:int = 1054812;
  0[263708]:int = 1054820;
  0[263707]:int = 1054820;
  0[263710]:int = 1054828;
  0[263712]:int = 1054836;
  0[263709]:int = 1054828;
  0[263714]:int = 1054844;
  0[263711]:int = 1054836;
  0[263716]:int = 1054852;
  0[263713]:int = 1054844;
  0[263718]:int = 1054860;
  0[263715]:int = 1054852;
  0[263720]:int = 1054868;
  0[263717]:int = 1054860;
  0[263722]:int = 1054876;
  0[263719]:int = 1054868;
  0[263724]:int = 1054884;
  0[263721]:int = 1054876;
  0[263726]:int = 1054892;
  0[263723]:int = 1054884;
  0[263728]:int = 1054900;
  0[263725]:int = 1054892;
  0[263730]:int = 1054908;
  0[263727]:int = 1054900;
  0[263732]:int = 1054916;
  0[263729]:int = 1054908;
  0[263734]:int = 1054924;
  0[263731]:int = 1054916;
  0[263736]:int = 1054932;
  0[263733]:int = 1054924;
  0[263738]:int = 1054940;
  0[263735]:int = 1054932;
  0[263740]:int = 1054948;
  0[263737]:int = 1054940;
  0[263739]:int = 1054948;
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
  e = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(c, 8);
  h = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8);
  f = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8);
  0[263776]:int =
    (a = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(
           g,
           j = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(
                 a = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(g),
                 8) -
               a));
  0[263774]:int = (c = i + c - f + e + h + j);
  a.b = c | 1;
  e = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
  h = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(e, 8);
  g = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8);
  i = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8);
  dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(a, c)[1]:int =
    i + g + h - e;
  0[263783]:int = 2097152;
  label B_ha:
  c = 0;
  a = 0[263774]:int;
  if (a <= d) goto B_a;
  0[263774]:int = (c = a - d);
  0[263776]:int =
    (e = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(
           a = 0[263776]:int,
           d));
  e[1] = c | 1;
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_inuse_chunk_hb3cda7ee1be519b8(
    a,
    d);
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a);
  label B_a:
  g_a = b + 16;
  return c;
}

function core_fmt_Formatter_pad_h72ccc4219c1d09f0(a:int, b:int, c:int):int {
  var m:ubyte_ptr;
  var k:int;
  var l:int;
  var h:int_ptr;
  var g:ubyte_ptr;
  var i:{ a:byte, b:ubyte }
  var j:ubyte_ptr;
  var e:int;
  var f:int;
  var d:int = a[4]:int;
  e = a[2]:int;
  if (e == 1) goto B_d;
  if (d == 1) goto B_c;
  d = call_indirect(a[6]:int, b, c, ((a + 28)[0]:int)[3]:int);
  goto B_a;
  label B_d:
  if (d != 1) goto B_b;
  label B_c:
  f = b + c;
  g = (a + 20)[0]:int;
  if (g) goto B_g;
  h = 0;
  d = b;
  goto B_f;
  label B_g:
  h = 0;
  d = b;
  loop L_h {
    i = d;
    if (i == f) goto B_e;
    d = i + 1;
    j = i.a;
    if (j > -1) goto B_i;
    j = j & 255;
    if (d != f) goto B_k;
    k = 0;
    d = f;
    goto B_j;
    label B_k:
    d = i + 2;
    k = i.b & 63;
    label B_j:
    if (j < 224) goto B_i;
    if (d != f) goto B_m;
    l = 0;
    m = f;
    goto B_l;
    label B_m:
    m = d + 1;
    l = d[0]:ubyte & 63;
    label B_l:
    if (j >= 240) goto B_n;
    d = m;
    goto B_i;
    label B_n:
    if (m != f) goto B_p;
    m = 0;
    d = f;
    goto B_o;
    label B_p:
    d = m + 1;
    m = m[0] & 63;
    label B_o:
    if (
      (((k << 12 | (j << 18 & 1835008)) | l << 6) | m) == 1114112) goto B_e;
    label B_i:
    h = h - i + d;
    g = g + -1;
    if (g) continue L_h;
  }
  label B_f:
  if (d == f) goto B_e;
  i = d[0]:byte;
  if (i > -1) goto B_q;
  if (d + 1 != f) goto B_s;
  d = 0;
  g = f;
  goto B_r;
  label B_s:
  g = d + 2;
  d = (d[1]:ubyte & 63) << 6;
  label B_r:
  if ((i & 255) < 224) goto B_q;
  if (g != f) goto B_u;
  g = 0;
  j = f;
  goto B_t;
  label B_u:
  j = g + 1;
  g = g[0] & 63;
  label B_t:
  if ((i & 255) < 240) goto B_q;
  i = i & 255;
  d = g | d;
  if (j != f) goto B_w;
  f = 0;
  goto B_v;
  label B_w:
  f = j[0] & 63;
  label B_v:
  if (((d << 6 | (i << 18 & 1835008)) | f) == 1114112) goto B_e;
  label B_q:
  if (h) goto B_z;
  i = 0;
  goto B_y;
  label B_z:
  if (h < c) goto B_aa;
  d = 0;
  i = c;
  if (h == c) goto B_y;
  goto B_x;
  label B_aa:
  d = 0;
  i = h;
  if ((b + h)[0]:byte < -64) goto B_x;
  label B_y:
  h = i;
  d = b;
  label B_x:
  c = select_if(h, c, d);
  b = select_if(d, b, d);
  label B_e:
  if (e == 1) goto B_b;
  return call_indirect(a[6]:int, b, c, ((a + 28)[0]:int)[3]:int);
  label B_b:
  g = (a + 12)[0]:int;
  if (c) goto B_ca;
  i = 0;
  goto B_ba;
  label B_ca:
  h = c & 3;
  if (c + -1 >= 3) goto B_ea;
  i = 0;
  d = b;
  goto B_da;
  label B_ea:
  i = 0;
  f = 0 - (c & -4);
  d = b;
  loop L_fa {
    i =
      i + ((d[0]:ubyte & 192) != 128) + (((d + 1)[0]:ubyte & 192) != 128) +
      (((d + 2)[0]:ubyte & 192) != 128) +
      (((d + 3)[0]:ubyte & 192) != 128);
    d = d + 4;
    f = f + 4;
    if (f) continue L_fa;
  }
  label B_da:
  if (eqz(h)) goto B_ba;
  loop L_ga {
    i = i + ((d[0]:ubyte & 192) != 128);
    d = d + 1;
    h = h + -1;
    if (h) continue L_ga;
  }
  label B_ba:
  if (g <= i) goto B_ha;
  d = 0;
  h = g - i;
  g = h;
  br_table[B_ia, B_ka, B_ja, ..B_ia](
    select_if(0, i = a[32]:ubyte, i == 3) & 3)
  label B_ka:
  g = 0;
  d = h;
  goto B_ia;
  label B_ja:
  d = h >> 1;
  g = h + 1 >> 1;
  label B_ia:
  d = d + 1;
  h = (a + 28)[0]:int;
  i = a[1]:int;
  f = a[6]:int;
  loop L_ma {
    d = d + -1;
    if (eqz(d)) goto B_la;
    if (eqz(call_indirect(f, i, h[4]))) continue L_ma;
  }
  return 1;
  label B_la:
  d = 1;
  if (i == 1114112) goto B_a;
  if (call_indirect(f, b, c, h[3])) goto B_a;
  d = 0;
  loop L_na {
    if (g != d) goto B_oa;
    return g < g;
    label B_oa:
    d = d + 1;
    if (eqz(call_indirect(f, i, h[4]))) continue L_na;
  }
  return d + -1 < g;
  label B_ha:
  return call_indirect(a[6]:int, b, c, ((a + 28)[0]:int)[3]:int);
  label B_a:
  return d;
}

function dlmalloc_dlmalloc_Dlmalloc_A_free_hb07eefd31eacd84c(a:{ a:int, b:int, c:int, d:int }) {
  var b:int_ptr;
  var f:int_ptr;
  var d:int;
  var e:int_ptr;
  a = dlmalloc_dlmalloc_Chunk_from_mem_hee6c19b2ff028b5c(a);
  var c:int_ptr =
    dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(
      a,
      b = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(a));
  if (dlmalloc_dlmalloc_Chunk_pinuse_h49d83fe486a8c426(a)) goto B_c;
  d = a.a;
  if (dlmalloc_dlmalloc_Chunk_mmapped_h433d048e993b396e(a)) goto B_e;
  b = d + b;
  a = dlmalloc_dlmalloc_Chunk_minus_offset_h956a4e2adf3eefcb(a, d);
  if (a != 0[263775]:int) goto B_d;
  if ((c[1] & 3) != 3) goto B_c;
  0[263773]:int = b;
  dlmalloc_dlmalloc_Chunk_set_free_with_pinuse_hde64410721cd558f(a, b, c);
  return ;
  label B_e:
  if (
    eqz(dlmalloc_sys_System_as_dlmalloc_Allocator_free_hb5a074dd393cd90a(
          1054692,
          a - d,
          a = d + b + 16))) goto B_b;
  0[263777]:int = 0[263777]:int - a;
  return ;
  label B_d:
  if (d < 256) goto B_f;
  dlmalloc_dlmalloc_Dlmalloc_A_unlink_large_chunk_hb07925f032cc8648(a);
  goto B_c;
  label B_f:
  e = (a + 12)[0]:int;
  if (e == (f = (a + 8)[0]:int)) goto B_g;
  f[3] = e;
  e[2] = f;
  goto B_c;
  label B_g:
  0[263673]:int = 0[263673]:int & -2 << (d >> 3);
  label B_c:
  if (
    eqz(dlmalloc_dlmalloc_Chunk_cinuse_h5e879d0433022895(c))) goto B_i;
  dlmalloc_dlmalloc_Chunk_set_free_with_pinuse_hde64410721cd558f(a, b, c);
  goto B_h;
  label B_i:
  if (c == 0[263776]:int) goto B_m;
  if (c != 0[263775]:int) goto B_l;
  0[263775]:int = a;
  0[263773]:int = (b = 0[263773]:int + b);
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_free_chunk_h94ceb082391f899d(
    a,
    b);
  return ;
  label B_m:
  0[263776]:int = a;
  0[263774]:int = (b = 0[263774]:int + b);
  a.b = b | 1;
  if (a == 0[263775]:int) goto B_k;
  goto B_j;
  label B_l:
  d = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(c);
  b = d + b;
  if (d < 256) goto B_o;
  dlmalloc_dlmalloc_Dlmalloc_A_unlink_large_chunk_hb07925f032cc8648(c);
  goto B_n;
  label B_o:
  e = (c + 12)[0]:int;
  if (e == (c = (c + 8)[0]:int)) goto B_p;
  c[3] = e;
  e[2] = c;
  goto B_n;
  label B_p:
  0[263673]:int = 0[263673]:int & -2 << (d >> 3);
  label B_n:
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_free_chunk_h94ceb082391f899d(
    a,
    b);
  if (a != 0[263775]:int) goto B_h;
  0[263773]:int = b;
  goto B_b;
  label B_k:
  0[263773]:int = 0;
  0[263775]:int = 0;
  label B_j:
  if (0[263783]:int >= b) goto B_b;
  a = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
  a = (a -
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(a, 8) +
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8) +
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) +
       -65544 &
       -9) +
      -3;
  if (
    eqz(
      select_if(
        a,
        b = 0 - (dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) << 2),
        b > a))) goto B_b;
  if (eqz(0[263776]:int)) goto B_b;
  a = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
  b = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(a, 8);
  d = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8);
  e = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8);
  c = 0;
  f = 0[263774]:int;
  if (f <= (a = e + d + b - a)) goto B_q;
  d = f + (a ^ -1) & -65536;
  b = 0[263776]:int;
  a = 1055116;
  loop L_s {
    if (a.a > b) goto B_t;
    if (dlmalloc_dlmalloc_Segment_top_h7ba4cb35b2ab78b3(a) > b) goto B_r;
    label B_t:
    a = a.c;
    if (a) continue L_s;
  }
  a = 0;
  label B_r:
  c = 0;
  if (
    dlmalloc_dlmalloc_Segment_is_extern_hcb93322195efbcce(a)) goto B_q;
  if (
    eqz(
      dlmalloc_sys_System_as_dlmalloc_Allocator_can_release_part_hbadca9aef442623d(
        1054692,
        (a + 12)[0]:int >> 1))) goto B_q;
  if (a.b < d) goto B_q;
  b = 1055116;
  loop L_u {
    if (dlmalloc_dlmalloc_Segment_holds_h07422241f50b6662(a, b)) goto B_q;
    b = b[2];
    if (b) continue L_u;
  }
  if (
    eqz(
      dlmalloc_sys_System_as_dlmalloc_Allocator_free_part_he0a6ef0c01b934cb(
        1054692,
        a.a,
        b = a.b,
        b - d))) goto B_q;
  if (eqz(d)) goto B_q;
  a.b = a.b - d;
  0[263777]:int = 0[263777]:int - d;
  b = 0[263774]:int;
  a = 0[263776]:int;
  0[263776]:int =
    (a = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(
           a,
           c = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(
                 c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a),
                 8) -
               c));
  0[263774]:int = (b = b - d + c);
  a.b = b | 1;
  c = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
  e = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(c, 8);
  f = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8);
  var g:int = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8);
  dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(a, b)[1]:int =
    g + f + e - c;
  0[263783]:int = 2097152;
  c = d;
  label B_q:
  if (
    c !=
    0 -
    dlmalloc_dlmalloc_Dlmalloc_A_release_unused_segments_h15a44562f2ff2228()) goto B_b;
  if (0[263774]:int <= 0[263783]:int) goto B_b;
  0[263783]:int = -1;
  return ;
  label B_h:
  if (b < 256) goto B_a;
  dlmalloc_dlmalloc_Dlmalloc_A_insert_large_chunk_h2d7ab4cd21b9b1e8(a, b);
  0[263785]:int = (a = 0[263785]:int + -1);
  if (a) goto B_b;
  dlmalloc_dlmalloc_Dlmalloc_A_release_unused_segments_h15a44562f2ff2228();
  return ;
  label B_b:
  return ;
  label B_a:
  c = b >> 3;
  b = (c << 3) + 1054700;
  d = 0[263673]:int;
  if (eqz(d & (c = 1 << c))) goto B_w;
  c = b[2];
  goto B_v;
  label B_w:
  0[263673]:int = d | c;
  c = b;
  label B_v:
  b[2] = a;
  c[3] = a;
  a.d = b;
  a.c = c;
}

function alloc_alloc_Global_grow_impl_h30049f444c9187b4(a:{ a:int, b:int }, b:int, c:int, d:int, e:int, f:int, g:int, h:int) {
  var va:int;
  var ua:int;
  var ec:int;
  var fc:int;
  var gc:int;
  var na:int;
  var nb:int;
  var ab:int;
  var i:int = g_a;
  var j:int = 192;
  var k:int = i - j;
  g_a = k;
  k[12]:int = d;
  k[13]:int = e;
  k[14]:int = f;
  k[15]:int = g;
  k[23]:int = b;
  k[24]:int = c;
  var l:int = h;
  k[103]:byte = l;
  var m:int = 48;
  var n:int = k + m;
  var o:int = n;
  var p:int = core_alloc_layout_Layout_size_hed7bf60fc00d518d(o);
  k[18]:int = p;
  var q:int = k[18]:int;
  if (q) goto B_f;
  var r:int = k[14]:int;
  var s:int = k[15]:int;
  var t:int = 1;
  var u:int = h & t;
  alloc_alloc_Global_alloc_impl_h31785f410c663f1b(k, b, r, s, u);
  var v:int = k[0]:int;
  var w:int = k[1]:int;
  k[17]:int = w;
  k[16]:int = v;
  goto B_e;
  label B_f:
  var x:int = 72;
  var y:int = k + x;
  var z:int = y;
  k[29]:int = z;
  var aa:int = 48;
  var ba:int = k + aa;
  var ca:int = ba;
  var da:int = core_alloc_layout_Layout_align_hbe5a9f7fb8662166(ca);
  var ea:int = 56;
  var fa:int = k + ea;
  var ga:int = fa;
  var ha:int = core_alloc_layout_Layout_align_hbe5a9f7fb8662166(ga);
  var ia:int = da;
  var ja:int = ha;
  var ka:int = ia == ja;
  var la:int = 1;
  var ma:int = ka & la;
  if (ma) goto B_h;
  na = k[18]:int;
  k[35]:int = na;
  var oa:int = k[14]:int;
  var pa:int = k[15]:int;
  var qa:int = 1;
  var ra:int = h & qa;
  var sa:int = 40;
  var ta:int = k + sa;
  alloc_alloc_Global_alloc_impl_h31785f410c663f1b(ta, b, oa, pa, ra);
  ua = k[11]:int;
  va = k[10]:int;
  goto B_g;
  label B_h:
  var wa:int = k[18]:int;
  k[30]:int = wa;
  var xa:int = 56;
  var ya:int = k + xa;
  var za:int = ya;
  ab = core_alloc_layout_Layout_size_hed7bf60fc00d518d(za);
  k[31]:int = ab;
  var bb:int = 48;
  var cb:int = k + bb;
  var db:int = cb;
  core_alloc_layout_Layout_size_hed7bf60fc00d518d(db);
  var eb:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(c);
  var fb:int = k[12]:int;
  var gb:int = k[13]:int;
  var hb:int = alloc_alloc_realloc_hedd2f213e693d0f4(eb, fb, gb, ab);
  k[32]:int = hb;
  var ib:int = core_ptr_non_null_NonNull_T_new_h097dcfc41a1a0fb7(hb);
  var jb:int = core_option_Option_T_ok_or_h5937c463bf2a8ab0(ib);
  var kb:int =
    core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h4b08277a288989e0(
      jb);
  k[19]:int = kb;
  var lb:int = k[19]:int;
  var mb:int = eqz(lb);
  br_table[B_k, B_j, ..B_k](mb)
  label B_k:
  nb = k[19]:int;
  k[33]:int = nb;
  k[34]:int = nb;
  var ob:int = h;
  if (ob) goto B_i;
  goto B_d;
  label B_j:
  var pb:int = 16;
  var qb:int = k + pb;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_8(
    qb);
  var rb:int = k[4]:int;
  var sb:int = k[5]:int;
  k[17]:int = sb;
  k[16]:int = rb;
  goto B_b;
  label B_i:
  k[40]:int = hb;
  k[41]:int = wa;
  k[42]:int = hb;
  k[43]:int = wa;
  var tb:int = hb + wa;
  k[44]:int = tb;
  var ub:int = k[44]:int;
  var vb:int = ab - wa;
  k[45]:int = ub;
  var wb:int = 0;
  k[187]:byte = wb;
  k[47]:int = vb;
  var xb:int = 0;
  core_intrinsics_write_bytes_h536da24571cf16eb(ub, xb, vb);
  goto B_d;
  label B_g:
  var yb:int = 32;
  var zb:int = k + yb;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_ha097dea39e8374c5(
    zb,
    va,
    ua);
  var ac:int = k[8]:int;
  var bc:int = k[9]:int;
  k[21]:int = bc;
  k[20]:int = ac;
  var cc:int = k[20]:int;
  var dc:int = eqz(cc);
  br_table[B_n, B_m, ..B_n](dc)
  label B_n:
  ec = k[20]:int;
  fc = k[21]:int;
  k[36]:int = ec;
  k[37]:int = fc;
  k[38]:int = ec;
  k[39]:int = fc;
  gc = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(c);
  goto B_l;
  label B_m:
  var hc:int = 24;
  var ic:int = k + hc;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_8(
    ic);
  var jc:int = k[6]:int;
  var kc:int = k[7]:int;
  k[17]:int = kc;
  k[16]:int = jc;
  goto B_b;
  label B_l:
  var lc:int =
    core_ptr_non_null_NonNull_T_as_mut_ptr_h88585fb77a23da8e(ec, fc);
  core_intrinsics_copy_nonoverlapping_h2eac84473f2f528f(gc, lc, na);
  var mc:int = k[12]:int;
  var nc:int = k[13]:int;
  alloc_alloc_Global_as_core_alloc_Allocator_deallocate_h78eea967e1d72f4c(
    b,
    c,
    mc,
    nc);
  k[16]:int = ec;
  k[17]:int = fc;
  goto B_c;
  label B_e:
  goto B_c;
  label B_d:
  var oc:int = 8;
  var pc:int = k + oc;
  core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(pc,
                                                                     nb,
                                                                     ab);
  var qc:int = k[3]:int;
  var rc:int = k[2]:int;
  k[16]:int = rc;
  k[17]:int = qc;
  label B_c:
  goto B_a;
  label B_b:
  label B_a:
  var sc:int = k[16]:int;
  var tc:int = k[17]:int;
  a.b = tc;
  a.a = sc;
  var uc:int = 192;
  var vc:int = k + uc;
  g_a = vc;
}

function core_fmt_Formatter_pad_integral_h8c76600d11a2c4b1(a:int, b:int, c:int, d:int, e:int, f:int):int {
  var g:int;
  var j:int;
  var i:int;
  var h:int;
  var k:int_ptr;
  var l:int;
  if (eqz(b)) goto B_b;
  h = select_if(43, 1114112, b = (g = a[0]:int) & 1);
  i = b + f;
  goto B_a;
  label B_b:
  i = f + 1;
  g = a[0]:int;
  h = 45;
  label B_a:
  if (g & 4) goto B_d;
  c = 0;
  goto B_c;
  label B_d:
  if (d) goto B_f;
  j = 0;
  goto B_e;
  label B_f:
  k = d & 3;
  if (d + -1 >= 3) goto B_h;
  j = 0;
  b = c;
  goto B_g;
  label B_h:
  j = 0;
  l = 0 - (d & -4);
  b = c;
  loop L_i {
    j =
      j + ((b[0]:ubyte & 192) != 128) + (((b + 1)[0]:ubyte & 192) != 128) +
      (((b + 2)[0]:ubyte & 192) != 128) +
      (((b + 3)[0]:ubyte & 192) != 128);
    b = b + 4;
    l = l + 4;
    if (l) continue L_i;
  }
  label B_g:
  if (eqz(k)) goto B_e;
  loop L_j {
    j = j + ((b[0]:ubyte & 192) != 128);
    b = b + 1;
    k = k + -1;
    if (k) continue L_j;
  }
  label B_e:
  i = j + i;
  label B_c:
  b = 1;
  if (a[2]:int == 1) goto B_l;
  if (
    core_fmt_Formatter_pad_integral_write_prefix_h585c4f72e1d84c1a(a, h, c, d)) goto B_k;
  return call_indirect(a[6]:int, e, f, ((a + 28)[0]:int)[3]:int);
  label B_l:
  j = (a + 12)[0]:int;
  if (j <= i) goto B_q;
  if (g & 8) goto B_m;
  b = 0;
  k = j - i;
  i = k;
  br_table[B_n, B_p, B_o, ..B_n](
    select_if(1, j = a[32]:ubyte, j == 3) & 3);
  label B_q:
  if (
    core_fmt_Formatter_pad_integral_write_prefix_h585c4f72e1d84c1a(a, h, c, d)) goto B_k;
  return call_indirect(a[6]:int, e, f, ((a + 28)[0]:int)[3]:int);
  label B_p:
  i = 0;
  b = k;
  goto B_n;
  label B_o:
  b = k >> 1;
  i = k + 1 >> 1;
  label B_n:
  b = b + 1;
  k = (a + 28)[0]:int;
  j = a[1]:int;
  l = a[6]:int;
  loop L_s {
    b = b + -1;
    if (eqz(b)) goto B_r;
    if (eqz(call_indirect(l, j, k[4]))) continue L_s;
  }
  return 1;
  label B_r:
  b = 1;
  if (j == 1114112) goto B_k;
  if (
    core_fmt_Formatter_pad_integral_write_prefix_h585c4f72e1d84c1a(a, h, c, d)) goto B_k;
  if (call_indirect(a[6]:int, e, f, (a[7]:int)[3]:int)) goto B_k;
  k = a[7]:int;
  l = a[6]:int;
  b = 0;
  loop L_u {
    if (i != b) goto B_v;
    b = i;
    goto B_t;
    label B_v:
    b = b + 1;
    if (eqz(call_indirect(l, j, k[4]))) continue L_u;
  }
  b = b + -1;
  label B_t:
  b = b < i;
  goto B_k;
  label B_m:
  g = a[1]:int;
  a[1]:int = 48;
  var m:int = a[32]:ubyte;
  b = 1;
  a[32]:byte = 1;
  if (
    core_fmt_Formatter_pad_integral_write_prefix_h585c4f72e1d84c1a(a, h, c, d)) goto B_k;
  b = 0;
  k = j - i;
  d = k;
  br_table[B_w, B_y, B_x, ..B_w](
    select_if(1, j = a[32]:ubyte, j == 3) & 3)
  label B_y:
  d = 0;
  b = k;
  goto B_w;
  label B_x:
  b = k >> 1;
  d = k + 1 >> 1;
  label B_w:
  b = b + 1;
  k = (a + 28)[0]:int;
  j = a[1]:int;
  l = a[6]:int;
  loop L_aa {
    b = b + -1;
    if (eqz(b)) goto B_z;
    if (eqz(call_indirect(l, j, k[4]))) continue L_aa;
  }
  return 1;
  label B_z:
  b = 1;
  if (j == 1114112) goto B_k;
  if (call_indirect(a[6]:int, e, f, (a[7]:int)[3]:int)) goto B_k;
  b = a[7]:int;
  l = a[6]:int;
  k = 0;
  loop L_ca {
    if (d == k) goto B_ba;
    k = k + 1;
    if (eqz(call_indirect(l, j, b[4]:int))) continue L_ca;
  }
  b = 1;
  if (k + -1 < d) goto B_k;
  label B_ba:
  a[32]:byte = m;
  a[1]:int = g;
  return 0;
  label B_k:
  return b;
}

function rdl_realloc(a:int, b:{ a:int, b:int }, c:int, d:int):int {
  var e:int;
  var f:int;
  var h:int;
  var i:int;
  if (c < 9) goto B_d;
  c = dlmalloc_Dlmalloc_A_malloc_hbd2b2a561e0ef670(d, c);
  if (c) goto B_c;
  return 0;
  label B_d:
  c = 0;
  b = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
  b = (b -
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(b, 8) +
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8) +
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) +
       -65544 &
       -9) +
      -3;
  if (
    select_if(
      b,
      e = 0 - (dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) << 2),
      e > b) <=
    d) goto B_b;
  e =
    dlmalloc_dlmalloc_align_up_h4772c6244aec6713(
      select_if(
        16,
        d + 4,
        dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) + -5 > d),
      8);
  b = dlmalloc_dlmalloc_Chunk_from_mem_hee6c19b2ff028b5c(a);
  var g:int_ptr =
    dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(
      b,
      f = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(b));
  if (dlmalloc_dlmalloc_Chunk_mmapped_h433d048e993b396e(b)) goto B_l;
  if (f >= e) goto B_k;
  if (g == 0[263776]:int) goto B_j;
  if (g == 0[263775]:int) goto B_i;
  if (dlmalloc_dlmalloc_Chunk_cinuse_h5e879d0433022895(g)) goto B_e;
  h = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(g);
  f = h + f;
  if (f < e) goto B_e;
  i = f - e;
  if (h < 256) goto B_h;
  dlmalloc_dlmalloc_Dlmalloc_A_unlink_large_chunk_hb07925f032cc8648(g);
  goto B_g;
  label B_l:
  f = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(b);
  if (e < 256) goto B_e;
  if (f < e + 4) goto B_m;
  if (f - e < 131073) goto B_f;
  label B_m:
  e =
    dlmalloc_sys_System_as_dlmalloc_Allocator_remap_h2ff00066846ea921(
      1054692,
      b - (g = b.a),
      h = f + g + 16,
      f =
        dlmalloc_dlmalloc_align_up_h4772c6244aec6713(
          e + 31,
          dlmalloc_sys_System_as_dlmalloc_Allocator_page_size_h2c29bf8b31566e63(
            1054692)),
      1);
  if (eqz(e)) goto B_e;
  b = e + g;
  b.b = (c = (d = f - g) + -16);
  a = dlmalloc_dlmalloc_Chunk_fencepost_head_h8f835e0dbf36cac4();
  dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(b, c)[1]:int =
    a;
  dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(b, d + -12)[1]:int =
    0;
  0[263777]:int = (d = 0[263777]:int + f - h);
  0[263784]:int = select_if(c = 0[263784]:int, e, e > c);
  0[263778]:int = select_if(c = 0[263778]:int, d, c > d);
  goto B_a;
  label B_k:
  f = f - e;
  if (f < dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8)) goto B_f;
  g = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(b, e);
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(b, e);
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(g, f);
  dlmalloc_dlmalloc_Dlmalloc_A_dispose_chunk_h3ee811b32e33ddb4(g, f);
  goto B_f;
  label B_j:
  f = 0[263774]:int + f;
  if (f <= e) goto B_e;
  g = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(b, e);
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(b, e);
  g[1] = (e = f - e) | 1;
  0[263774]:int = e;
  0[263776]:int = g;
  goto B_f;
  label B_i:
  f = 0[263773]:int + f;
  if (f < e) goto B_e;
  g = f - e;
  if (
    g >= dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8)) goto B_o;
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(b, f);
  g = 0;
  f = 0;
  goto B_n;
  label B_o:
  f = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(b, e);
  h = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(f, g);
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(b, e);
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_free_chunk_h94ceb082391f899d(
    f,
    g);
  dlmalloc_dlmalloc_Chunk_clear_pinuse_h1e84b2f283ad8e89(h);
  label B_n:
  0[263775]:int = f;
  0[263773]:int = g;
  goto B_f;
  label B_h:
  var j:int_ptr = (g + 12)[0]:int;
  if (j == (g = (g + 8)[0]:int)) goto B_p;
  g[3] = j;
  j[2] = g;
  goto B_g;
  label B_p:
  0[263673]:int = 0[263673]:int & -2 << (h >> 3);
  label B_g:
  if (i < dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8)) goto B_q;
  f = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(b, e);
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(b, e);
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(f, i);
  dlmalloc_dlmalloc_Dlmalloc_A_dispose_chunk_h3ee811b32e33ddb4(f, i);
  goto B_f;
  label B_q:
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(b, f);
  label B_f:
  if (b) goto B_a;
  label B_e:
  e = dlmalloc_dlmalloc_Dlmalloc_A_malloc_heeb693c723d77fa0(d);
  if (eqz(e)) goto B_b;
  d =
    memcpy(
      e,
      a,
      select_if(
        d,
        c =
          dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(b) +
          select_if(-8, -4, dlmalloc_dlmalloc_Chunk_mmapped_h433d048e993b396e(b)),
        c > d));
  dlmalloc_dlmalloc_Dlmalloc_A_free_hb07eefd31eacd84c(a);
  return d;
  label B_c:
  memcpy(c, a, select_if(d, b, b > d));
  dlmalloc_dlmalloc_Dlmalloc_A_free_hb07eefd31eacd84c(a);
  label B_b:
  return c;
  label B_a:
  dlmalloc_dlmalloc_Chunk_mmapped_h433d048e993b396e(b);
  return dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(b);
}

function alloc_alloc_Global_as_core_alloc_Allocator_shrink_h98f61a500c62f843(a:{ a:int, b:int }, b:int, c:int, d:int, e:int, f:int, g:int) {
  var fb:int;
  var eb:int;
  var na:int;
  var ma:int;
  var qb:int;
  var rb:int;
  var sb:int;
  var ha:int;
  var h:int = g_a;
  var i:int = 160;
  var j:int_ptr = h - i;
  g_a = j;
  j[14] = d;
  j[15] = e;
  j[16] = f;
  j[17] = g;
  j[24] = b;
  j[25] = c;
  var k:int = 64;
  var l:int = j + k;
  var m:int = l;
  var n:int = core_alloc_layout_Layout_size_h23e58bed513508c1(m);
  j[20] = n;
  var o:int = j[20];
  if (o) goto B_e;
  var p:int = j[14];
  var q:int = j[15];
  alloc_alloc_Global_as_core_alloc_Allocator_deallocate_hfe35b4695cc8f537(
    b,
    c,
    p,
    q);
  goto B_d;
  label B_e:
  var r:int = 80;
  var s:int = j + r;
  var t:int = s;
  j[30] = t;
  var u:int = 56;
  var v:int = j + u;
  var w:int = v;
  var x:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(w);
  var y:int = 64;
  var z:int = j + y;
  var aa:int = z;
  var ba:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(aa);
  var ca:int = x;
  var da:int = ba;
  var ea:int = ca == da;
  var fa:int = 1;
  var ga:int = ea & fa;
  if (ga) goto B_g;
  ha = j[20];
  j[35] = ha;
  var ia:int = j[16];
  var ja:int = j[17];
  var ka:int = 48;
  var la:int = j + ka;
  alloc_alloc_Global_as_core_alloc_Allocator_allocate_h728542ee676fe2a2(
    la,
    b,
    ia,
    ja);
  ma = j[13];
  na = j[12];
  goto B_f;
  label B_g:
  var oa:int = j[20];
  j[31] = oa;
  var pa:int = 56;
  var qa:int = j + pa;
  var ra:int = qa;
  core_alloc_layout_Layout_size_h23e58bed513508c1(ra);
  var sa:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(c);
  var ta:int = j[14];
  var ua:int = j[15];
  var va:int = alloc_alloc_realloc_hcf82e3a15434d0e7(sa, ta, ua, oa);
  j[32] = va;
  var wa:int = core_ptr_non_null_NonNull_T_new_h097dcfc41a1a0fb7(va);
  var xa:int = core_option_Option_T_ok_or_h5937c463bf2a8ab0(wa);
  var ya:int =
    core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h4b08277a288989e0(
      xa);
  j[21] = ya;
  var za:int = j[21];
  var ab:int = eqz(za);
  br_table[B_j, B_i, ..B_j](ab)
  label B_j:
  var bb:int = j[21];
  j[33] = bb;
  j[34] = bb;
  var cb:int = 16;
  var db:int = j + cb;
  core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(db,
                                                                     bb,
                                                                     oa);
  eb = j[5];
  fb = j[4];
  goto B_h;
  label B_i:
  var gb:int = 24;
  var hb:int = j + gb;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_8(
    hb);
  var ib:int = j[6];
  var jb:int = j[7];
  j[19] = jb;
  j[18] = ib;
  goto B_b;
  label B_h:
  j[18] = fb;
  j[19] = eb;
  goto B_c;
  label B_f:
  var kb:int = 40;
  var lb:int = j + kb;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_ha097dea39e8374c5(
    lb,
    na,
    ma);
  var mb:int = j[10];
  var nb:int = j[11];
  j[23] = nb;
  j[22] = mb;
  var ob:int = j[22];
  var pb:int = eqz(ob);
  br_table[B_m, B_l, ..B_m](pb)
  label B_m:
  qb = j[22];
  rb = j[23];
  j[36] = qb;
  j[37] = rb;
  j[38] = qb;
  j[39] = rb;
  sb = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(c);
  goto B_k;
  label B_l:
  var tb:int = 32;
  var ub:int = j + tb;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_8(
    ub);
  var vb:int = j[8];
  var wb:int = j[9];
  j[19] = wb;
  j[18] = vb;
  goto B_b;
  label B_k:
  var xb:int =
    core_ptr_non_null_NonNull_T_as_mut_ptr_h88585fb77a23da8e(qb, rb);
  core_intrinsics_copy_nonoverlapping_h2eac84473f2f528f(sb, xb, ha);
  var yb:int = j[14];
  var zb:int = j[15];
  alloc_alloc_Global_as_core_alloc_Allocator_deallocate_hfe35b4695cc8f537(
    b,
    c,
    yb,
    zb);
  j[18] = qb;
  j[19] = rb;
  goto B_c;
  label B_d:
  var ac:int = 64;
  var bc:int = j + ac;
  var cc:int = bc;
  var dc:int = core_alloc_layout_Layout_dangling_h0c39cb062893327b(cc);
  var ec:int = 0;
  var fc:int = 8;
  var gc:int = j + fc;
  core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(gc,
                                                                     dc,
                                                                     ec);
  var hc:int = j[3];
  var ic:int = j[2];
  j[18] = ic;
  j[19] = hc;
  label B_c:
  goto B_a;
  label B_b:
  label B_a:
  var jc:int = j[18];
  var kc:int = j[19];
  a.b = kc;
  a.a = jc;
  var lc:int = 160;
  var mc:int = j + lc;
  g_a = mc;
}

function alloc_alloc_Global_as_core_alloc_Allocator_shrink_he09bdecb195285bf(a:{ a:int, b:int }, b:int, c:int, d:int, e:int, f:int, g:int) {
  var fb:int;
  var eb:int;
  var na:int;
  var ma:int;
  var qb:int;
  var rb:int;
  var sb:int;
  var ha:int;
  var h:int = g_a;
  var i:int = 160;
  var j:int_ptr = h - i;
  g_a = j;
  j[14] = d;
  j[15] = e;
  j[16] = f;
  j[17] = g;
  j[24] = b;
  j[25] = c;
  var k:int = 64;
  var l:int = j + k;
  var m:int = l;
  var n:int = core_alloc_layout_Layout_size_hd03d4df4a572a4a6(m);
  j[20] = n;
  var o:int = j[20];
  if (o) goto B_e;
  var p:int = j[14];
  var q:int = j[15];
  alloc_alloc_Global_as_core_alloc_Allocator_deallocate_he61c762e632941bb(
    b,
    c,
    p,
    q);
  goto B_d;
  label B_e:
  var r:int = 80;
  var s:int = j + r;
  var t:int = s;
  j[30] = t;
  var u:int = 56;
  var v:int = j + u;
  var w:int = v;
  var x:int = core_alloc_layout_Layout_align_he66d4e1016473d9e(w);
  var y:int = 64;
  var z:int = j + y;
  var aa:int = z;
  var ba:int = core_alloc_layout_Layout_align_he66d4e1016473d9e(aa);
  var ca:int = x;
  var da:int = ba;
  var ea:int = ca == da;
  var fa:int = 1;
  var ga:int = ea & fa;
  if (ga) goto B_g;
  ha = j[20];
  j[35] = ha;
  var ia:int = j[16];
  var ja:int = j[17];
  var ka:int = 48;
  var la:int = j + ka;
  alloc_alloc_Global_as_core_alloc_Allocator_allocate_h25e9c620e376dca7(
    la,
    b,
    ia,
    ja);
  ma = j[13];
  na = j[12];
  goto B_f;
  label B_g:
  var oa:int = j[20];
  j[31] = oa;
  var pa:int = 56;
  var qa:int = j + pa;
  var ra:int = qa;
  core_alloc_layout_Layout_size_hd03d4df4a572a4a6(ra);
  var sa:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(c);
  var ta:int = j[14];
  var ua:int = j[15];
  var va:int = alloc_alloc_realloc_h02bf57a43f0f7c0d(sa, ta, ua, oa);
  j[32] = va;
  var wa:int = core_ptr_non_null_NonNull_T_new_h097dcfc41a1a0fb7(va);
  var xa:int = core_option_Option_T_ok_or_h5937c463bf2a8ab0(wa);
  var ya:int =
    core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h4b08277a288989e0(
      xa);
  j[21] = ya;
  var za:int = j[21];
  var ab:int = eqz(za);
  br_table[B_j, B_i, ..B_j](ab)
  label B_j:
  var bb:int = j[21];
  j[33] = bb;
  j[34] = bb;
  var cb:int = 16;
  var db:int = j + cb;
  core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(db,
                                                                     bb,
                                                                     oa);
  eb = j[5];
  fb = j[4];
  goto B_h;
  label B_i:
  var gb:int = 24;
  var hb:int = j + gb;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_8(
    hb);
  var ib:int = j[6];
  var jb:int = j[7];
  j[19] = jb;
  j[18] = ib;
  goto B_b;
  label B_h:
  j[18] = fb;
  j[19] = eb;
  goto B_c;
  label B_f:
  var kb:int = 40;
  var lb:int = j + kb;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_ha097dea39e8374c5(
    lb,
    na,
    ma);
  var mb:int = j[10];
  var nb:int = j[11];
  j[23] = nb;
  j[22] = mb;
  var ob:int = j[22];
  var pb:int = eqz(ob);
  br_table[B_m, B_l, ..B_m](pb)
  label B_m:
  qb = j[22];
  rb = j[23];
  j[36] = qb;
  j[37] = rb;
  j[38] = qb;
  j[39] = rb;
  sb = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(c);
  goto B_k;
  label B_l:
  var tb:int = 32;
  var ub:int = j + tb;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_8(
    ub);
  var vb:int = j[8];
  var wb:int = j[9];
  j[19] = wb;
  j[18] = vb;
  goto B_b;
  label B_k:
  var xb:int =
    core_ptr_non_null_NonNull_T_as_mut_ptr_h88585fb77a23da8e(qb, rb);
  core_intrinsics_copy_nonoverlapping_h2eac84473f2f528f(sb, xb, ha);
  var yb:int = j[14];
  var zb:int = j[15];
  alloc_alloc_Global_as_core_alloc_Allocator_deallocate_he61c762e632941bb(
    b,
    c,
    yb,
    zb);
  j[18] = qb;
  j[19] = rb;
  goto B_c;
  label B_d:
  var ac:int = 64;
  var bc:int = j + ac;
  var cc:int = bc;
  var dc:int = core_alloc_layout_Layout_dangling_hb70d900652111132(cc);
  var ec:int = 0;
  var fc:int = 8;
  var gc:int = j + fc;
  core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(gc,
                                                                     dc,
                                                                     ec);
  var hc:int = j[3];
  var ic:int = j[2];
  j[18] = ic;
  j[19] = hc;
  label B_c:
  goto B_a;
  label B_b:
  label B_a:
  var jc:int = j[18];
  var kc:int = j[19];
  a.b = kc;
  a.a = jc;
  var lc:int = 160;
  var mc:int = j + lc;
  g_a = mc;
}

function alloc_raw_vec_RawVec_T_A_shrink_hc076bb7f110ceef6(a:int_ptr, b:int_ptr, c:int) {
  var hb:int;
  var d:int = g_a;
  var e:int = 160;
  var f:int_ptr = d - e;
  g_a = f;
  f[28] = b;
  f[29] = c;
  f[39] = b;
  var g:int = b[1];
  f[38] = g;
  var h:int = f[38];
  var i:int = c;
  var j:int = h;
  var k:int = i <= j;
  var l:int = -1;
  var m:int = k ^ l;
  var n:int = 1;
  var o:int = m & n;
  if (o) goto B_b;
  var p:int = 40;
  var q:int = f + p;
  var r:int = q;
  alloc_raw_vec_RawVec_T_A_current_memory_h3ed01d8952423f2d(r, b);
  goto B_a;
  label B_b:
  var s:int = 1051529;
  var t:int = s;
  var u:int = 36;
  var v:int = 1051568;
  var w:int = v;
  core_panicking_panic_hceae0c79b0247f98(t, u, w);
  unreachable;
  label B_a:
  var x:int = f[10];
  var y:int = 0;
  var z:int = x;
  var aa:int = y;
  var ba:int = z == aa;
  var ca:int = 0;
  var da:int = 1;
  var ea:int = 1;
  var fa:int = ba & ea;
  var ga:int = select_if(ca, da, fa);
  var ha:int = 1;
  var ia:int = ga;
  var ja:int = ha;
  var ka:int = ia == ja;
  var la:int = 1;
  var ma:int = ka & la;
  if (eqz(ma)) goto B_e;
  var na:int = 40;
  var oa:int = f + na;
  var pa:long_ptr@4 = oa;
  var qa:int = 56;
  var ra:int = f + qa;
  var sa:long_ptr@4 = ra;
  var wc:long = pa[0];
  sa[0] = wc;
  var ta:int = 8;
  var ua:int_ptr = sa + ta;
  var va:int_ptr = pa + ta;
  var wa:int = va[0];
  ua[0] = wa;
  var xa:int = 24;
  var ya:int = f + xa;
  var za:long_ptr@4 = ya;
  var ab:int = 56;
  var bb:int = f + ab;
  var cb:long_ptr@4 = bb;
  var xc:long = cb[0];
  za[0] = xc;
  var db:int = 8;
  var eb:int_ptr = za + db;
  var fb:int_ptr = cb + db;
  var gb:int = fb[0];
  eb[0] = gb;
  hb = f[6];
  f[30] = hb;
  var ib:int = f[7];
  var jb:int = f[8];
  f[4] = ib;
  f[5] = jb;
  goto B_d;
  label B_e:
  var kb:int = 0;
  a[0] = kb;
  goto B_c;
  label B_d:
  var lb:int = 2;
  var mb:int = c << lb;
  f[31] = mb;
  var nb:int = 16;
  var ob:int = f + nb;
  var pb:int = ob;
  var qb:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(pb);
  var rb:int = 8;
  var sb:int = f + rb;
  core_alloc_layout_Layout_from_size_align_unchecked_h6a97c487e6240d7c(
    sb,
    mb,
    qb);
  var tb:int = f[2];
  var ub:int = f[3];
  f[19] = ub;
  f[18] = tb;
  var vb:int = f[4];
  var wb:int = f[5];
  var xb:int = f[18];
  var yb:int = f[19];
  alloc_alloc_Global_as_core_alloc_Allocator_shrink_h98f61a500c62f843(
    f,
    b,
    hb,
    vb,
    wb,
    xb,
    yb);
  var zb:int = f[1];
  var ac:int = f[0];
  var bc:int = 72;
  var cc:int = f + bc;
  var dc:int = cc;
  f[27] = dc;
  var ec:int = f[27];
  var fc:int = 96;
  var gc:int = f + fc;
  var hc:int = gc;
  core_result_Result_T_E_map_err_h4e67806147a045fe(hc, ac, zb, ec);
  var ic:int = 80;
  var jc:int = f + ic;
  var kc:int = jc;
  var lc:int = 96;
  var mc:int = f + lc;
  var nc:int = mc;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hf58cc5d16ffdbe96(
    kc,
    nc);
  var oc:int = f[20];
  br_table[B_h, B_g, ..B_h](oc)
  label B_h:
  var pc:int = f[21];
  var qc:int = f[22];
  f[34] = pc;
  f[35] = qc;
  f[36] = pc;
  f[37] = qc;
  alloc_raw_vec_RawVec_T_A_set_ptr_hec4448a08f40cd8e(b, pc, qc);
  goto B_f;
  label B_g:
  var rc:int = f[21];
  var sc:int = f[22];
  f[32] = rc;
  f[33] = sc;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_3(
    a,
    rc,
    sc);
  goto B_c;
  label B_f:
  var tc:int = 0;
  a[0] = tc;
  label B_c:
  var uc:int = 160;
  var vc:int = f + uc;
  g_a = vc;
}

function alloc_raw_vec_RawVec_T_A_shrink_h4f6c2444ca4b98f4(a:int_ptr, b:int_ptr, c:int) {
  var hb:int;
  var d:int = g_a;
  var e:int = 160;
  var f:int_ptr = d - e;
  g_a = f;
  f[28] = b;
  f[29] = c;
  f[39] = b;
  var g:int = b[1];
  f[38] = g;
  var h:int = f[38];
  var i:int = c;
  var j:int = h;
  var k:int = i <= j;
  var l:int = -1;
  var m:int = k ^ l;
  var n:int = 1;
  var o:int = m & n;
  if (o) goto B_b;
  var p:int = 40;
  var q:int = f + p;
  var r:int = q;
  alloc_raw_vec_RawVec_T_A_current_memory_h2f68139788e5409a(r, b);
  goto B_a;
  label B_b:
  var s:int = 1051529;
  var t:int = s;
  var u:int = 36;
  var v:int = 1051568;
  var w:int = v;
  core_panicking_panic_hceae0c79b0247f98(t, u, w);
  unreachable;
  label B_a:
  var x:int = f[10];
  var y:int = 0;
  var z:int = x;
  var aa:int = y;
  var ba:int = z == aa;
  var ca:int = 0;
  var da:int = 1;
  var ea:int = 1;
  var fa:int = ba & ea;
  var ga:int = select_if(ca, da, fa);
  var ha:int = 1;
  var ia:int = ga;
  var ja:int = ha;
  var ka:int = ia == ja;
  var la:int = 1;
  var ma:int = ka & la;
  if (eqz(ma)) goto B_e;
  var na:int = 40;
  var oa:int = f + na;
  var pa:long_ptr@4 = oa;
  var qa:int = 56;
  var ra:int = f + qa;
  var sa:long_ptr@4 = ra;
  var wc:long = pa[0];
  sa[0] = wc;
  var ta:int = 8;
  var ua:int_ptr = sa + ta;
  var va:int_ptr = pa + ta;
  var wa:int = va[0];
  ua[0] = wa;
  var xa:int = 24;
  var ya:int = f + xa;
  var za:long_ptr@4 = ya;
  var ab:int = 56;
  var bb:int = f + ab;
  var cb:long_ptr@4 = bb;
  var xc:long = cb[0];
  za[0] = xc;
  var db:int = 8;
  var eb:int_ptr = za + db;
  var fb:int_ptr = cb + db;
  var gb:int = fb[0];
  eb[0] = gb;
  hb = f[6];
  f[30] = hb;
  var ib:int = f[7];
  var jb:int = f[8];
  f[4] = ib;
  f[5] = jb;
  goto B_d;
  label B_e:
  var kb:int = 0;
  a[0] = kb;
  goto B_c;
  label B_d:
  var lb:int = 0;
  var mb:int = c << lb;
  f[31] = mb;
  var nb:int = 16;
  var ob:int = f + nb;
  var pb:int = ob;
  var qb:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(pb);
  var rb:int = 8;
  var sb:int = f + rb;
  core_alloc_layout_Layout_from_size_align_unchecked_h6a97c487e6240d7c(
    sb,
    mb,
    qb);
  var tb:int = f[2];
  var ub:int = f[3];
  f[19] = ub;
  f[18] = tb;
  var vb:int = f[4];
  var wb:int = f[5];
  var xb:int = f[18];
  var yb:int = f[19];
  alloc_alloc_Global_as_core_alloc_Allocator_shrink_h98f61a500c62f843(
    f,
    b,
    hb,
    vb,
    wb,
    xb,
    yb);
  var zb:int = f[1];
  var ac:int = f[0];
  var bc:int = 72;
  var cc:int = f + bc;
  var dc:int = cc;
  f[27] = dc;
  var ec:int = f[27];
  var fc:int = 96;
  var gc:int = f + fc;
  var hc:int = gc;
  core_result_Result_T_E_map_err_h591587c29f933f45(hc, ac, zb, ec);
  var ic:int = 80;
  var jc:int = f + ic;
  var kc:int = jc;
  var lc:int = 96;
  var mc:int = f + lc;
  var nc:int = mc;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hf58cc5d16ffdbe96(
    kc,
    nc);
  var oc:int = f[20];
  br_table[B_h, B_g, ..B_h](oc)
  label B_h:
  var pc:int = f[21];
  var qc:int = f[22];
  f[34] = pc;
  f[35] = qc;
  f[36] = pc;
  f[37] = qc;
  alloc_raw_vec_RawVec_T_A_set_ptr_hec5570548688c1cd(b, pc, qc);
  goto B_f;
  label B_g:
  var rc:int = f[21];
  var sc:int = f[22];
  f[32] = rc;
  f[33] = sc;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_3(
    a,
    rc,
    sc);
  goto B_c;
  label B_f:
  var tc:int = 0;
  a[0] = tc;
  label B_c:
  var uc:int = 160;
  var vc:int = f + uc;
  g_a = vc;
}

function alloc_raw_vec_RawVec_T_A_shrink_h8b1ee712d7cfb67b(a:int_ptr, b:int_ptr, c:int) {
  var hb:int;
  var d:int = g_a;
  var e:int = 160;
  var f:int_ptr = d - e;
  g_a = f;
  f[28] = b;
  f[29] = c;
  f[39] = b;
  var g:int = b[1];
  f[38] = g;
  var h:int = f[38];
  var i:int = c;
  var j:int = h;
  var k:int = i <= j;
  var l:int = -1;
  var m:int = k ^ l;
  var n:int = 1;
  var o:int = m & n;
  if (o) goto B_b;
  var p:int = 40;
  var q:int = f + p;
  var r:int = q;
  alloc_raw_vec_RawVec_T_A_current_memory_h2f68139788e5409a(r, b);
  goto B_a;
  label B_b:
  var s:int = 1052297;
  var t:int = s;
  var u:int = 36;
  var v:int = 1052336;
  var w:int = v;
  core_panicking_panic_hceae0c79b0247f98(t, u, w);
  unreachable;
  label B_a:
  var x:int = f[10];
  var y:int = 0;
  var z:int = x;
  var aa:int = y;
  var ba:int = z == aa;
  var ca:int = 0;
  var da:int = 1;
  var ea:int = 1;
  var fa:int = ba & ea;
  var ga:int = select_if(ca, da, fa);
  var ha:int = 1;
  var ia:int = ga;
  var ja:int = ha;
  var ka:int = ia == ja;
  var la:int = 1;
  var ma:int = ka & la;
  if (eqz(ma)) goto B_e;
  var na:int = 40;
  var oa:int = f + na;
  var pa:long_ptr@4 = oa;
  var qa:int = 56;
  var ra:int = f + qa;
  var sa:long_ptr@4 = ra;
  var wc:long = pa[0];
  sa[0] = wc;
  var ta:int = 8;
  var ua:int_ptr = sa + ta;
  var va:int_ptr = pa + ta;
  var wa:int = va[0];
  ua[0] = wa;
  var xa:int = 24;
  var ya:int = f + xa;
  var za:long_ptr@4 = ya;
  var ab:int = 56;
  var bb:int = f + ab;
  var cb:long_ptr@4 = bb;
  var xc:long = cb[0];
  za[0] = xc;
  var db:int = 8;
  var eb:int_ptr = za + db;
  var fb:int_ptr = cb + db;
  var gb:int = fb[0];
  eb[0] = gb;
  hb = f[6];
  f[30] = hb;
  var ib:int = f[7];
  var jb:int = f[8];
  f[4] = ib;
  f[5] = jb;
  goto B_d;
  label B_e:
  var kb:int = 0;
  a[0] = kb;
  goto B_c;
  label B_d:
  var lb:int = 0;
  var mb:int = c << lb;
  f[31] = mb;
  var nb:int = 16;
  var ob:int = f + nb;
  var pb:int = ob;
  var qb:int = core_alloc_layout_Layout_align_he66d4e1016473d9e(pb);
  var rb:int = 8;
  var sb:int = f + rb;
  core_alloc_layout_Layout_from_size_align_unchecked_hd141f6a17bb12fc4(
    sb,
    mb,
    qb);
  var tb:int = f[2];
  var ub:int = f[3];
  f[19] = ub;
  f[18] = tb;
  var vb:int = f[4];
  var wb:int = f[5];
  var xb:int = f[18];
  var yb:int = f[19];
  alloc_alloc_Global_as_core_alloc_Allocator_shrink_he09bdecb195285bf(
    f,
    b,
    hb,
    vb,
    wb,
    xb,
    yb);
  var zb:int = f[1];
  var ac:int = f[0];
  var bc:int = 72;
  var cc:int = f + bc;
  var dc:int = cc;
  f[27] = dc;
  var ec:int = f[27];
  var fc:int = 96;
  var gc:int = f + fc;
  var hc:int = gc;
  core_result_Result_T_E_map_err_hf1e73b123fde224d(hc, ac, zb, ec);
  var ic:int = 80;
  var jc:int = f + ic;
  var kc:int = jc;
  var lc:int = 96;
  var mc:int = f + lc;
  var nc:int = mc;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h3781b88636f83108(
    kc,
    nc);
  var oc:int = f[20];
  br_table[B_h, B_g, ..B_h](oc)
  label B_h:
  var pc:int = f[21];
  var qc:int = f[22];
  f[34] = pc;
  f[35] = qc;
  f[36] = pc;
  f[37] = qc;
  alloc_raw_vec_RawVec_T_A_set_ptr_h9c2abfd0cbc1a937(b, pc, qc);
  goto B_f;
  label B_g:
  var rc:int = f[21];
  var sc:int = f[22];
  f[32] = rc;
  f[33] = sc;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_3(
    a,
    rc,
    sc);
  goto B_c;
  label B_f:
  var tc:int = 0;
  a[0] = tc;
  label B_c:
  var uc:int = 160;
  var vc:int = f + uc;
  g_a = vc;
}

function js_sys_global_get_global_object_h66d7855fb34f2042():int {
  var zb:int;
  var a:int = g_a;
  var b:int = 96;
  var c:int = a - b;
  g_a = c;
  var d:int = 0;
  c[91]:byte = d;
  var e:int = 40;
  var f:int = c + e;
  js_sys_global_get_global_object_Global_get_self_hc2d994b4110905b5(f);
  var g:int = c[11]:int;
  var h:int = c[10]:int;
  var i:int = 32;
  var j:int = c + i;
  core_result_Result_T_E_or_else_he3303fa4928a7d14(j, h, g);
  var k:int = c[9]:int;
  var l:int = c[8]:int;
  var m:int = 24;
  var n:int = c + m;
  core_result_Result_T_E_or_else_h6d4bebbf74593433(n, l, k);
  var o:int = c[7]:int;
  var p:int = c[6]:int;
  var q:int = 16;
  var r:int = c + q;
  core_result_Result_T_E_or_else_ha88beee38a6768f3(r, p, o);
  var s:int = c[4]:int;
  var t:int = c[5]:int;
  c[15]:int = t;
  c[14]:int = s;
  var u:int = 1;
  c[91]:byte = u;
  var v:int = c[14]:int;
  if (v) goto B_b;
  var w:int = 0;
  c[91]:byte = w;
  var x:int = c[15]:int;
  c[17]:int = x;
  var y:int = 68;
  var z:int = c + y;
  var aa:int = z;
  var ba:int =
    js_sys_Object_as_core_ops_deref_Deref_deref_h8da4a7ffabe90450(aa);
  var ca:int = wasm_bindgen_JsValue_is_undefined_hd826965f4d9968bd(ba);
  var da:int = -1;
  var ea:int = ca ^ da;
  var fa:int = 1;
  var ga:int = ea & fa;
  if (ga) goto B_c;
  var ha:int = 68;
  var ia:int = c + ha;
  var ja:int = ia;
  core_ptr_drop_in_place_js_sys_Object_h9a6c2effa8308ac5(ja);
  goto B_b;
  label B_c:
  var ka:int = c[17]:int;
  c[13]:int = ka;
  var la:int = c[14]:int;
  if (eqz(la)) goto B_d;
  var ma:int = 56;
  var na:int = c + ma;
  var oa:int = na;
  core_ptr_drop_in_place_core_result_Result_js_sys_Object_wasm_bindgen_JsValue_h002fbb0d3e54cb53(
    oa);
  label B_d:
  var pa:int = 0;
  c[91]:byte = pa;
  goto B_a;
  label B_b:
  var qa:int = 1051256;
  var ra:int = qa;
  var sa:int = 11;
  var ta:int = js_sys_Function_new_no_args_h3b2969208e3e6826(ra, sa);
  c[20]:int = ta;
  var ua:int = wasm_bindgen_JsValue_undefined_hfa9b1ae026853097();
  c[21]:int = ua;
  var va:int = 8;
  var wa:int = c + va;
  var xa:int = 80;
  var ya:int = c + xa;
  var za:int = 84;
  var ab:int = c + za;
  js_sys_Function_call0_h1e4c0e2abb07af5b(wa, ya, ab);
  var bb:int = c[3]:int;
  var cb:int = c[2]:int;
  core_result_Result_T_E_ok_hc8e02b1dab832ba2(c, cb, bb);
  var db:int = c[0]:int;
  var eb:int = c[1]:int;
  c[19]:int = eb;
  c[18]:int = db;
  var fb:int = 84;
  var gb:int = c + fb;
  var hb:int = gb;
  core_ptr_drop_in_place_wasm_bindgen_JsValue_ha52073a19a60eadc(hb);
  var ib:int = 80;
  var jb:int = c + ib;
  var kb:int = jb;
  core_ptr_drop_in_place_js_sys_Function_h2f6e8fcb028e8385(kb);
  var lb:int = 72;
  var mb:int = c + lb;
  var nb:int = mb;
  var ob:int = core_option_Option_T_is_some_ha00975938eb3f18f(nb);
  var pb:int = -1;
  var qb:int = ob ^ pb;
  var rb:int = 1;
  var sb:int = qb & rb;
  if (sb) goto B_i;
  var tb:int = c[18]:int;
  br_table[B_h, B_g, ..B_h](tb);
  label B_i:
  var ub:int = 1051267;
  var vb:int = ub;
  var wb:int = 32;
  var xb:int = 1051388;
  var yb:int = xb;
  core_panicking_panic_hceae0c79b0247f98(vb, wb, yb);
  unreachable;
  label B_h:
  zb = wasm_bindgen_JsValue_undefined_hfa9b1ae026853097();
  goto B_f;
  label B_g:
  var ac:int = c[19]:int;
  c[23]:int = ac;
  var bc:int =
    wasm_bindgen_cast_JsCast_unchecked_into_hc9f53ee90f80bb77(ac);
  c[13]:int = bc;
  goto B_e;
  label B_f:
  var cc:int =
    wasm_bindgen_cast_JsCast_unchecked_into_hc9f53ee90f80bb77(zb);
  c[13]:int = cc;
  label B_e:
  var dc:int = c[14]:int;
  if (dc) goto B_l;
  var ec:int = c[91]:ubyte;
  var fc:int = 1;
  var gc:int = ec & fc;
  if (gc) goto B_k;
  goto B_j;
  label B_l:
  var hc:int = 56;
  var ic:int = c + hc;
  var jc:int = ic;
  core_ptr_drop_in_place_core_result_Result_js_sys_Object_wasm_bindgen_JsValue_h002fbb0d3e54cb53(
    jc);
  goto B_j;
  label B_k:
  var kc:int = 56;
  var lc:int = c + kc;
  var mc:int = lc;
  var nc:int = 4;
  var oc:int = mc + nc;
  core_ptr_drop_in_place_js_sys_Object_h9a6c2effa8308ac5(oc);
  label B_j:
  var pc:int = 0;
  c[91]:byte = pc;
  label B_a:
  var qc:int = c[13]:int;
  var rc:int = 96;
  var sc:int = c + rc;
  g_a = sc;
  return qc;
}

function match_twenty_sign_MD5_padding_h9ac408e9498a8a44(a:int, b:int, c:int) {
  var z:int;
  var wa:int;
  var va:int;
  var qc:long;
  var d:int = g_a;
  var e:int = 80;
  var f:int = d - e;
  g_a = f;
  f[12]:int = b;
  f[13]:int = c;
  var g:int = c;
  var ic:long = i64_extend_i32_u(g);
  var jc:long = 3L;
  var kc:long = ic << jc;
  var lc:long = 2305843009213693951L;
  var mc:long = ic & lc;
  var h:int = mc != ic;
  var i:int = 1;
  var j:int = h & i;
  if (j) goto B_b;
  f[7]:long = kc;
  alloc_slice_impl_alloc_borrow_ToOwned_for_T_to_owned_h42ffe34c41d6a148(
    a,
    b,
    c);
  goto B_a;
  label B_b:
  var k:int = 1049616;
  var l:int = k;
  var m:int = 33;
  var n:int = 1049592;
  var o:int = n;
  core_panicking_panic_hceae0c79b0247f98(l, m, o);
  unreachable;
  label B_a:
  var p:int = 128;
  alloc_vec_Vec_T_A_push_hdd7f5def12062516(a, p);
  loop L_c {
    var q:int = alloc_vec_Vec_T_A_len_h6beeebfabdd2aa80(a);
    var r:int = 3;
    var s:int = q << r;
    var t:int = 536870911;
    var u:int = q & t;
    var v:int = u != q;
    var w:int = 1;
    var x:int = v & w;
    if (x) goto B_i;
    var y:int = 64;
    z = s + y;
    var aa:int = z < s;
    var ba:int = 1;
    var ca:int = aa & ba;
    if (ca) goto B_g;
    goto B_h;
    label B_i:
    var da:int = 1049616;
    var ea:int = da;
    var fa:int = 33;
    var ga:int = 1049652;
    var ha:int = ga;
    core_panicking_panic_hceae0c79b0247f98(ea, fa, ha);
    unreachable;
    label B_h:
    var ia:int = 511;
    var ja:int = z & ia;
    if (eqz(ja)) goto B_f;
    goto B_e;
    label B_g:
    var ka:int = 1049696;
    var la:int = ka;
    var ma:int = 28;
    var na:int = 1049668;
    var oa:int = na;
    core_panicking_panic_hceae0c79b0247f98(la, ma, oa);
    unreachable;
    label B_f:
    var pa:int = 0;
    f[6]:int = pa;
    var qa:int = 8;
    f[7]:int = qa;
    var ra:int = f[6]:int;
    var sa:int = f[7]:int;
    var ta:int = 16;
    var ua:int = f + ta;
    I_as_core_iter_collect_IntoIterator_into_iter_h6d304cdaeb34afb9(ua,
                                                                    ra,
                                                                    sa);
    va = f[5]:int;
    wa = f[4]:int;
    goto B_d;
    label B_e:
    var xa:int = 0;
    alloc_vec_Vec_T_A_push_hdd7f5def12062516(a, xa);
    continue L_c;
    label B_d:
  }
  f[8]:int = wa;
  f[9]:int = va;
  loop L_j {
    var ya:int = 8;
    var za:int = f + ya;
    var ab:int = 32;
    var bb:int = f + ab;
    core_iter_range_impl_core_iter_iterator_Iterator_for_core_ops_range_Range_A_next_hab889fd73c12cadf(
      za,
      bb);
    var cb:int = f[2]:int;
    var db:int = f[3]:int;
    f[11]:int = db;
    f[10]:int = cb;
    var eb:int = f[10]:int;
    br_table[B_l, B_k, ..B_l](eb)
    label B_l:
    var fb:int = 80;
    var gb:int = f + fb;
    g_a = gb;
    return ;
    label B_k:
    var hb:int = f[11]:int;
    f[17]:int = hb;
    f[18]:int = hb;
    f[19]:int = hb;
    var ib:int = 3;
    var jb:int = hb << ib;
    var kb:int = jb >> ib;
    var lb:int = kb != hb;
    var mb:int = 1;
    var nb:int = lb & mb;
    if (nb) goto B_o;
    var ob:int = -64;
    var pb:int = jb & ob;
    var qb:int = 0;
    var rb:int = pb;
    var sb:int = qb;
    var tb:int = rb != sb;
    var ub:int = jb;
    var nc:long = i64_extend_i32_u(ub);
    var oc:long = 63L;
    var pc:long = nc & oc;
    qc = kc >> pc;
    var vb:int = 1;
    var wb:int = tb & vb;
    if (wb) goto B_m;
    goto B_n;
    label B_o:
    var xb:int = 1049616;
    var yb:int = xb;
    var zb:int = 33;
    var ac:int = 1049724;
    var bc:int = ac;
    core_panicking_panic_hceae0c79b0247f98(yb, zb, bc);
    unreachable;
    label B_n:
    var cc:int = i32_wrap_i64(qc);
    alloc_vec_Vec_T_A_push_hdd7f5def12062516(a, cc);
    continue L_j;
    label B_m:
  }
  var dc:int = 1049760;
  var ec:int = dc;
  var fc:int = 36;
  var gc:int = 1049740;
  var hc:int = gc;
  core_panicking_panic_hceae0c79b0247f98(ec, fc, hc);
  unreachable;
}

function alloc_raw_vec_finish_grow_h4df69d754331cc70(a:int, b:int, c:int, d:{ a:int, b:int, c:int }, e:int) {
  var x:int;
  var cb:int;
  var f:int = g_a;
  var g:int = 176;
  var h:int_ptr = f - g;
  g_a = h;
  h[30] = b;
  h[31] = c;
  h[33] = e;
  var i:int = 48;
  var j:int = h + i;
  var k:int = j;
  core_result_Result_T_E_map_err_hca94d505b9cea412(k, b, c);
  var l:int = 32;
  var m:int = h + l;
  var n:int = m;
  var o:int = 48;
  var p:int = h + o;
  var q:int = p;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hd25eed3a43a2d519(
    n,
    q);
  var r:int = h[8];
  br_table[B_e, B_d, ..B_e](r)
  label B_e:
  var s:int = h[9];
  var t:int = h[10];
  h[38] = s;
  h[39] = t;
  h[6] = s;
  h[7] = t;
  var u:int = 24;
  var v:int = h + u;
  var w:int = v;
  x = core_alloc_layout_Layout_size_hed7bf60fc00d518d(w);
  goto B_c;
  label B_d:
  var y:int = h[9];
  var z:int = h[10];
  h[36] = y;
  h[37] = z;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_1(
    a,
    y,
    z);
  goto B_b;
  label B_c:
  var aa:int = 80;
  var ba:int = h + aa;
  var ca:int = ba;
  alloc_raw_vec_alloc_guard_hde16a2763e2c8a9b(ca, x);
  var da:int = 64;
  var ea:int = h + da;
  var fa:int = ea;
  var ga:int = 80;
  var ha:int = h + ga;
  var ia:int = ha;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hb4c75229e6d96235(
    fa,
    ia);
  var ja:int = h[16];
  br_table[B_k, B_j, ..B_k](ja)
  label B_k:
  var ka:int = d.a;
  var la:int = 0;
  var ma:int = ka;
  var na:int = la;
  var oa:int = ma == na;
  var pa:int = 0;
  var qa:int = 1;
  var ra:int = 1;
  var sa:int = oa & ra;
  var ta:int = select_if(pa, qa, sa);
  var ua:int = 1;
  var va:int = ta;
  var wa:int = ua;
  var xa:int = va == wa;
  var ya:int = 1;
  var za:int = xa & ya;
  if (za) goto B_i;
  goto B_h;
  label B_j:
  var ab:int = h[17];
  var bb:int = h[18];
  h[40] = ab;
  h[41] = bb;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_2(
    a,
    ab,
    bb);
  goto B_b;
  label B_i:
  cb = d.a;
  h[43] = cb;
  var db:int = d.b;
  var eb:int = d.c;
  h[26] = db;
  h[27] = eb;
  var fb:int = 104;
  var gb:int = h + fb;
  var hb:int = gb;
  core_alloc_layout_Layout_align_hbe5a9f7fb8662166(hb);
  goto B_g;
  label B_h:
  var ib:int = h[6];
  var jb:int = h[7];
  var kb:int = 16;
  var lb:int = h + kb;
  alloc_alloc_Global_as_core_alloc_Allocator_allocate_h1b38be445c9f3eba(
    lb,
    e,
    ib,
    jb);
  var mb:int = h[4];
  var nb:int = h[5];
  h[25] = nb;
  h[24] = mb;
  goto B_f;
  label B_g:
  var ob:int = 24;
  var pb:int = h + ob;
  var qb:int = pb;
  core_alloc_layout_Layout_align_hbe5a9f7fb8662166(qb);
  var rb:int = h[26];
  var sb:int = h[27];
  var tb:int = h[6];
  var ub:int = h[7];
  var vb:int = 8;
  var wb:int = h + vb;
  alloc_alloc_Global_as_core_alloc_Allocator_grow_h4eb20161e4324771(wb,
                                                                    e,
                                                                    cb,
                                                                    rb,
                                                                    sb,
                                                                    tb,
                                                                    ub);
  var xb:int = h[2];
  var yb:int = h[3];
  h[25] = yb;
  h[24] = xb;
  label B_f:
  var zb:int = h[24];
  var ac:int = h[25];
  var bc:int = 24;
  var cc:int = h + bc;
  var dc:int = cc;
  h[29] = dc;
  var ec:int = h[29];
  core_result_Result_T_E_map_err_h50da166387ca36f2(a, zb, ac, ec);
  goto B_a;
  label B_b:
  label B_a:
  var fc:int = 176;
  var gc:int = h + fc;
  g_a = gc;
}

function alloc_raw_vec_RawVec_T_A_grow_amortized_h6f3c94781939137b(a:{ a:int, b:int, c:int }, b:int_ptr, c:int, d:int) {
  var ka:int;
  var o:int;
  var n:int;
  var e:int = g_a;
  var f:int = 192;
  var g:int_ptr = e - f;
  g_a = g;
  g[31] = b;
  g[32] = c;
  g[33] = d;
  var h:int = 4;
  if (h) goto B_d;
  var i:int = 0;
  g[9] = i;
  var j:int = g[8];
  var k:int = g[9];
  var l:int = 8;
  var m:int = g + l;
  T_as_core_convert_Into_U_into_h6eedd7c65925ce3f(m, j, k);
  n = g[3];
  o = g[2];
  goto B_c;
  label B_d:
  var p:int = 24;
  var q:int = g + p;
  core_num_impl_usize_checked_add_hf7e5797ba0069206(q, c, d);
  var r:int = g[7];
  var s:int = g[6];
  var t:int = 0;
  g[19] = t;
  var u:int = g[18];
  var v:int = g[19];
  var w:int = 56;
  var x:int = g + w;
  var y:int = x;
  core_option_Option_T_ok_or_he3d44d7429a7b916(y, s, r, u, v);
  var z:int = 40;
  var aa:int = g + z;
  var ba:int = aa;
  var ca:int = 56;
  var da:int = g + ca;
  var ea:int = da;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h35aa375f89099de4(
    ba,
    ea);
  var fa:int = g[10];
  br_table[B_g, B_f, ..B_g](fa)
  label B_g:
  var ga:int = g[11];
  g[36] = ga;
  g[37] = ga;
  var ha:int = b[1];
  var ia:int = 1;
  var ja:int = ha << ia;
  ka = core_cmp_max_h8ff0ff1744752a9e(ja, ga);
  g[38] = ka;
  goto B_e;
  label B_f:
  var la:int = g[11];
  var ma:int = g[12];
  g[34] = la;
  g[35] = ma;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_3(
    a,
    la,
    ma);
  goto B_b;
  label B_e:
  var na:int = 4;
  var oa:int = core_cmp_max_h8ff0ff1744752a9e(na, ka);
  g[39] = oa;
  var pa:int = 16;
  var qa:int = g + pa;
  core_alloc_layout_Layout_array_hefe76a252bc5502b(qa, oa);
  var ra:int = g[5];
  var sa:int = g[4];
  g[40] = sa;
  g[41] = ra;
  var ta:int = 112;
  var ua:int = g + ta;
  var va:int = ua;
  alloc_raw_vec_RawVec_T_A_current_memory_ha12411b11109967b(va, b);
  var wa:int = 96;
  var xa:int = g + wa;
  var ya:int = xa;
  var za:int = 112;
  var ab:int = g + za;
  var bb:int = ab;
  alloc_raw_vec_finish_grow_h4df69d754331cc70(ya, sa, ra, bb, b);
  var cb:int = 80;
  var db:int = g + cb;
  var eb:int = db;
  var fb:int = 96;
  var gb:int = g + fb;
  var hb:int = gb;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h0ba23edeaa9d2964(
    eb,
    hb);
  var ib:int = g[20];
  br_table[B_j, B_i, ..B_j](ib)
  label B_j:
  var jb:int = g[21];
  var kb:int = g[22];
  g[44] = jb;
  g[45] = kb;
  g[46] = jb;
  g[47] = kb;
  alloc_raw_vec_RawVec_T_A_set_ptr_hac1c8fd6f0b2313b(b, jb, kb);
  goto B_h;
  label B_i:
  var lb:int = g[21];
  var mb:int = g[22];
  g[42] = lb;
  g[43] = mb;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible(
    a,
    lb,
    mb);
  goto B_b;
  label B_h:
  var nb:int = 0;
  a.a = nb;
  goto B_a;
  label B_c:
  a.b = o;
  a.c = n;
  var ob:int = 1;
  a.a = ob;
  goto B_a;
  label B_b:
  label B_a:
  var pb:int = 192;
  var qb:int = g + pb;
  g_a = qb;
}

function alloc_raw_vec_RawVec_T_A_grow_amortized_h80923cd96e903f64(a:{ a:int, b:int, c:int }, b:int_ptr, c:int, d:int) {
  var ka:int;
  var o:int;
  var n:int;
  var e:int = g_a;
  var f:int = 192;
  var g:int_ptr = e - f;
  g_a = g;
  g[31] = b;
  g[32] = c;
  g[33] = d;
  var h:int = 1;
  if (h) goto B_d;
  var i:int = 0;
  g[9] = i;
  var j:int = g[8];
  var k:int = g[9];
  var l:int = 8;
  var m:int = g + l;
  T_as_core_convert_Into_U_into_h6eedd7c65925ce3f(m, j, k);
  n = g[3];
  o = g[2];
  goto B_c;
  label B_d:
  var p:int = 24;
  var q:int = g + p;
  core_num_impl_usize_checked_add_he4defe1b23ead510(q, c, d);
  var r:int = g[7];
  var s:int = g[6];
  var t:int = 0;
  g[19] = t;
  var u:int = g[18];
  var v:int = g[19];
  var w:int = 56;
  var x:int = g + w;
  var y:int = x;
  core_option_Option_T_ok_or_he3d44d7429a7b916(y, s, r, u, v);
  var z:int = 40;
  var aa:int = g + z;
  var ba:int = aa;
  var ca:int = 56;
  var da:int = g + ca;
  var ea:int = da;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h35aa375f89099de4(
    ba,
    ea);
  var fa:int = g[10];
  br_table[B_g, B_f, ..B_g](fa)
  label B_g:
  var ga:int = g[11];
  g[36] = ga;
  g[37] = ga;
  var ha:int = b[1];
  var ia:int = 1;
  var ja:int = ha << ia;
  ka = core_cmp_max_h8ff0ff1744752a9e(ja, ga);
  g[38] = ka;
  goto B_e;
  label B_f:
  var la:int = g[11];
  var ma:int = g[12];
  g[34] = la;
  g[35] = ma;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_3(
    a,
    la,
    ma);
  goto B_b;
  label B_e:
  var na:int = 8;
  var oa:int = core_cmp_max_h8ff0ff1744752a9e(na, ka);
  g[39] = oa;
  var pa:int = 16;
  var qa:int = g + pa;
  core_alloc_layout_Layout_array_h1dd6e37423ca8722(qa, oa);
  var ra:int = g[5];
  var sa:int = g[4];
  g[40] = sa;
  g[41] = ra;
  var ta:int = 112;
  var ua:int = g + ta;
  var va:int = ua;
  alloc_raw_vec_RawVec_T_A_current_memory_h2f68139788e5409a(va, b);
  var wa:int = 96;
  var xa:int = g + wa;
  var ya:int = xa;
  var za:int = 112;
  var ab:int = g + za;
  var bb:int = ab;
  alloc_raw_vec_finish_grow_h4df69d754331cc70(ya, sa, ra, bb, b);
  var cb:int = 80;
  var db:int = g + cb;
  var eb:int = db;
  var fb:int = 96;
  var gb:int = g + fb;
  var hb:int = gb;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h0ba23edeaa9d2964(
    eb,
    hb);
  var ib:int = g[20];
  br_table[B_j, B_i, ..B_j](ib)
  label B_j:
  var jb:int = g[21];
  var kb:int = g[22];
  g[44] = jb;
  g[45] = kb;
  g[46] = jb;
  g[47] = kb;
  alloc_raw_vec_RawVec_T_A_set_ptr_h9c2abfd0cbc1a937(b, jb, kb);
  goto B_h;
  label B_i:
  var lb:int = g[21];
  var mb:int = g[22];
  g[42] = lb;
  g[43] = mb;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible(
    a,
    lb,
    mb);
  goto B_b;
  label B_h:
  var nb:int = 0;
  a.a = nb;
  goto B_a;
  label B_c:
  a.b = o;
  a.c = n;
  var ob:int = 1;
  a.a = ob;
  goto B_a;
  label B_b:
  label B_a:
  var pb:int = 192;
  var qb:int = g + pb;
  g_a = qb;
}

function core_fmt_write_hb363a5cc37db74af(a:{ a:int, b:int }, b:{ a:int, b:int }, c:int_ptr):int {
  var f:int;
  var g:int;
  var h:int;
  var d:int = g_a - 48;
  g_a = d;
  (d + 36)[0]:int = b;
  d[40]:byte = 3;
  d[1]:long = 137438953472L;
  d[8]:int = a;
  var e:int = 0;
  d[6]:int = 0;
  d[4]:int = 0;
  f = c[2];
  if (f) goto B_d;
  g = (c + 20)[0]:int;
  if (eqz(g)) goto B_c;
  b = c[0];
  a = c[4];
  e = ((g << 3) + -8 >> 3) + 1;
  g = e;
  loop L_e {
    h = (b + 4)[0]:int;
    if (eqz(h)) goto B_f;
    if (call_indirect(d[8]:int, b.a, h, (d[9]:int)[3]:int)) goto B_b;
    label B_f:
    if (call_indirect(a.a, d + 8, (a + 4)[0]:int)) goto B_b;
    a = a + 8;
    b = b + 8;
    g = g + -1;
    if (g) continue L_e;
    goto B_c;
  }
  label B_d:
  a = (c + 12)[0]:int;
  if (eqz(a)) goto B_c;
  var i:int = a << 5;
  e = (i + -32 >> 5) + 1;
  b = c[0];
  g = 0;
  loop L_g {
    a = (b + 4)[0]:int;
    if (eqz(a)) goto B_h;
    if (call_indirect(d[8]:int, b.a, a, (d[9]:int)[3]:int)) goto B_b;
    label B_h:
    d[40]:byte = ((a = f + g) + 28)[0]:ubyte;
    d[1]:long = (a + 4)[0]:long@4 << 32L;
    var j:{ a:int, b:int } = (a + 24)[0]:int;
    var k:int = c[4];
    var l:int = 0;
    h = 0;
    br_table[B_j, B_k, B_i, ..B_j]((a + 20)[0]:int)
    label B_k:
    var m:{ a:int, b:int } = j << 3;
    h = 0;
    m = k + m;
    if (m.b != 53) goto B_i;
    j = m.a[0]:int;
    label B_j:
    h = 1;
    label B_i:
    d[5]:int = j;
    d[4]:int = h;
    h = (a + 16)[0]:int;
    br_table[B_m, B_n, B_l, ..B_m]((a + 12)[0]:int)
    label B_n:
    j = h << 3;
    j = k + j;
    if (j.b != 53) goto B_l;
    h = j.a[0]:int;
    label B_m:
    l = 1;
    label B_l:
    d[7]:int = h;
    d[6]:int = l;
    a = k + (a.a << 3);
    if (call_indirect(a.a, d + 8, a.b)) goto B_b;
    b = b + 8;
    if (i != (g = g + 32)) continue L_g;
  }
  label B_c:
  a = 0;
  b = e < c[1];
  if (eqz(b)) goto B_a;
  if (
    eqz(call_indirect(d[8]:int,
                      (b = select_if(c[0] + (e << 3), 0, b)).a,
                      b.b,
                      (d[9]:int)[3]:int))) goto B_a;
  label B_b:
  a = 1;
  label B_a:
  g_a = d + 48;
  return a;
}

function alloc_raw_vec_RawVec_T_A_allocate_in_h2e2dfd609310ab2f(a:{ a:int, b:int }, b:int, c:int) {
  var v:int;
  var va:int;
  var ta:int;
  var ua:int;
  var d:int = g_a;
  var e:int = 128;
  var f:int = d - e;
  g_a = f;
  var g:int = c;
  f[39]:byte = g;
  f[25]:int = b;
  var h:int = 1;
  if (h) goto B_d;
  alloc_raw_vec_RawVec_T_A_new_in_h93cc52992ff32a18(f);
  var i:int = f[0]:int;
  var j:int = f[1]:int;
  f[13]:int = j;
  f[12]:int = i;
  goto B_c;
  label B_d:
  var k:int = 24;
  var l:int = f + k;
  core_alloc_layout_Layout_array_hdb08159db613f6ef(l, b);
  var m:int = f[6]:int;
  var n:int = f[7]:int;
  f[17]:int = n;
  f[16]:int = m;
  var o:int = f[17]:int;
  var p:int = eqz(o);
  br_table[B_g, B_f, ..B_g](p)
  label B_g:
  var q:int = f[16]:int;
  var r:int = f[17]:int;
  f[26]:int = q;
  f[27]:int = r;
  f[14]:int = q;
  f[15]:int = r;
  var s:int = 56;
  var t:int = f + s;
  var u:int = t;
  v = core_alloc_layout_Layout_size_h23e58bed513508c1(u);
  goto B_e;
  label B_f:
  alloc_raw_vec_capacity_overflow_h56c8d20d9eefc93d();
  unreachable;
  label B_e:
  var w:int = 72;
  var x:int = f + w;
  var y:int = x;
  alloc_raw_vec_alloc_guard_hfdc5e8f0c8c82ea9(y, v);
  var z:int = f[18]:int;
  br_table[B_l, B_k, ..B_l](z)
  label B_l:
  var aa:int = f[39]:ubyte;
  br_table[B_j, B_i, ..B_j](aa);
  label B_k:
  alloc_raw_vec_capacity_overflow_h56c8d20d9eefc93d();
  unreachable;
  label B_j:
  var ba:int = f[14]:int;
  var ca:int = f[15]:int;
  var da:int = 8;
  var ea:int = f + da;
  var fa:int = 40;
  var ga:int = f + fa;
  alloc_alloc_Global_as_core_alloc_Allocator_allocate_h728542ee676fe2a2(
    ea,
    ga,
    ba,
    ca);
  var ha:int = f[2]:int;
  var ia:int = f[3]:int;
  f[23]:int = ia;
  f[22]:int = ha;
  goto B_h;
  label B_i:
  var ja:int = f[14]:int;
  var ka:int = f[15]:int;
  var la:int = 16;
  var ma:int = f + la;
  var na:int = 40;
  var oa:int = f + na;
  alloc_alloc_Global_as_core_alloc_Allocator_allocate_zeroed_hfa64fb7bf052ba2a(
    ma,
    oa,
    ja,
    ka);
  var pa:int = f[4]:int;
  var qa:int = f[5]:int;
  f[23]:int = qa;
  f[22]:int = pa;
  goto B_b;
  label B_h:
  goto B_b;
  label B_c:
  goto B_a;
  label B_b:
  var ra:int = f[22]:int;
  var sa:int = eqz(ra);
  br_table[B_o, B_n, ..B_o](sa)
  label B_o:
  ta = f[22]:int;
  ua = f[23]:int;
  f[28]:int = ta;
  f[29]:int = ua;
  f[30]:int = ta;
  f[31]:int = ua;
  va = core_ptr_non_null_NonNull_T_cast_h2a581058b20aba72(ta, ua);
  goto B_m;
  label B_n:
  var wa:int = f[14]:int;
  var xa:int = f[15]:int;
  alloc_alloc_handle_alloc_error_h45a714900d29bef5(wa, xa);
  unreachable;
  label B_m:
  var ya:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(va);
  var za:int =
    core_ptr_unique_Unique_T_new_unchecked_hf80bbb969ed74f34(ya);
  var ab:int =
    core_ptr_non_null_NonNull_T_len_h4df854dc261967d3(ta, ua);
  var bb:int =
    alloc_raw_vec_RawVec_T_A_capacity_from_bytes_h2462053e10485098(ab);
  f[12]:int = za;
  f[13]:int = bb;
  label B_a:
  var cb:int = f[12]:int;
  var db:int = f[13]:int;
  a.b = db;
  a.a = cb;
  var eb:int = 128;
  var fb:int = f + eb;
  g_a = fb;
}

function alloc_raw_vec_RawVec_T_A_allocate_in_hfaa01c7567460fa2(a:{ a:int, b:int }, b:int, c:int) {
  var v:int;
  var va:int;
  var ta:int;
  var ua:int;
  var d:int = g_a;
  var e:int = 128;
  var f:int = d - e;
  g_a = f;
  var g:int = c;
  f[39]:byte = g;
  f[25]:int = b;
  var h:int = 4;
  if (h) goto B_d;
  alloc_raw_vec_RawVec_T_A_new_in_hfb850b9b4488d097(f);
  var i:int = f[0]:int;
  var j:int = f[1]:int;
  f[13]:int = j;
  f[12]:int = i;
  goto B_c;
  label B_d:
  var k:int = 24;
  var l:int = f + k;
  core_alloc_layout_Layout_array_hefe76a252bc5502b(l, b);
  var m:int = f[6]:int;
  var n:int = f[7]:int;
  f[17]:int = n;
  f[16]:int = m;
  var o:int = f[17]:int;
  var p:int = eqz(o);
  br_table[B_g, B_f, ..B_g](p)
  label B_g:
  var q:int = f[16]:int;
  var r:int = f[17]:int;
  f[26]:int = q;
  f[27]:int = r;
  f[14]:int = q;
  f[15]:int = r;
  var s:int = 56;
  var t:int = f + s;
  var u:int = t;
  v = core_alloc_layout_Layout_size_h23e58bed513508c1(u);
  goto B_e;
  label B_f:
  alloc_raw_vec_capacity_overflow_h56c8d20d9eefc93d();
  unreachable;
  label B_e:
  var w:int = 72;
  var x:int = f + w;
  var y:int = x;
  alloc_raw_vec_alloc_guard_hfdc5e8f0c8c82ea9(y, v);
  var z:int = f[18]:int;
  br_table[B_l, B_k, ..B_l](z)
  label B_l:
  var aa:int = f[39]:ubyte;
  br_table[B_j, B_i, ..B_j](aa);
  label B_k:
  alloc_raw_vec_capacity_overflow_h56c8d20d9eefc93d();
  unreachable;
  label B_j:
  var ba:int = f[14]:int;
  var ca:int = f[15]:int;
  var da:int = 8;
  var ea:int = f + da;
  var fa:int = 40;
  var ga:int = f + fa;
  alloc_alloc_Global_as_core_alloc_Allocator_allocate_h728542ee676fe2a2(
    ea,
    ga,
    ba,
    ca);
  var ha:int = f[2]:int;
  var ia:int = f[3]:int;
  f[23]:int = ia;
  f[22]:int = ha;
  goto B_h;
  label B_i:
  var ja:int = f[14]:int;
  var ka:int = f[15]:int;
  var la:int = 16;
  var ma:int = f + la;
  var na:int = 40;
  var oa:int = f + na;
  alloc_alloc_Global_as_core_alloc_Allocator_allocate_zeroed_hfa64fb7bf052ba2a(
    ma,
    oa,
    ja,
    ka);
  var pa:int = f[4]:int;
  var qa:int = f[5]:int;
  f[23]:int = qa;
  f[22]:int = pa;
  goto B_b;
  label B_h:
  goto B_b;
  label B_c:
  goto B_a;
  label B_b:
  var ra:int = f[22]:int;
  var sa:int = eqz(ra);
  br_table[B_o, B_n, ..B_o](sa)
  label B_o:
  ta = f[22]:int;
  ua = f[23]:int;
  f[28]:int = ta;
  f[29]:int = ua;
  f[30]:int = ta;
  f[31]:int = ua;
  va = core_ptr_non_null_NonNull_T_cast_h25fdbfaa1bcf6682(ta, ua);
  goto B_m;
  label B_n:
  var wa:int = f[14]:int;
  var xa:int = f[15]:int;
  alloc_alloc_handle_alloc_error_h45a714900d29bef5(wa, xa);
  unreachable;
  label B_m:
  var ya:int = core_ptr_non_null_NonNull_T_as_ptr_h80ab7d4aa42677da(va);
  var za:int =
    core_ptr_unique_Unique_T_new_unchecked_h8016cd05df31846a(ya);
  var ab:int =
    core_ptr_non_null_NonNull_T_len_h4df854dc261967d3(ta, ua);
  var bb:int =
    alloc_raw_vec_RawVec_T_A_capacity_from_bytes_h37b68469e4d7cf53(ab);
  f[12]:int = za;
  f[13]:int = bb;
  label B_a:
  var cb:int = f[12]:int;
  var db:int = f[13]:int;
  a.b = db;
  a.a = cb;
  var eb:int = 128;
  var fb:int = f + eb;
  g_a = fb;
}

function dlmalloc_dlmalloc_Dlmalloc_A_dispose_chunk_h3ee811b32e33ddb4(a:{ a:int, b:int, c:int, d:int }, b:int_ptr) {
  var f:int_ptr;
  var d:int;
  var e:int_ptr;
  var c:int_ptr =
    dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(a, b);
  if (dlmalloc_dlmalloc_Chunk_pinuse_h49d83fe486a8c426(a)) goto B_c;
  d = a.a;
  if (dlmalloc_dlmalloc_Chunk_mmapped_h433d048e993b396e(a)) goto B_e;
  b = d + b;
  a = dlmalloc_dlmalloc_Chunk_minus_offset_h956a4e2adf3eefcb(a, d);
  if (a != 0[263775]:int) goto B_d;
  if ((c[1] & 3) != 3) goto B_c;
  0[263773]:int = b;
  dlmalloc_dlmalloc_Chunk_set_free_with_pinuse_hde64410721cd558f(a, b, c);
  return ;
  label B_e:
  if (
    eqz(dlmalloc_sys_System_as_dlmalloc_Allocator_free_hb5a074dd393cd90a(
          1054692,
          a - d,
          a = d + b + 16))) goto B_b;
  0[263777]:int = 0[263777]:int - a;
  return ;
  label B_d:
  if (d < 256) goto B_f;
  dlmalloc_dlmalloc_Dlmalloc_A_unlink_large_chunk_hb07925f032cc8648(a);
  goto B_c;
  label B_f:
  e = (a + 12)[0]:int;
  if (e == (f = (a + 8)[0]:int)) goto B_g;
  f[3] = e;
  e[2] = f;
  goto B_c;
  label B_g:
  0[263673]:int = 0[263673]:int & -2 << (d >> 3);
  label B_c:
  if (
    eqz(dlmalloc_dlmalloc_Chunk_cinuse_h5e879d0433022895(c))) goto B_h;
  dlmalloc_dlmalloc_Chunk_set_free_with_pinuse_hde64410721cd558f(a, b, c);
  goto B_a;
  label B_h:
  if (c == 0[263776]:int) goto B_j;
  if (c != 0[263775]:int) goto B_i;
  0[263775]:int = a;
  0[263773]:int = (b = 0[263773]:int + b);
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_free_chunk_h94ceb082391f899d(
    a,
    b);
  return ;
  label B_j:
  0[263776]:int = a;
  0[263774]:int = (b = 0[263774]:int + b);
  a.b = b | 1;
  if (a != 0[263775]:int) goto B_b;
  0[263773]:int = 0;
  0[263775]:int = 0;
  return ;
  label B_i:
  d = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(c);
  b = d + b;
  if (d < 256) goto B_l;
  dlmalloc_dlmalloc_Dlmalloc_A_unlink_large_chunk_hb07925f032cc8648(c);
  goto B_k;
  label B_l:
  e = (c + 12)[0]:int;
  if (e == (c = (c + 8)[0]:int)) goto B_m;
  c[3] = e;
  e[2] = c;
  goto B_k;
  label B_m:
  0[263673]:int = 0[263673]:int & -2 << (d >> 3);
  label B_k:
  dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_free_chunk_h94ceb082391f899d(
    a,
    b);
  if (a != 0[263775]:int) goto B_a;
  0[263773]:int = b;
  label B_b:
  return ;
  label B_a:
  if (b < 256) goto B_n;
  dlmalloc_dlmalloc_Dlmalloc_A_insert_large_chunk_h2d7ab4cd21b9b1e8(a, b);
  return ;
  label B_n:
  c = b >> 3;
  b = (c << 3) + 1054700;
  d = 0[263673]:int;
  if (eqz(d & (c = 1 << c))) goto B_p;
  c = b[2];
  goto B_o;
  label B_p:
  0[263673]:int = d | c;
  c = b;
  label B_o:
  b[2] = a;
  c[3] = a;
  a.d = b;
  a.c = c;
}

function alloc_fmt_format_h2ab3fd7d817360ce(a:{ a:int, b:int, c:int }, b:int) {
  var g:int_ptr;
  var h:int;
  var f:int;
  var i:int_ptr;
  var c:int = g_a - 32;
  g_a = c;
  var d:int = (b + 20)[0]:int;
  var e:int_ptr = b[0]:int;
  f = (b + 4)[0]:int;
  g = f << 3;
  if (g) goto B_b;
  h = 0;
  goto B_a;
  label B_b:
  g = g + -8;
  i = (g >> 3) + 1;
  var j:int = i & 7;
  if (g >= 56) goto B_d;
  h = 0;
  i = e;
  goto B_c;
  label B_d:
  g = e + 60;
  h = 0;
  i = 0 - (i & 1073741816);
  loop L_e {
    h = g[0] +
        (g + -8)[0]:int +
        (g + -16)[0]:int +
        (g + -24)[0]:int +
        (g + -32)[0]:int +
        (g + -40)[0]:int + (g + -48)[0]:int + (g + -56)[0]:int + h;
    g = g + 64;
    i = i + 8;
    if (i) continue L_e;
  }
  i = g + -60;
  label B_c:
  if (eqz(j)) goto B_a;
  g = 0 - j;
  i = i + 4;
  loop L_f {
    h = i[0] + h;
    j = g + 1;
    var k:int = j >= g;
    g = j;
    i = i + 8;
    if (k) continue L_f;
  }
  label B_a:
  if (d) goto B_j;
  g = h;
  goto B_i;
  label B_j:
  if (eqz(f)) goto B_k;
  if (e[1]) goto B_k;
  if (h < 16) goto B_h;
  label B_k:
  g = h + h;
  if (g < h) goto B_h;
  label B_i:
  h = 0;
  if (g < 0) goto B_m;
  if (g) goto B_n;
  i = 1;
  goto B_g;
  label B_n:
  i = rust_alloc(g, 1);
  if (eqz(i)) goto B_l;
  h = g;
  goto B_g;
  label B_m:
  alloc_raw_vec_capacity_overflow_h56c8d20d9eefc93d();
  unreachable;
  label B_l:
  alloc_alloc_handle_alloc_error_h45a714900d29bef5(g, 1);
  unreachable;
  label B_h:
  i = 1;
  h = 0;
  label B_g:
  a.c = 0;
  a.b = h;
  a.a = i;
  c[1]:int = a;
  (c + 8 + 16)[0]:long = (b + 16)[0]:long@4;
  (c + 8 + 8)[0]:long = (b + 8)[0]:long@4;
  c[1]:long = b[0]:long@4;
  if (
    eqz(core_fmt_write_hb363a5cc37db74af(c + 4, 1053844, c + 8))) goto B_o;
  core_result_unwrap_failed_h694db13a45aa6740(1053884,
                                              51,
                                              c + 8,
                                              1053868,
                                              1053960);
  unreachable;
  label B_o:
  g_a = c + 32;
}

function match_twenty_sign_h5787c0a9b8e619b6(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 96;
  var f:int_ptr = d - e;
  g_a = f;
  f[22] = b;
  f[23] = c;
  var g:int = 32;
  var h:int = f + g;
  web_sys_window_ha75a47938eafa24a(h);
  var i:int = f[9];
  var j:int = f[8];
  var k:int = 1051188;
  var l:int = k;
  var m:int = core_option_Option_T_unwrap_hdd146c54046739fd(j, i, l);
  f[11] = m;
  var n:int = 24;
  var o:int = f + n;
  var p:int = 44;
  var q:int = f + p;
  web_sys_features_gen_Window_Window_document_h5ede7ff4f1c3d443(o, q);
  var r:int = f[7];
  var s:int = f[6];
  var t:int = 1051176;
  var u:int = 0;
  var v:int = 1051204;
  var w:int = v;
  var x:int =
    core_option_Option_T_expect_h17c347df65aa6b6f(s, r, t, u, w);
  f[12] = x;
  var y:int = 16;
  var z:int = f + y;
  var aa:int = 48;
  var ba:int = f + aa;
  web_sys_features_gen_Document_Document_body_h20cbbcf6ce16f98b(z, ba);
  var ca:int = f[5];
  var da:int = f[4];
  var ea:int = 1051176;
  var fa:int = 0;
  var ga:int = 1051220;
  var ha:int = ga;
  var ia:int =
    core_option_Option_T_expect_h75f7a5b6bb53fc96(da, ca, ea, fa, ha);
  f[13] = ia;
  var ja:int = 56;
  var ka:int = f + ja;
  var la:int = ka;
  alloc_string_String_as_core_convert_From_str_from_h725f6be6839eccbf(
    la,
    b,
    c);
  var ma:int = 72;
  var na:int = f + ma;
  var oa:int = na;
  var pa:int = 1051236;
  var qa:int = pa;
  var ra:int = 16;
  alloc_string_String_as_core_convert_From_str_from_h725f6be6839eccbf(
    oa,
    qa,
    ra);
  var sa:int = 8;
  var ta:int = f + sa;
  var ua:int = 72;
  var va:int = f + ua;
  alloc_string_String_as_core_ops_deref_Deref_deref_h8639249056b2035c(
    ta,
    va);
  var wa:int = f[3];
  var xa:int = f[2];
  var ya:int = 56;
  var za:int = f + ya;
  var ab:int = za;
  alloc_string_String_as_core_ops_arith_AddAssign_str_add_assign_ha159ee33c420fba9(
    ab,
    xa,
    wa);
  var bb:int = 56;
  var cb:int = f + bb;
  alloc_string_String_as_bytes_h53849742ea31bc9f(f, cb);
  var db:int = f[1];
  var eb:int = f[0];
  match_twenty_sign_MD5_hash_hd3cc2e6ebf304f6f(a, eb, db);
  var fb:int = 72;
  var gb:int = f + fb;
  var hb:int = gb;
  core_ptr_drop_in_place_alloc_string_String_h1a752c630726971c(hb);
  var ib:int = 56;
  var jb:int = f + ib;
  var kb:int = jb;
  core_ptr_drop_in_place_alloc_string_String_h1a752c630726971c(kb);
  var lb:int = 52;
  var mb:int = f + lb;
  var nb:int = mb;
  core_ptr_drop_in_place_web_sys_features_gen_HtmlElement_HtmlElement_h4e521b86e3b41168(
    nb);
  var ob:int = 48;
  var pb:int = f + ob;
  var qb:int = pb;
  core_ptr_drop_in_place_web_sys_features_gen_Document_Document_h3ddc74debdae6464(
    qb);
  var rb:int = 44;
  var sb:int = f + rb;
  var tb:int = sb;
  core_ptr_drop_in_place_web_sys_features_gen_Window_Window_hbb32e061b5062bd7(
    tb);
  var ub:int = 96;
  var vb:int = f + ub;
  g_a = vb;
}

function core_alloc_layout_Layout_array_hdb08159db613f6ef(a:{ a:int, b:int }, b:int) {
  var za:int;
  var ya:int;
  var c:int = g_a;
  var d:int = 128;
  var e:int_ptr = c - d;
  g_a = e;
  e[29] = b;
  var f:int = 24;
  var g:int = e + f;
  core_alloc_layout_Layout_new_h15fca8342f491ece(g);
  var h:int = e[6];
  var i:int = e[7];
  e[25] = i;
  e[24] = h;
  var j:int = 80;
  var k:int = e + j;
  var l:int = k;
  var m:int = 96;
  var n:int = e + m;
  var o:int = n;
  core_alloc_layout_Layout_repeat_h48567f413400ae5e(l, o, b);
  var p:int = 64;
  var q:int = e + p;
  var r:int = q;
  var s:int = 80;
  var t:int = e + s;
  var u:int = t;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h6c4a22fb97008647(
    r,
    u);
  var v:int = e[17];
  var w:int = eqz(v);
  br_table[B_d, B_c, ..B_d](w)
  label B_d:
  var x:int = 64;
  var y:int = e + x;
  var z:long_ptr@4 = y;
  var aa:int = 104;
  var ba:int = e + aa;
  var ca:long_ptr@4 = ba;
  var ib:long = z[0];
  ca[0] = ib;
  var da:int = 8;
  var ea:int_ptr = ca + da;
  var fa:int_ptr = z + da;
  var ga:int = fa[0];
  ea[0] = ga;
  var ha:int = 48;
  var ia:int = e + ha;
  var ja:long_ptr@4 = ia;
  var ka:int = 104;
  var la:int = e + ka;
  var ma:long_ptr@4 = la;
  var jb:long = ma[0];
  ja[0] = jb;
  var na:int = 8;
  var oa:int_ptr = ja + na;
  var pa:int_ptr = ma + na;
  var qa:int = pa[0];
  oa[0] = qa;
  var ra:int = e[12];
  var sa:int = e[13];
  e[10] = ra;
  e[11] = sa;
  var ta:int = e[14];
  e[31] = ta;
  var ua:int = 8;
  var va:int = e + ua;
  var wa:int = 40;
  var xa:int = e + wa;
  core_alloc_layout_Layout_pad_to_align_h0c083f8ef4d4d45f(va, xa);
  ya = e[3];
  za = e[2];
  goto B_b;
  label B_c:
  var ab:int = 16;
  var bb:int = e + ab;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_7(
    bb);
  var cb:int = e[4];
  var db:int = e[5];
  e[9] = db;
  e[8] = cb;
  goto B_a;
  label B_b:
  e[8] = za;
  e[9] = ya;
  label B_a:
  var eb:int = e[8];
  var fb:int = e[9];
  a.b = fb;
  a.a = eb;
  var gb:int = 128;
  var hb:int = e + gb;
  g_a = hb;
}

function core_alloc_layout_Layout_array_hefe76a252bc5502b(a:{ a:int, b:int }, b:int) {
  var za:int;
  var ya:int;
  var c:int = g_a;
  var d:int = 128;
  var e:int_ptr = c - d;
  g_a = e;
  e[29] = b;
  var f:int = 24;
  var g:int = e + f;
  core_alloc_layout_Layout_new_hd52dfef738d924aa(g);
  var h:int = e[6];
  var i:int = e[7];
  e[25] = i;
  e[24] = h;
  var j:int = 80;
  var k:int = e + j;
  var l:int = k;
  var m:int = 96;
  var n:int = e + m;
  var o:int = n;
  core_alloc_layout_Layout_repeat_h48567f413400ae5e(l, o, b);
  var p:int = 64;
  var q:int = e + p;
  var r:int = q;
  var s:int = 80;
  var t:int = e + s;
  var u:int = t;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h6c4a22fb97008647(
    r,
    u);
  var v:int = e[17];
  var w:int = eqz(v);
  br_table[B_d, B_c, ..B_d](w)
  label B_d:
  var x:int = 64;
  var y:int = e + x;
  var z:long_ptr@4 = y;
  var aa:int = 104;
  var ba:int = e + aa;
  var ca:long_ptr@4 = ba;
  var ib:long = z[0];
  ca[0] = ib;
  var da:int = 8;
  var ea:int_ptr = ca + da;
  var fa:int_ptr = z + da;
  var ga:int = fa[0];
  ea[0] = ga;
  var ha:int = 48;
  var ia:int = e + ha;
  var ja:long_ptr@4 = ia;
  var ka:int = 104;
  var la:int = e + ka;
  var ma:long_ptr@4 = la;
  var jb:long = ma[0];
  ja[0] = jb;
  var na:int = 8;
  var oa:int_ptr = ja + na;
  var pa:int_ptr = ma + na;
  var qa:int = pa[0];
  oa[0] = qa;
  var ra:int = e[12];
  var sa:int = e[13];
  e[10] = ra;
  e[11] = sa;
  var ta:int = e[14];
  e[31] = ta;
  var ua:int = 8;
  var va:int = e + ua;
  var wa:int = 40;
  var xa:int = e + wa;
  core_alloc_layout_Layout_pad_to_align_h0c083f8ef4d4d45f(va, xa);
  ya = e[3];
  za = e[2];
  goto B_b;
  label B_c:
  var ab:int = 16;
  var bb:int = e + ab;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_7(
    bb);
  var cb:int = e[4];
  var db:int = e[5];
  e[9] = db;
  e[8] = cb;
  goto B_a;
  label B_b:
  e[8] = za;
  e[9] = ya;
  label B_a:
  var eb:int = e[8];
  var fb:int = e[9];
  a.b = fb;
  a.a = eb;
  var gb:int = 128;
  var hb:int = e + gb;
  g_a = hb;
}

function core_alloc_layout_Layout_array_h1dd6e37423ca8722(a:{ a:int, b:int }, b:int) {
  var za:int;
  var ya:int;
  var c:int = g_a;
  var d:int = 128;
  var e:int_ptr = c - d;
  g_a = e;
  e[29] = b;
  var f:int = 24;
  var g:int = e + f;
  core_alloc_layout_Layout_new_h08a6ad368d455a6c(g);
  var h:int = e[6];
  var i:int = e[7];
  e[25] = i;
  e[24] = h;
  var j:int = 80;
  var k:int = e + j;
  var l:int = k;
  var m:int = 96;
  var n:int = e + m;
  var o:int = n;
  core_alloc_layout_Layout_repeat_hcbc797dc65b8a816(l, o, b);
  var p:int = 64;
  var q:int = e + p;
  var r:int = q;
  var s:int = 80;
  var t:int = e + s;
  var u:int = t;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h6c4a22fb97008647(
    r,
    u);
  var v:int = e[17];
  var w:int = eqz(v);
  br_table[B_d, B_c, ..B_d](w)
  label B_d:
  var x:int = 64;
  var y:int = e + x;
  var z:long_ptr@4 = y;
  var aa:int = 104;
  var ba:int = e + aa;
  var ca:long_ptr@4 = ba;
  var ib:long = z[0];
  ca[0] = ib;
  var da:int = 8;
  var ea:int_ptr = ca + da;
  var fa:int_ptr = z + da;
  var ga:int = fa[0];
  ea[0] = ga;
  var ha:int = 48;
  var ia:int = e + ha;
  var ja:long_ptr@4 = ia;
  var ka:int = 104;
  var la:int = e + ka;
  var ma:long_ptr@4 = la;
  var jb:long = ma[0];
  ja[0] = jb;
  var na:int = 8;
  var oa:int_ptr = ja + na;
  var pa:int_ptr = ma + na;
  var qa:int = pa[0];
  oa[0] = qa;
  var ra:int = e[12];
  var sa:int = e[13];
  e[10] = ra;
  e[11] = sa;
  var ta:int = e[14];
  e[31] = ta;
  var ua:int = 8;
  var va:int = e + ua;
  var wa:int = 40;
  var xa:int = e + wa;
  core_alloc_layout_Layout_pad_to_align_h052e77cbe477272a(va, xa);
  ya = e[3];
  za = e[2];
  goto B_b;
  label B_c:
  var ab:int = 16;
  var bb:int = e + ab;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_7(
    bb);
  var cb:int = e[4];
  var db:int = e[5];
  e[9] = db;
  e[8] = cb;
  goto B_a;
  label B_b:
  e[8] = za;
  e[9] = ya;
  label B_a:
  var eb:int = e[8];
  var fb:int = e[9];
  a.b = fb;
  a.a = eb;
  var gb:int = 128;
  var hb:int = e + gb;
  g_a = hb;
}

function match_twenty_sign_MD5_hash_closure_h12ea5e2f8d46d554(a:int, b:{ a:ubyte, b:ubyte, c:ubyte, d:ubyte }, c:int):int {
  var q:int;
  var ea:int;
  var ta:int;
  var ib:int;
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int = 3;
  var h:int = g;
  var i:int = c;
  var j:int = h < i;
  var k:int = 1;
  var l:int = j & k;
  if (eqz(l)) goto B_b;
  var m:int = b.d;
  var n:int = 255;
  var o:int = m & n;
  var p:int = 24;
  q = o << p;
  goto B_a;
  label B_b:
  var r:int = 3;
  var s:int = 1048588;
  var t:int = s;
  core_panicking_panic_bounds_check_h1d84519ec46ed48c(r, c, t);
  unreachable;
  label B_a:
  var u:int = 2;
  var v:int = u;
  var w:int = c;
  var x:int = v < w;
  var y:int = 1;
  var z:int = x & y;
  if (eqz(z)) goto B_d;
  var aa:int = b.c;
  var ba:int = 255;
  var ca:int = aa & ba;
  var da:int = 16;
  ea = ca << da;
  goto B_c;
  label B_d:
  var fa:int = 2;
  var ga:int = 1048604;
  var ha:int = ga;
  core_panicking_panic_bounds_check_h1d84519ec46ed48c(fa, c, ha);
  unreachable;
  label B_c:
  var ia:int = q | ea;
  var ja:int = 1;
  var ka:int = ja;
  var la:int = c;
  var ma:int = ka < la;
  var na:int = 1;
  var oa:int = ma & na;
  if (eqz(oa)) goto B_f;
  var pa:int = b.b;
  var qa:int = 255;
  var ra:int = pa & qa;
  var sa:int = 8;
  ta = ra << sa;
  goto B_e;
  label B_f:
  var ua:int = 1;
  var va:int = 1048620;
  var wa:int = va;
  core_panicking_panic_bounds_check_h1d84519ec46ed48c(ua, c, wa);
  unreachable;
  label B_e:
  var xa:int = ia | ta;
  var ya:int = 0;
  var za:int = ya;
  var ab:int = c;
  var bb:int = za < ab;
  var cb:int = 1;
  var db:int = bb & cb;
  if (eqz(db)) goto B_h;
  var eb:int = b.a;
  var fb:int = 255;
  var gb:int = eb & fb;
  var hb:int = 0;
  ib = gb << hb;
  goto B_g;
  label B_h:
  var jb:int = 0;
  var kb:int = 1048636;
  var lb:int = kb;
  core_panicking_panic_bounds_check_h1d84519ec46ed48c(jb, c, lb);
  unreachable;
  label B_g:
  var mb:int = xa | ib;
  var nb:int = 16;
  var ob:int = f + nb;
  g_a = ob;
  return mb;
}

function core_slice_iter_Chunks_T_as_core_iter_iterator_Iterator_size_hint_h1dc0c157e66c4294(a:{ a:int, b:int, c:int }, b:{ a:int, b:int, c:int }) {
  var k:int;
  var l:int;
  var y:int;
  var z:int;
  var x:int;
  var c:int = g_a;
  var d:int = 48;
  var e:int_ptr = c - d;
  g_a = e;
  e[9] = b;
  var f:int = b.a;
  var g:int = b.b;
  var h:int = core_slice_impl_T_is_empty_h553b40ca32589462(f, g);
  var i:int = 1;
  var j:int = h & i;
  if (j) goto B_i;
  k = b.b;
  l = b.c;
  var m:int = 0;
  var n:int = l;
  var o:int = m;
  var p:int = n == o;
  var q:int = 1;
  var r:int = p & q;
  if (r) goto B_g;
  goto B_h;
  label B_i:
  var s:int = 0;
  e[3] = s;
  var t:int = 1;
  e[2] = t;
  var u:int = 0;
  a.a = u;
  var v:int = e[2];
  var w:int = e[3];
  a.b = v;
  a.c = w;
  goto B_a;
  label B_h:
  x = k / l;
  e[10] = x;
  y = b.b;
  z = b.c;
  var aa:int = 0;
  var ba:int = z;
  var ca:int = aa;
  var da:int = ba == ca;
  var ea:int = 1;
  var fa:int = da & ea;
  if (fa) goto B_e;
  goto B_f;
  label B_g:
  var ga:int = 1048800;
  var ha:int = ga;
  var ia:int = 25;
  var ja:int = 1048776;
  var ka:int = ja;
  core_panicking_panic_hceae0c79b0247f98(ha, ia, ka);
  unreachable;
  label B_f:
  var la:int = y % z;
  e[11] = la;
  var ma:int = 0;
  var na:int = la;
  var oa:int = ma;
  var pa:int = na > oa;
  var qa:int = 1;
  var ra:int = pa & qa;
  if (ra) goto B_c;
  goto B_d;
  label B_e:
  var sa:int = 1048848;
  var ta:int = sa;
  var ua:int = 57;
  var va:int = 1048828;
  var wa:int = va;
  core_panicking_panic_hceae0c79b0247f98(ta, ua, wa);
  unreachable;
  label B_d:
  e[5] = x;
  goto B_b;
  label B_c:
  var xa:int = 1;
  var ya:int = x + xa;
  e[5] = ya;
  label B_b:
  var za:int = e[5];
  var ab:int = e[5];
  e[7] = ab;
  var bb:int = 1;
  e[6] = bb;
  a.a = za;
  var cb:int = e[6];
  var db:int = e[7];
  a.b = cb;
  a.c = db;
  label B_a:
  var eb:int = 48;
  var fb:int = e + eb;
  g_a = fb;
}

function core_ops_range_Range_T_as_core_iter_range_RangeIteratorImpl_spec_nth_h0e9f97a4d62fec61(a:{ a:int, b:int }, b:int_ptr, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int = d - e;
  g_a = f;
  f[10]:int = b;
  f[11]:int = c;
  var g:int = 0;
  f[39]:byte = g;
  var h:int =
    core_clone_impls_impl_core_clone_Clone_for_usize_clone_h59e1769a8b1f0beb(
      b);
  var i:int = 8;
  var j:int = f + i;
  usize_as_core_iter_range_Step_forward_checked_hd41d97545e1ad021(j, h, c);
  var k:int = f[2]:int;
  var l:int = f[3]:int;
  f[7]:int = l;
  f[6]:int = k;
  var m:int = 1;
  f[39]:byte = m;
  var n:int = f[6]:int;
  var o:int = 1;
  var p:int = n;
  var q:int = o;
  var r:int = p == q;
  var s:int = 1;
  var t:int = r & s;
  if (eqz(t)) goto B_b;
  var u:int = 0;
  f[39]:byte = u;
  var v:int = f[7]:int;
  f[8]:int = v;
  var w:int = 4;
  var x:int = b + w;
  var y:int = 32;
  var z:int = f + y;
  var aa:int = z;
  var ba:int =
    core_cmp_impls_impl_core_cmp_PartialOrd_for_usize_lt_h5a5760edc4e97d2e(
      aa,
      x);
  var ca:int = 1;
  var da:int = ba & ca;
  if (da) goto B_d;
  goto B_c;
  label B_d:
  var ea:int = 32;
  var fa:int = f + ea;
  var ga:int = fa;
  var ha:int =
    core_clone_impls_impl_core_clone_Clone_for_usize_clone_h59e1769a8b1f0beb(
      ga);
  var ia:int = 1;
  var ja:int =
    usize_as_core_iter_range_Step_forward_unchecked_h7025af2f31cc6430(ha,
                                                                      ia);
  b[0] = ja;
  var ka:int = f[8]:int;
  f[5]:int = ka;
  var la:int = 1;
  f[4]:int = la;
  var ma:int = 0;
  f[39]:byte = ma;
  goto B_a;
  label B_c:
  label B_b:
  var na:int = f[6]:int;
  var oa:int = 1;
  var pa:int = na;
  var qa:int = oa;
  var ra:int = pa == qa;
  var sa:int = 1;
  var ta:int = ra & sa;
  if (eqz(ta)) goto B_e;
  var ua:int = f[39]:ubyte;
  var va:int = 1;
  var wa:int = ua & va;
  if (eqz(wa)) goto B_e;
  label B_e:
  var xa:int = 0;
  f[39]:byte = xa;
  var ya:int = 4;
  var za:int = b + ya;
  var ab:int =
    core_clone_impls_impl_core_clone_Clone_for_usize_clone_h59e1769a8b1f0beb(
      za);
  b[0] = ab;
  var bb:int = 0;
  f[4]:int = bb;
  label B_a:
  var cb:int = f[4]:int;
  var db:int = f[5]:int;
  a.b = db;
  a.a = cb;
  var eb:int = 48;
  var fb:int = f + eb;
  g_a = fb;
}

function alloc_vec_Vec_T_A_into_boxed_slice_h023d93048a245460(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 96;
  var e:int_ptr = c - d;
  g_a = e;
  alloc_vec_Vec_T_A_shrink_to_fit_hd9d1776e62842ec0(b);
  var f:int = 40;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var fb:long = b[0];
  h[0] = fb;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 72;
  var n:int = e + m;
  var o:long_ptr@4 = n;
  var p:int = 40;
  var q:int = e + p;
  var r:long_ptr@4 = q;
  var gb:long = r[0];
  o[0] = gb;
  var s:int = 8;
  var t:int_ptr = o + s;
  var u:int_ptr = r + s;
  var v:int = u[0];
  t[0] = v;
  var w:int = 24;
  var x:int = e + w;
  var y:long_ptr@4 = x;
  var z:int = 72;
  var aa:int = e + z;
  var ba:long_ptr@4 = aa;
  var hb:long = ba[0];
  y[0] = hb;
  var ca:int = 8;
  var da:int_ptr = y + ca;
  var ea:int_ptr = ba + ca;
  var fa:int = ea[0];
  da[0] = fa;
  var ga:int = 24;
  var ha:int = e + ga;
  var ia:int = ha;
  e[22] = ia;
  var ja:int = 24;
  var ka:int = e + ja;
  var la:int = ka;
  var ma:int = 16;
  var na:int = e + ma;
  core_ptr_read_heb39375af74015ed(na, la);
  var oa:int = e[5];
  var pa:int = e[4];
  e[14] = pa;
  e[15] = oa;
  var qa:int = 24;
  var ra:int = e + qa;
  var sa:int = ra;
  e[23] = sa;
  var ta:int = 24;
  var ua:int = e + ta;
  var va:int = ua;
  var wa:int = alloc_vec_Vec_T_A_len_h2580c98541add436(va);
  e[17] = wa;
  var xa:int = 8;
  var ya:int = e + xa;
  alloc_raw_vec_RawVec_T_A_into_box_h8f4008defedba773(ya, pa, oa, wa);
  var za:int = e[3];
  var ab:int = e[2];
  alloc_boxed_Box_core_mem_maybe_uninit_MaybeUninit_T_A_assume_init_h8198f4663bd7d3cb(
    e,
    ab,
    za);
  var bb:int = e[1];
  var cb:int = e[0];
  a.b = bb;
  a.a = cb;
  var db:int = 96;
  var eb:int = e + db;
  g_a = eb;
}

function alloc_vec_Vec_T_A_into_boxed_slice_h7eee598b4612be3f(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 96;
  var e:int_ptr = c - d;
  g_a = e;
  alloc_vec_Vec_T_A_shrink_to_fit_h5be14a2f70fe33ef(b);
  var f:int = 40;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var fb:long = b[0];
  h[0] = fb;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 72;
  var n:int = e + m;
  var o:long_ptr@4 = n;
  var p:int = 40;
  var q:int = e + p;
  var r:long_ptr@4 = q;
  var gb:long = r[0];
  o[0] = gb;
  var s:int = 8;
  var t:int_ptr = o + s;
  var u:int_ptr = r + s;
  var v:int = u[0];
  t[0] = v;
  var w:int = 24;
  var x:int = e + w;
  var y:long_ptr@4 = x;
  var z:int = 72;
  var aa:int = e + z;
  var ba:long_ptr@4 = aa;
  var hb:long = ba[0];
  y[0] = hb;
  var ca:int = 8;
  var da:int_ptr = y + ca;
  var ea:int_ptr = ba + ca;
  var fa:int = ea[0];
  da[0] = fa;
  var ga:int = 24;
  var ha:int = e + ga;
  var ia:int = ha;
  e[22] = ia;
  var ja:int = 24;
  var ka:int = e + ja;
  var la:int = ka;
  var ma:int = 16;
  var na:int = e + ma;
  core_ptr_read_h05c85269ec15de12(na, la);
  var oa:int = e[5];
  var pa:int = e[4];
  e[14] = pa;
  e[15] = oa;
  var qa:int = 24;
  var ra:int = e + qa;
  var sa:int = ra;
  e[23] = sa;
  var ta:int = 24;
  var ua:int = e + ta;
  var va:int = ua;
  var wa:int = alloc_vec_Vec_T_A_len_h6beeebfabdd2aa80(va);
  e[17] = wa;
  var xa:int = 8;
  var ya:int = e + xa;
  alloc_raw_vec_RawVec_T_A_into_box_h85fc487abe382900(ya, pa, oa, wa);
  var za:int = e[3];
  var ab:int = e[2];
  alloc_boxed_Box_core_mem_maybe_uninit_MaybeUninit_T_A_assume_init_hd901d47c6d99a0a1(
    e,
    ab,
    za);
  var bb:int = e[1];
  var cb:int = e[0];
  a.b = bb;
  a.a = cb;
  var db:int = 96;
  var eb:int = e + db;
  g_a = eb;
}

function alloc_vec_Vec_T_A_into_boxed_slice_h4952823940574848(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 96;
  var e:int_ptr = c - d;
  g_a = e;
  alloc_vec_Vec_T_A_shrink_to_fit_h7b920f68f4a0216c(b);
  var f:int = 40;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var fb:long = b[0];
  h[0] = fb;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 72;
  var n:int = e + m;
  var o:long_ptr@4 = n;
  var p:int = 40;
  var q:int = e + p;
  var r:long_ptr@4 = q;
  var gb:long = r[0];
  o[0] = gb;
  var s:int = 8;
  var t:int_ptr = o + s;
  var u:int_ptr = r + s;
  var v:int = u[0];
  t[0] = v;
  var w:int = 24;
  var x:int = e + w;
  var y:long_ptr@4 = x;
  var z:int = 72;
  var aa:int = e + z;
  var ba:long_ptr@4 = aa;
  var hb:long = ba[0];
  y[0] = hb;
  var ca:int = 8;
  var da:int_ptr = y + ca;
  var ea:int_ptr = ba + ca;
  var fa:int = ea[0];
  da[0] = fa;
  var ga:int = 24;
  var ha:int = e + ga;
  var ia:int = ha;
  e[22] = ia;
  var ja:int = 24;
  var ka:int = e + ja;
  var la:int = ka;
  var ma:int = 16;
  var na:int = e + ma;
  core_ptr_read_h3c3e0317399017e6(na, la);
  var oa:int = e[5];
  var pa:int = e[4];
  e[14] = pa;
  e[15] = oa;
  var qa:int = 24;
  var ra:int = e + qa;
  var sa:int = ra;
  e[23] = sa;
  var ta:int = 24;
  var ua:int = e + ta;
  var va:int = ua;
  var wa:int = alloc_vec_Vec_T_A_len_h1c78540e29c262ca(va);
  e[17] = wa;
  var xa:int = 8;
  var ya:int = e + xa;
  alloc_raw_vec_RawVec_T_A_into_box_hfc2cc8db4d42e79e(ya, pa, oa, wa);
  var za:int = e[3];
  var ab:int = e[2];
  alloc_boxed_Box_core_mem_maybe_uninit_MaybeUninit_T_A_assume_init_h9366630facffd0e6(
    e,
    ab,
    za);
  var bb:int = e[1];
  var cb:int = e[0];
  a.b = bb;
  a.a = cb;
  var db:int = 96;
  var eb:int = e + db;
  g_a = eb;
}

function core_ptr_read_h04ae8ce0aae0f06a(a:long_ptr@4, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 96;
  var e:int_ptr = c - d;
  e[15] = b;
  var f:int = 8;
  var g:int = e + f;
  var h:int = g;
  e[23] = h;
  var i:int = 8;
  var j:int = e + i;
  var k:long_ptr@4 = j;
  var ya:long = b[0];
  k[0] = ya;
  var l:int = 16;
  var m:long_ptr@4 = k + l;
  var n:long_ptr@4 = b + l;
  var za:long = n[0];
  m[0] = za;
  var o:int = 8;
  var p:long_ptr@4 = k + o;
  var q:long_ptr@4 = b + o;
  var ab:long = q[0];
  p[0] = ab;
  var r:int = 32;
  var s:int = e + r;
  var t:long_ptr@4 = s;
  var u:int = 8;
  var v:int = e + u;
  var w:long_ptr@4 = v;
  var bb:long = w[0];
  t[0] = bb;
  var x:int = 16;
  var y:long_ptr@4 = t + x;
  var z:long_ptr@4 = w + x;
  var cb:long = z[0];
  y[0] = cb;
  var aa:int = 8;
  var ba:long_ptr@4 = t + aa;
  var ca:long_ptr@4 = w + aa;
  var db:long = ca[0];
  ba[0] = db;
  var da:int = 32;
  var ea:int = e + da;
  var fa:long_ptr@4 = ea;
  var ga:int = 64;
  var ha:int = e + ga;
  var ia:long_ptr@4 = ha;
  var eb:long = fa[0];
  ia[0] = eb;
  var ja:int = 16;
  var ka:long_ptr@4 = ia + ja;
  var la:long_ptr@4 = fa + ja;
  var fb:long = la[0];
  ka[0] = fb;
  var ma:int = 8;
  var na:long_ptr@4 = ia + ma;
  var oa:long_ptr@4 = fa + ma;
  var gb:long = oa[0];
  na[0] = gb;
  var pa:int = 64;
  var qa:int = e + pa;
  var ra:long_ptr@4 = qa;
  var hb:long = ra[0];
  a[0] = hb;
  var sa:int = 16;
  var ta:long_ptr@4 = a + sa;
  var ua:long_ptr@4 = ra + sa;
  var ib:long = ua[0];
  ta[0] = ib;
  var va:int = 8;
  var wa:long_ptr@4 = a + va;
  var xa:long_ptr@4 = ra + va;
  var jb:long = xa[0];
  wa[0] = jb;
}

function alloc_alloc_Global_alloc_impl_h67b37ea8f1e1d9d2(a:{ a:int, b:int }, b:int, c:int, d:int, e:int) {
  var q:int;
  var na:int;
  var ma:int;
  var f:int = g_a;
  var g:int = 80;
  var h:int = f - g;
  g_a = h;
  h[8]:int = c;
  h[9]:int = d;
  h[14]:int = b;
  var i:int = e;
  h[63]:byte = i;
  var j:int = 32;
  var k:int = h + j;
  var l:int = k;
  var m:int = core_alloc_layout_Layout_size_h23e58bed513508c1(l);
  if (m) goto B_e;
  var n:int = 32;
  var o:int = h + n;
  var p:int = o;
  q = core_alloc_layout_Layout_dangling_h0c39cb062893327b(p);
  goto B_d;
  label B_e:
  h[17]:int = m;
  var r:int = e;
  if (r) goto B_g;
  var s:int = h[8]:int;
  var t:int = h[9]:int;
  var u:int = alloc_alloc_alloc_h3e4c2060c8f99c47(s, t);
  h[12]:int = u;
  goto B_f;
  label B_g:
  var v:int = h[8]:int;
  var w:int = h[9]:int;
  var x:int = alloc_alloc_alloc_zeroed_h602a0c9caaa0af45(v, w);
  h[12]:int = x;
  goto B_c;
  label B_f:
  goto B_c;
  label B_d:
  var y:int = 0;
  var z:int = 8;
  var aa:int = h + z;
  core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(aa,
                                                                     q,
                                                                     y);
  var ba:int = h[3]:int;
  var ca:int = h[2]:int;
  h[10]:int = ca;
  h[11]:int = ba;
  goto B_b;
  label B_c:
  var da:int = h[12]:int;
  var ea:int = core_ptr_non_null_NonNull_T_new_h097dcfc41a1a0fb7(da);
  var fa:int = core_option_Option_T_ok_or_h5937c463bf2a8ab0(ea);
  var ga:int =
    core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h4b08277a288989e0(
      fa);
  h[13]:int = ga;
  var ha:int = h[13]:int;
  var ia:int = eqz(ha);
  br_table[B_j, B_i, ..B_j](ia)
  label B_j:
  var ja:int = h[13]:int;
  h[18]:int = ja;
  h[19]:int = ja;
  var ka:int = 16;
  var la:int = h + ka;
  core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(la,
                                                                     ja,
                                                                     m);
  ma = h[5]:int;
  na = h[4]:int;
  goto B_h;
  label B_i:
  var oa:int = 24;
  var pa:int = h + oa;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_8(
    pa);
  var qa:int = h[6]:int;
  var ra:int = h[7]:int;
  h[11]:int = ra;
  h[10]:int = qa;
  goto B_a;
  label B_h:
  h[10]:int = na;
  h[11]:int = ma;
  label B_b:
  label B_a:
  var sa:int = h[10]:int;
  var ta:int = h[11]:int;
  a.b = ta;
  a.a = sa;
  var ua:int = 80;
  var va:int = h + ua;
  g_a = va;
}

function alloc_alloc_Global_alloc_impl_h7c8f1a02c7b60545(a:{ a:int, b:int }, b:int, c:int, d:int, e:int) {
  var q:int;
  var na:int;
  var ma:int;
  var f:int = g_a;
  var g:int = 80;
  var h:int = f - g;
  g_a = h;
  h[8]:int = c;
  h[9]:int = d;
  h[14]:int = b;
  var i:int = e;
  h[63]:byte = i;
  var j:int = 32;
  var k:int = h + j;
  var l:int = k;
  var m:int = core_alloc_layout_Layout_size_hd03d4df4a572a4a6(l);
  if (m) goto B_e;
  var n:int = 32;
  var o:int = h + n;
  var p:int = o;
  q = core_alloc_layout_Layout_dangling_hb70d900652111132(p);
  goto B_d;
  label B_e:
  h[17]:int = m;
  var r:int = e;
  if (r) goto B_g;
  var s:int = h[8]:int;
  var t:int = h[9]:int;
  var u:int = alloc_alloc_alloc_h29748e1861cd5848(s, t);
  h[12]:int = u;
  goto B_f;
  label B_g:
  var v:int = h[8]:int;
  var w:int = h[9]:int;
  var x:int = alloc_alloc_alloc_zeroed_h3bd568b0ab3d2709(v, w);
  h[12]:int = x;
  goto B_c;
  label B_f:
  goto B_c;
  label B_d:
  var y:int = 0;
  var z:int = 8;
  var aa:int = h + z;
  core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(aa,
                                                                     q,
                                                                     y);
  var ba:int = h[3]:int;
  var ca:int = h[2]:int;
  h[10]:int = ca;
  h[11]:int = ba;
  goto B_b;
  label B_c:
  var da:int = h[12]:int;
  var ea:int = core_ptr_non_null_NonNull_T_new_h097dcfc41a1a0fb7(da);
  var fa:int = core_option_Option_T_ok_or_h5937c463bf2a8ab0(ea);
  var ga:int =
    core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h4b08277a288989e0(
      fa);
  h[13]:int = ga;
  var ha:int = h[13]:int;
  var ia:int = eqz(ha);
  br_table[B_j, B_i, ..B_j](ia)
  label B_j:
  var ja:int = h[13]:int;
  h[18]:int = ja;
  h[19]:int = ja;
  var ka:int = 16;
  var la:int = h + ka;
  core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(la,
                                                                     ja,
                                                                     m);
  ma = h[5]:int;
  na = h[4]:int;
  goto B_h;
  label B_i:
  var oa:int = 24;
  var pa:int = h + oa;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_8(
    pa);
  var qa:int = h[6]:int;
  var ra:int = h[7]:int;
  h[11]:int = ra;
  h[10]:int = qa;
  goto B_a;
  label B_h:
  h[10]:int = na;
  h[11]:int = ma;
  label B_b:
  label B_a:
  var sa:int = h[10]:int;
  var ta:int = h[11]:int;
  a.b = ta;
  a.a = sa;
  var ua:int = 80;
  var va:int = h + ua;
  g_a = va;
}

function alloc_alloc_Global_alloc_impl_h31785f410c663f1b(a:{ a:int, b:int }, b:int, c:int, d:int, e:int) {
  var q:int;
  var na:int;
  var ma:int;
  var f:int = g_a;
  var g:int = 80;
  var h:int = f - g;
  g_a = h;
  h[8]:int = c;
  h[9]:int = d;
  h[14]:int = b;
  var i:int = e;
  h[63]:byte = i;
  var j:int = 32;
  var k:int = h + j;
  var l:int = k;
  var m:int = core_alloc_layout_Layout_size_hed7bf60fc00d518d(l);
  if (m) goto B_e;
  var n:int = 32;
  var o:int = h + n;
  var p:int = o;
  q = core_alloc_layout_Layout_dangling_h2d7a900c7916fa84(p);
  goto B_d;
  label B_e:
  h[17]:int = m;
  var r:int = e;
  if (r) goto B_g;
  var s:int = h[8]:int;
  var t:int = h[9]:int;
  var u:int = alloc_alloc_alloc_hbd36034e35634230(s, t);
  h[12]:int = u;
  goto B_f;
  label B_g:
  var v:int = h[8]:int;
  var w:int = h[9]:int;
  var x:int = alloc_alloc_alloc_zeroed_h458c8ea309369d51(v, w);
  h[12]:int = x;
  goto B_c;
  label B_f:
  goto B_c;
  label B_d:
  var y:int = 0;
  var z:int = 8;
  var aa:int = h + z;
  core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(aa,
                                                                     q,
                                                                     y);
  var ba:int = h[3]:int;
  var ca:int = h[2]:int;
  h[10]:int = ca;
  h[11]:int = ba;
  goto B_b;
  label B_c:
  var da:int = h[12]:int;
  var ea:int = core_ptr_non_null_NonNull_T_new_h097dcfc41a1a0fb7(da);
  var fa:int = core_option_Option_T_ok_or_h5937c463bf2a8ab0(ea);
  var ga:int =
    core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h4b08277a288989e0(
      fa);
  h[13]:int = ga;
  var ha:int = h[13]:int;
  var ia:int = eqz(ha);
  br_table[B_j, B_i, ..B_j](ia)
  label B_j:
  var ja:int = h[13]:int;
  h[18]:int = ja;
  h[19]:int = ja;
  var ka:int = 16;
  var la:int = h + ka;
  core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(la,
                                                                     ja,
                                                                     m);
  ma = h[5]:int;
  na = h[4]:int;
  goto B_h;
  label B_i:
  var oa:int = 24;
  var pa:int = h + oa;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_8(
    pa);
  var qa:int = h[6]:int;
  var ra:int = h[7]:int;
  h[11]:int = ra;
  h[10]:int = qa;
  goto B_a;
  label B_h:
  h[10]:int = na;
  h[11]:int = ma;
  label B_b:
  label B_a:
  var sa:int = h[10]:int;
  var ta:int = h[11]:int;
  a.b = ta;
  a.a = sa;
  var ua:int = 80;
  var va:int = h + ua;
  g_a = va;
}

function alloc_vec_Vec_T_A_as_alloc_vec_spec_extend_SpecExtend_T_I_spec_extend_h4a315a27f25b751e(a:int, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 112;
  var e:int_ptr = c - d;
  g_a = e;
  e[16] = a;
  var f:int = 16;
  var g:int = e + f;
  var h:int = g;
  core_iter_adapters_map_Map_I_F_as_core_iter_iterator_Iterator_size_hint_he13cf4396e83598a(
    h,
    b);
  var i:int = e[4];
  e[17] = i;
  var j:int = e[5];
  var k:int = e[6];
  e[2] = j;
  e[3] = k;
  var l:int = e[2];
  var m:int = 1;
  var n:int = l;
  var o:int = m;
  var p:int = n == o;
  var q:int = 1;
  var r:int = p & q;
  if (eqz(r)) goto B_b;
  var s:int = e[3];
  e[18] = s;
  alloc_vec_Vec_T_A_reserve_h1ffabcef4aa6a4e4(a, s);
  goto B_a;
  label B_b:
  var t:int = 1050948;
  var u:int = t;
  var v:int = 17;
  var w:int = 1051160;
  var x:int = w;
  core_panicking_panic_hceae0c79b0247f98(u, v, x);
  unreachable;
  label B_a:
  var y:int = alloc_vec_Vec_T_A_as_mut_ptr_h0c095d47a5690066(a);
  var z:int = alloc_vec_Vec_T_A_len_h9996fdf2f519c597(a);
  e[23] = y;
  e[24] = z;
  e[25] = y;
  e[26] = z;
  var aa:int = 2;
  var ba:int = z << aa;
  var ca:int = y + ba;
  e[27] = ca;
  var da:int = e[27];
  e[19] = da;
  var ea:int = 8;
  var fa:int = a + ea;
  alloc_vec_set_len_on_drop_SetLenOnDrop_new_h5555552ffcd432cd(e, fa);
  var ga:int = e[1];
  var ha:int = e[0];
  e[20] = ha;
  e[21] = ga;
  var ia:int = 32;
  var ja:int = e + ia;
  var ka:long_ptr@4 = ja;
  var xa:long = b[0];
  ka[0] = xa;
  var la:int = 8;
  var ma:int_ptr = ka + la;
  var na:int_ptr = b + la;
  var oa:int = na[0];
  ma[0] = oa;
  e[12] = da;
  e[13] = ha;
  e[14] = ga;
  var pa:int = 32;
  var qa:int = e + pa;
  var ra:int = qa;
  var sa:int = 48;
  var ta:int = e + sa;
  var ua:int = ta;
  core_iter_iterator_Iterator_for_each_h0020c657e2a906c0(ra, ua);
  var va:int = 112;
  var wa:int = e + va;
  g_a = wa;
}

function core_cell_Cell_T_new_hc81e2fc504fc19db(a:long_ptr@4, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 80;
  var e:int = c - d;
  var f:int = 32;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var za:long = b[0];
  h[0] = za;
  var i:int = 16;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 8;
  var n:long_ptr@4 = h + m;
  var o:long_ptr@4 = b + m;
  var ab:long = o[0];
  n[0] = ab;
  var p:int = 56;
  var q:int = e + p;
  var r:long_ptr@4 = q;
  var s:int = 32;
  var t:int = e + s;
  var u:long_ptr@4 = t;
  var bb:long = u[0];
  r[0] = bb;
  var v:int = 16;
  var w:int_ptr = r + v;
  var x:int_ptr = u + v;
  var y:int = x[0];
  w[0] = y;
  var z:int = 8;
  var aa:long_ptr@4 = r + z;
  var ba:long_ptr@4 = u + z;
  var cb:long = ba[0];
  aa[0] = cb;
  var ca:int = 8;
  var da:int = e + ca;
  var ea:long_ptr@4 = da;
  var fa:int = 56;
  var ga:int = e + fa;
  var ha:long_ptr@4 = ga;
  var db:long = ha[0];
  ea[0] = db;
  var ia:int = 16;
  var ja:int_ptr = ea + ia;
  var ka:int_ptr = ha + ia;
  var la:int = ka[0];
  ja[0] = la;
  var ma:int = 8;
  var na:long_ptr@4 = ea + ma;
  var oa:long_ptr@4 = ha + ma;
  var eb:long = oa[0];
  na[0] = eb;
  var pa:int = 8;
  var qa:int = e + pa;
  var ra:long_ptr@4 = qa;
  var fb:long = ra[0];
  a[0] = fb;
  var sa:int = 16;
  var ta:int_ptr = a + sa;
  var ua:int_ptr = ra + sa;
  var va:int = ua[0];
  ta[0] = va;
  var wa:int = 8;
  var xa:long_ptr@4 = a + wa;
  var ya:long_ptr@4 = ra + wa;
  var gb:long = ya[0];
  xa[0] = gb;
}

function dlmalloc_Dlmalloc_A_malloc_hbd2b2a561e0ef670(a:int_ptr, b:{ a:int, b:int }):int {
  var e:int;
  var c:int;
  if (b < 9) goto B_e;
  if (dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) > b) goto B_d;
  goto B_c;
  label B_e:
  c = dlmalloc_dlmalloc_Dlmalloc_A_malloc_heeb693c723d77fa0(a);
  goto B_b;
  label B_d:
  b = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8);
  label B_c:
  c = 0;
  var d:int = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
  d = (d -
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(d, 8) +
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8) +
       dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) +
       -65544 &
       -9) +
      -3;
  if (
    select_if(
      d,
      e = 0 - (dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) << 2),
      e > d) -
    b <=
    a) goto B_b;
  d =
    dlmalloc_dlmalloc_Dlmalloc_A_malloc_heeb693c723d77fa0(
      b +
      (e =
         dlmalloc_dlmalloc_align_up_h4772c6244aec6713(
           select_if(
             16,
             a + 4,
             dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) + -5 > a),
           8)) +
      dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) +
      -4);
  if (eqz(d)) goto B_b;
  a = dlmalloc_dlmalloc_Chunk_from_mem_hee6c19b2ff028b5c(d);
  c = b + -1;
  if (c & d) goto B_g;
  b = a;
  goto B_f;
  label B_g:
  c = dlmalloc_dlmalloc_Chunk_from_mem_hee6c19b2ff028b5c(c + d & 0 - b);
  d = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8);
  d = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(a) -
      (c = (b = c + select_if(0, b, c - a > d)) - a);
  if (dlmalloc_dlmalloc_Chunk_mmapped_h433d048e993b396e(a)) goto B_h;
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(b, d);
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(a, c);
  dlmalloc_dlmalloc_Dlmalloc_A_dispose_chunk_h3ee811b32e33ddb4(a, c);
  goto B_f;
  label B_h:
  a = a[0];
  b.b = d;
  b.a = a + c;
  label B_f:
  if (dlmalloc_dlmalloc_Chunk_mmapped_h433d048e993b396e(b)) goto B_a;
  a = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(b);
  if (
    a <= dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8) + e) goto B_a;
  c = dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(b, e);
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(b, e);
  dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(c, a = a - e);
  dlmalloc_dlmalloc_Dlmalloc_A_dispose_chunk_h3ee811b32e33ddb4(c, a);
  goto B_a;
  label B_b:
  return c;
  label B_a:
  a = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(b);
  dlmalloc_dlmalloc_Chunk_mmapped_h433d048e993b396e(b);
  return a;
}

function thread_local_lazy_LazyKeyInner_T_initialize_ha002256f08c24ce8(a:int_ptr, b:int):int {
  var c:int = g_a;
  var d:int = 112;
  var e:int_ptr = c - d;
  g_a = e;
  e[23] = a;
  e[24] = b;
  var f:int = e;
  core_ops_function_FnOnce_call_once_h0e7a95c230e9d8fa(f, b);
  e[27] = a;
  e[25] = a;
  var g:int = 72;
  var h:int = e + g;
  var i:long_ptr@4 = h;
  var j:long_ptr@4 = e;
  var va:long = j[0];
  i[0] = va;
  var k:int = 16;
  var l:int_ptr = i + k;
  var m:int_ptr = j + k;
  var n:int = m[0];
  l[0] = n;
  var o:int = 8;
  var p:long_ptr@4 = i + o;
  var q:long_ptr@4 = j + o;
  var wa:long = q[0];
  p[0] = wa;
  var r:int = 48;
  var s:int = e + r;
  var t:int = s;
  var u:int = 4;
  var v:long_ptr@4 = t + u;
  var w:int = 72;
  var x:int = e + w;
  var y:long_ptr@4 = x;
  var xa:long = y[0];
  v[0] = xa;
  var z:int = 16;
  var aa:int_ptr = v + z;
  var ba:int_ptr = y + z;
  var ca:int = ba[0];
  aa[0] = ca;
  var da:int = 8;
  var ea:long_ptr@4 = v + da;
  var fa:long_ptr@4 = y + da;
  var ya:long = fa[0];
  ea[0] = ya;
  var ga:int = 1;
  e[12] = ga;
  var ha:int = 24;
  var ia:int = e + ha;
  var ja:int = ia;
  var ka:int = 48;
  var la:int = e + ka;
  var ma:int = la;
  core_mem_replace_hd14de02155c0002a(ja, a, ma);
  var na:int = 24;
  var oa:int = e + na;
  var pa:int = oa;
  core_ptr_drop_in_place_core_option_Option_core_cell_Cell_wasm_bindgen_externref_Slab_hd5b52ba6ae8f09(
    pa);
  var qa:int = a[0];
  br_table[B_b, B_a, ..B_b](qa)
  label B_b:
  core_hint_unreachable_unchecked_hada860efdb3b02da();
  unreachable;
  label B_a:
  var ra:int = 4;
  var sa:int = a + ra;
  e[26] = sa;
  var ta:int = 112;
  var ua:int = e + ta;
  g_a = ua;
  return sa;
}

export function wbindgen_realloc(a:int, b:int, c:int):int {
  var d:int = g_a;
  var e:int = 48;
  var f:{ a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int, i:int, j:int, k:int, l:int } =
    d - e;
  g_a = f;
  f.e = a;
  f.f = b;
  f.g = c;
  var g:int = 4;
  f.l = g;
  var h:int = f.l;
  f.h = h;
  var i:int = 0;
  var j:int = b;
  var k:int = i;
  var l:int = j > k;
  var m:int = -1;
  var n:int = l ^ m;
  var o:int = 1;
  var p:int = n & o;
  if (p) goto B_d;
  var q:int = 0;
  var r:int = c;
  var s:int = q;
  var t:int = r > s;
  var u:int = -1;
  var v:int = t ^ u;
  var w:int = 1;
  var x:int = v & w;
  if (x) goto B_b;
  goto B_c;
  label B_d:
  var y:int = 1053488;
  var z:int = y;
  var aa:int = 30;
  var ba:int = 1053520;
  var ca:int = ba;
  core_panicking_panic_hceae0c79b0247f98(z, aa, ca);
  unreachable;
  label B_c:
  core_alloc_layout_Layout_from_size_align_h3c2976225cacc658(f, b, h);
  var da:int = f.a;
  var ea:int = f.b;
  f.d = ea;
  f.c = da;
  goto B_a;
  label B_b:
  var fa:int = 1053536;
  var ga:int = fa;
  var ha:int = 30;
  var ia:int = 1053568;
  var ja:int = ia;
  core_panicking_panic_hceae0c79b0247f98(ga, ha, ja);
  unreachable;
  label B_a:
  var ka:int = f.d;
  var la:int = 1;
  var ma:int = 0;
  var na:int = select_if(ma, la, ka);
  if (na) goto B_e;
  var oa:int = f.c;
  var pa:int = f.d;
  f.i = oa;
  f.j = pa;
  var qa:int = alloc_alloc_realloc_hedd2f213e693d0f4(a, oa, pa, c);
  f.k = qa;
  var ra:int =
    core_ptr_mut_ptr_impl_mut_T_is_null_h2f6559593d20d692(qa);
  var sa:int = -1;
  var ta:int = ra ^ sa;
  var ua:int = 1;
  var va:int = ta & ua;
  if (eqz(va)) goto B_e;
  var wa:int = 48;
  var xa:int = f + wa;
  g_a = xa;
  return qa;
  label B_e:
  wasm_bindgen_rt_malloc_failure_h50b5403fa33c6d0e();
  return unreachable;
}

function core_panicking_assert_failed_inner_hc9ea285232a995e1(a:int, b:int, c:int, d:int, e:int, f:int, g:int) {
  var h:int = g_a - 112;
  g_a = h;
  h[3]:int = c;
  h[2]:int = b;
  h[5]:int = e;
  h[4]:int = d;
  br_table[B_d, B_c, B_b, ..B_d](a & 255)
  label B_d:
  h[6]:int = 1054141;
  a = 2;
  goto B_a;
  label B_c:
  h[6]:int = 1054139;
  a = 2;
  goto B_a;
  label B_b:
  h[6]:int = 1054132;
  a = 7;
  label B_a:
  h[7]:int = a;
  if (f[0]:int) goto B_e;
  (h + 56 + 20)[0]:int = 55;
  (h + 68)[0]:int = 55;
  (h + 88 + 20)[0]:int = 3;
  h[23]:long@4 = 4L;
  h[22]:int = 1054240;
  h[15]:int = 54;
  h[26]:int = h + 56;
  h[18]:int = h + 16;
  h[16]:int = h + 8;
  h[14]:int = h + 24;
  core_panicking_panic_fmt_hf69c8b08bc9d2ee5(h + 88, g);
  unreachable;
  label B_e:
  (h + 32 + 16)[0]:long = (f + 16)[0]:long@4;
  (h + 32 + 8)[0]:long = (f + 8)[0]:long@4;
  h[4]:long = f[0]:long@4;
  (h + 88 + 20)[0]:int = 4;
  (h + 84)[0]:int = 56;
  (h + 56 + 20)[0]:int = 55;
  (h + 68)[0]:int = 55;
  h[23]:long@4 = 4L;
  h[22]:int = 1054204;
  h[15]:int = 54;
  h[26]:int = h + 56;
  h[20]:int = h + 32;
  h[18]:int = h + 16;
  h[16]:int = h + 8;
  h[14]:int = h + 24;
  core_panicking_panic_fmt_hf69c8b08bc9d2ee5(h + 88, g);
  unreachable;
}

function wasm_bindgen_convert_closures_invoke3_mut_hde16874730f6d9d3(a:{ a:int, b:int }, b:int, c:int, d:int, e:int, f:int) {
  var g:int = g_a;
  var h:int = 112;
  var i:int_ptr = g - h;
  g_a = i;
  i[15] = b;
  i[16] = c;
  i[17] = d;
  i[18] = e;
  i[19] = f;
  if (b) goto B_a;
  var j:int = 1051756;
  var k:int = j;
  var l:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(k, l);
  unreachable;
  label B_a:
  i[6] = b;
  i[7] = c;
  var m:int = i[6];
  var n:int = i[7];
  i[20] = m;
  i[21] = n;
  var o:int = i[20];
  var p:int_ptr = i[21];
  i[22] = o;
  i[23] = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      d);
  i[25] = q;
  var r:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      e);
  i[26] = r;
  var s:int =
    js_sys_wbg_generated_Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Array_from_abi_hcf75a4a2(
      f);
  i[27] = s;
  i[8] = q;
  i[9] = r;
  i[10] = s;
  var t:int = p[4];
  var u:int = i[8];
  var v:int = i[9];
  var w:int = i[10];
  var x:int = 8;
  var y:int = i + x;
  var z:int = y;
  call_indirect(z, o, u, v, w, t);
  var aa:int = 48;
  var ba:int = i + aa;
  var ca:long_ptr@4 = ba;
  var da:int = 8;
  var ea:int = i + da;
  var fa:long_ptr@4 = ea;
  var qa:long = fa[0];
  ca[0] = qa;
  var ga:int = 8;
  var ha:int_ptr = ca + ga;
  var ia:int_ptr = fa + ga;
  var ja:int = ia[0];
  ha[0] = ja;
  var ka:int = 48;
  var la:int = i + ka;
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h86f7b5ca4e1a3578(
    i,
    la);
  var ma:int = i[1];
  var na:int = i[0];
  a.b = ma;
  a.a = na;
  var oa:int = 112;
  var pa:int = i + oa;
  g_a = pa;
}

function mut_W_as_core_fmt_Write_write_h9f0e7629dba1bc1e(a:int_ptr, b:int):int {
  var d:int;
  var e:int_ptr;
  var c:int = g_a - 16;
  g_a = c;
  a = a[0];
  if (b > 127) goto B_b;
  d = a[2];
  if (d != (a + 4)[0]:int) goto B_c;
  alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h4924ead02e4b7940(
    a,
    d,
    1);
  d = a[2];
  label B_c:
  a[2] = d + 1;
  (a[0] + d)[0]:byte = b;
  goto B_a;
  label B_b:
  c[3]:int = 0;
  if (b < 2048) goto B_e;
  if (b < 65536) goto B_f;
  c[15]:byte = (b & 63) | 128;
  c[12]:byte = b >> 18 | 240;
  c[14]:byte = (b >> 6 & 63) | 128;
  c[13]:byte = (b >> 12 & 63) | 128;
  b = 4;
  goto B_d;
  label B_f:
  c[14]:byte = (b & 63) | 128;
  c[12]:byte = b >> 12 | 224;
  c[13]:byte = (b >> 6 & 63) | 128;
  b = 3;
  goto B_d;
  label B_e:
  c[13]:byte = (b & 63) | 128;
  c[12]:byte = b >> 6 | 192;
  b = 2;
  label B_d:
  if ((a + 4)[0]:int - (d = (e = a + 8)[0]) >= b) goto B_g;
  alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h4924ead02e4b7940(
    a,
    d,
    b);
  d = e[0];
  label B_g:
  memcpy(a[0] + d, c + 12, b);
  e[0] = d + b;
  label B_a:
  g_a = c + 16;
  return 0;
}

function alloc_string_String_push_h3520305ca561dcf7(a:int_ptr, b:int) {
  var d:int;
  var e:int_ptr;
  var c:int = g_a - 16;
  g_a = c;
  if (b > 127) goto B_b;
  d = a[2];
  if (d != (a + 4)[0]:int) goto B_c;
  alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h72b5fc9a2b077781(
    a,
    d,
    1);
  d = a[2];
  label B_c:
  a[2] = d + 1;
  (a[0] + d)[0]:byte = b;
  goto B_a;
  label B_b:
  c[3]:int = 0;
  if (b < 2048) goto B_e;
  if (b >= 65536) goto B_f;
  c[14]:byte = (b & 63) | 128;
  c[12]:byte = b >> 12 | 224;
  c[13]:byte = (b >> 6 & 63) | 128;
  b = 3;
  goto B_d;
  label B_f:
  c[15]:byte = (b & 63) | 128;
  c[12]:byte = b >> 18 | 240;
  c[14]:byte = (b >> 6 & 63) | 128;
  c[13]:byte = (b >> 12 & 63) | 128;
  b = 4;
  goto B_d;
  label B_e:
  c[13]:byte = (b & 63) | 128;
  c[12]:byte = b >> 6 | 192;
  b = 2;
  label B_d:
  if ((a + 4)[0]:int - (d = (e = a + 8)[0]) >= b) goto B_g;
  alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h72b5fc9a2b077781(
    a,
    d,
    b);
  d = e[0];
  label B_g:
  memcpy(a[0] + d, c + 12, b);
  e[0] = d + b;
  label B_a:
  g_a = c + 16;
}

function alloc_raw_vec_RawVec_T_A_current_memory_ha12411b11109967b(a:int, b:{ a:int, b:int }) {
  var s:int;
  var c:int = g_a;
  var d:int = 64;
  var e:int = c - d;
  g_a = e;
  e[9]:int = b;
  var f:int = 4;
  if (f) goto B_b;
  var g:int = 1;
  e[23]:byte = g;
  goto B_a;
  label B_b:
  var h:int = b.b;
  var i:int = 0;
  var j:int = h;
  var k:int = i;
  var l:int = j == k;
  var m:int = 1;
  var n:int = l & m;
  e[23]:byte = n;
  label B_a:
  var o:int = e[23]:ubyte;
  var p:int = 1;
  var q:int = o & p;
  if (q) goto B_e;
  var r:int = 4;
  e[15]:int = r;
  s = e[15]:int;
  e[10]:int = s;
  goto B_d;
  label B_e:
  var t:int = 0;
  a[0]:int = t;
  goto B_c;
  label B_d:
  var u:int = b.b;
  var v:int = 2;
  var w:int = u << v;
  e[11]:int = w;
  var x:int = 8;
  var y:int = e + x;
  core_alloc_layout_Layout_from_size_align_unchecked_h7446fee2b95b05cf(
    y,
    w,
    s);
  var z:int = e[3]:int;
  var aa:int = e[2]:int;
  e[12]:int = aa;
  e[13]:int = z;
  var ba:int = b.a;
  var ca:int = core_ptr_unique_Unique_T_cast_h57f179783635b6e0(ba);
  var da:int = T_as_core_convert_Into_U_into_he220193fffbba529(ca);
  e[6]:int = da;
  e[7]:int = aa;
  e[8]:int = z;
  var ea:int = 24;
  var fa:int = e + ea;
  var ga:long_ptr@4 = fa;
  var na:long = ga[0];
  a[0]:long@4 = na;
  var ha:int = 8;
  var ia:int_ptr = a + ha;
  var ja:int_ptr = ga + ha;
  var ka:int = ja[0];
  ia[0] = ka;
  label B_c:
  var la:int = 64;
  var ma:int = e + la;
  g_a = ma;
}

function alloc_raw_vec_RawVec_T_A_current_memory_h3ed01d8952423f2d(a:int, b:{ a:int, b:int }) {
  var s:int;
  var c:int = g_a;
  var d:int = 64;
  var e:int = c - d;
  g_a = e;
  e[9]:int = b;
  var f:int = 4;
  if (f) goto B_b;
  var g:int = 1;
  e[23]:byte = g;
  goto B_a;
  label B_b:
  var h:int = b.b;
  var i:int = 0;
  var j:int = h;
  var k:int = i;
  var l:int = j == k;
  var m:int = 1;
  var n:int = l & m;
  e[23]:byte = n;
  label B_a:
  var o:int = e[23]:ubyte;
  var p:int = 1;
  var q:int = o & p;
  if (q) goto B_e;
  var r:int = 4;
  e[15]:int = r;
  s = e[15]:int;
  e[10]:int = s;
  goto B_d;
  label B_e:
  var t:int = 0;
  a[0]:int = t;
  goto B_c;
  label B_d:
  var u:int = b.b;
  var v:int = 2;
  var w:int = u << v;
  e[11]:int = w;
  var x:int = 8;
  var y:int = e + x;
  core_alloc_layout_Layout_from_size_align_unchecked_h6a97c487e6240d7c(
    y,
    w,
    s);
  var z:int = e[3]:int;
  var aa:int = e[2]:int;
  e[12]:int = aa;
  e[13]:int = z;
  var ba:int = b.a;
  var ca:int = core_ptr_unique_Unique_T_cast_h6bd557bfabb55f05(ba);
  var da:int = T_as_core_convert_Into_U_into_he220193fffbba529(ca);
  e[6]:int = da;
  e[7]:int = aa;
  e[8]:int = z;
  var ea:int = 24;
  var fa:int = e + ea;
  var ga:long_ptr@4 = fa;
  var na:long = ga[0];
  a[0]:long@4 = na;
  var ha:int = 8;
  var ia:int_ptr = a + ha;
  var ja:int_ptr = ga + ha;
  var ka:int = ja[0];
  ia[0] = ka;
  label B_c:
  var la:int = 64;
  var ma:int = e + la;
  g_a = ma;
}

function core_alloc_layout_Layout_repeat_h48567f413400ae5e(a:long_ptr@4, b:int, c:int) {
  var x:int;
  var y:int;
  var d:int = g_a;
  var e:int = 80;
  var f:int_ptr = d - e;
  g_a = f;
  f[14] = b;
  f[15] = c;
  var g:int = core_alloc_layout_Layout_size_h23e58bed513508c1(b);
  var h:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(b);
  var i:int =
    core_alloc_layout_Layout_padding_needed_for_h7a72f5f24d93ce08(b, h);
  var j:int = g + i;
  f[17] = j;
  var k:int = 24;
  var l:int = f + k;
  core_num_impl_usize_checked_mul_hdbae97257fa4766c(l, j, c);
  var m:int = f[7];
  var n:int = f[6];
  var o:int = 16;
  var p:int = f + o;
  core_option_Option_T_ok_or_h0f700fd4898544fa(p, n, m);
  var q:int = f[5];
  var r:int = f[4];
  var s:int = 8;
  var t:int = f + s;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_he5f55ba0d3bf5129(
    t,
    r,
    q);
  var u:int = f[2];
  var v:int = f[3];
  f[9] = v;
  f[8] = u;
  var w:int = f[8];
  br_table[B_d, B_c, ..B_d](w)
  label B_d:
  x = f[9];
  f[18] = x;
  f[19] = x;
  y = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(b);
  goto B_b;
  label B_c:
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_9(
    a);
  goto B_a;
  label B_b:
  core_alloc_layout_Layout_from_size_align_unchecked_h6a97c487e6240d7c(
    f,
    x,
    y);
  var z:int = f[1];
  var aa:int = f[0];
  f[10] = aa;
  f[11] = z;
  f[12] = j;
  var ba:int = 40;
  var ca:int = f + ba;
  var da:long_ptr@4 = ca;
  var ka:long = da[0];
  a[0] = ka;
  var ea:int = 8;
  var fa:int_ptr = a + ea;
  var ga:int_ptr = da + ea;
  var ha:int = ga[0];
  fa[0] = ha;
  label B_a:
  var ia:int = 80;
  var ja:int = f + ia;
  g_a = ja;
}

function core_alloc_layout_Layout_repeat_hcbc797dc65b8a816(a:long_ptr@4, b:int, c:int) {
  var x:int;
  var y:int;
  var d:int = g_a;
  var e:int = 80;
  var f:int_ptr = d - e;
  g_a = f;
  f[14] = b;
  f[15] = c;
  var g:int = core_alloc_layout_Layout_size_hd03d4df4a572a4a6(b);
  var h:int = core_alloc_layout_Layout_align_he66d4e1016473d9e(b);
  var i:int =
    core_alloc_layout_Layout_padding_needed_for_h7ace4e8ef7657e27(b, h);
  var j:int = g + i;
  f[17] = j;
  var k:int = 24;
  var l:int = f + k;
  core_num_impl_usize_checked_mul_h1e543a6f8e7453f4(l, j, c);
  var m:int = f[7];
  var n:int = f[6];
  var o:int = 16;
  var p:int = f + o;
  core_option_Option_T_ok_or_h0f700fd4898544fa(p, n, m);
  var q:int = f[5];
  var r:int = f[4];
  var s:int = 8;
  var t:int = f + s;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_he5f55ba0d3bf5129(
    t,
    r,
    q);
  var u:int = f[2];
  var v:int = f[3];
  f[9] = v;
  f[8] = u;
  var w:int = f[8];
  br_table[B_d, B_c, ..B_d](w)
  label B_d:
  x = f[9];
  f[18] = x;
  f[19] = x;
  y = core_alloc_layout_Layout_align_he66d4e1016473d9e(b);
  goto B_b;
  label B_c:
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_9(
    a);
  goto B_a;
  label B_b:
  core_alloc_layout_Layout_from_size_align_unchecked_hd141f6a17bb12fc4(
    f,
    x,
    y);
  var z:int = f[1];
  var aa:int = f[0];
  f[10] = aa;
  f[11] = z;
  f[12] = j;
  var ba:int = 40;
  var ca:int = f + ba;
  var da:long_ptr@4 = ca;
  var ka:long = da[0];
  a[0] = ka;
  var ea:int = 8;
  var fa:int_ptr = a + ea;
  var ga:int_ptr = da + ea;
  var ha:int = ga[0];
  fa[0] = ha;
  label B_a:
  var ia:int = 80;
  var ja:int = f + ia;
  g_a = ja;
}

function alloc_raw_vec_RawVec_T_A_current_memory_h2f68139788e5409a(a:int, b:{ a:int, b:int }) {
  var s:int;
  var c:int = g_a;
  var d:int = 64;
  var e:int = c - d;
  g_a = e;
  e[9]:int = b;
  var f:int = 1;
  if (f) goto B_b;
  var g:int = 1;
  e[23]:byte = g;
  goto B_a;
  label B_b:
  var h:int = b.b;
  var i:int = 0;
  var j:int = h;
  var k:int = i;
  var l:int = j == k;
  var m:int = 1;
  var n:int = l & m;
  e[23]:byte = n;
  label B_a:
  var o:int = e[23]:ubyte;
  var p:int = 1;
  var q:int = o & p;
  if (q) goto B_e;
  var r:int = 1;
  e[15]:int = r;
  s = e[15]:int;
  e[10]:int = s;
  goto B_d;
  label B_e:
  var t:int = 0;
  a[0]:int = t;
  goto B_c;
  label B_d:
  var u:int = b.b;
  var v:int = 0;
  var w:int = u << v;
  e[11]:int = w;
  var x:int = 8;
  var y:int = e + x;
  core_alloc_layout_Layout_from_size_align_unchecked_he038ca9588015484(
    y,
    w,
    s);
  var z:int = e[3]:int;
  var aa:int = e[2]:int;
  e[12]:int = aa;
  e[13]:int = z;
  var ba:int = b.a;
  var ca:int = core_ptr_unique_Unique_T_cast_hffa40adb81a19d6c(ba);
  var da:int = T_as_core_convert_Into_U_into_he220193fffbba529(ca);
  e[6]:int = da;
  e[7]:int = aa;
  e[8]:int = z;
  var ea:int = 24;
  var fa:int = e + ea;
  var ga:long_ptr@4 = fa;
  var na:long = ga[0];
  a[0]:long@4 = na;
  var ha:int = 8;
  var ia:int_ptr = a + ha;
  var ja:int_ptr = ga + ha;
  var ka:int = ja[0];
  ia[0] = ka;
  label B_c:
  var la:int = 64;
  var ma:int = e + la;
  g_a = ma;
}

function alloc_raw_vec_RawVec_T_A_current_memory_h8709887620270aaf(a:int, b:{ a:int, b:int }) {
  var s:int;
  var c:int = g_a;
  var d:int = 64;
  var e:int = c - d;
  g_a = e;
  e[9]:int = b;
  var f:int = 4;
  if (f) goto B_b;
  var g:int = 1;
  e[23]:byte = g;
  goto B_a;
  label B_b:
  var h:int = b.b;
  var i:int = 0;
  var j:int = h;
  var k:int = i;
  var l:int = j == k;
  var m:int = 1;
  var n:int = l & m;
  e[23]:byte = n;
  label B_a:
  var o:int = e[23]:ubyte;
  var p:int = 1;
  var q:int = o & p;
  if (q) goto B_e;
  var r:int = 4;
  e[15]:int = r;
  s = e[15]:int;
  e[10]:int = s;
  goto B_d;
  label B_e:
  var t:int = 0;
  a[0]:int = t;
  goto B_c;
  label B_d:
  var u:int = b.b;
  var v:int = 2;
  var w:int = u << v;
  e[11]:int = w;
  var x:int = 8;
  var y:int = e + x;
  core_alloc_layout_Layout_from_size_align_unchecked_he038ca9588015484(
    y,
    w,
    s);
  var z:int = e[3]:int;
  var aa:int = e[2]:int;
  e[12]:int = aa;
  e[13]:int = z;
  var ba:int = b.a;
  var ca:int = core_ptr_unique_Unique_T_cast_hd168d1149267c9a5(ba);
  var da:int = T_as_core_convert_Into_U_into_he220193fffbba529(ca);
  e[6]:int = da;
  e[7]:int = aa;
  e[8]:int = z;
  var ea:int = 24;
  var fa:int = e + ea;
  var ga:long_ptr@4 = fa;
  var na:long = ga[0];
  a[0]:long@4 = na;
  var ha:int = 8;
  var ia:int_ptr = a + ha;
  var ja:int_ptr = ga + ha;
  var ka:int = ja[0];
  ia[0] = ka;
  label B_c:
  var la:int = 64;
  var ma:int = e + la;
  g_a = ma;
}

function wasm_bindgen_JsValue_as_core_ops_drop_Drop_drop_h5b123f0322e5e8c0(a:int_ptr) {
  var b:int = g_a;
  var c:int = 64;
  var d:int_ptr = b - c;
  g_a = d;
  d[13] = a;
  var e:int = a[0];
  var f:int = 32;
  var g:int = e;
  var h:int = f;
  var i:int = g >= h;
  var j:int = -1;
  var k:int = i ^ j;
  var l:int = 1;
  var m:int = k & l;
  if (m) goto B_c;
  var n:int = a[0];
  var o:int = 36;
  var p:int = n;
  var q:int = o;
  var r:int = p >= q;
  var s:int = 1;
  var t:int = r & s;
  if (t) goto B_b;
  goto B_a;
  label B_c:
  d[12] = a;
  var u:int = d[12];
  d[14] = u;
  var v:int = 6;
  var w:int = 8;
  var x:int = d + w;
  core_fmt_ArgumentV1_new_h687622c7d3eb9603(x, u, v);
  var y:int = d[3];
  var z:int = d[2];
  d[10] = z;
  d[11] = y;
  var aa:int = 40;
  var ba:int = d + aa;
  var ca:int = ba;
  d[15] = ca;
  var da:int = 40;
  var ea:int = d + da;
  var fa:int = ea;
  var ga:int = 16;
  var ha:int = d + ga;
  var ia:int = ha;
  var ja:int = 1051636;
  var ka:int = ja;
  var la:int = 1;
  core_fmt_Arguments_new_v1_hf122ca2ab015a22f(ia, ka, la, fa, la);
  var ma:int = 16;
  var na:int = d + ma;
  var oa:int = na;
  var pa:int = 1051740;
  var qa:int = pa;
  core_panicking_panic_fmt_hf69c8b08bc9d2ee5(oa, qa);
  unreachable;
  label B_b:
  var ra:int = a[0];
  wasm_bindgen_wbindgen_object_drop_ref_h4d878503ff5d9264(ra);
  label B_a:
  var sa:int = 64;
  var ta:int = d + sa;
  g_a = ta;
}

function core_fmt_num_imp_fmt_u64_h4d8c26c3623cb98b(a:long, b:int, c:int):int {
  var g:int;
  var h:int;
  var i:long;
  var f:int;
  var d:int = g_a - 48;
  g_a = d;
  var e:int = 39;
  if (a >= 10000L) goto B_b;
  i = a;
  goto B_a;
  label B_b:
  e = 39;
  loop L_c {
    f = d + 9 + e;
    (f + -4)[0]:short@1 =
      (((h = ((g = i32_wrap_i64(a - (i = a / 10000L) * 10000L)) & 65535) / 100) <<
        1) +
       1054342)[0]:ushort@1;
    (f + -2)[0]:short@1 =
      (((g - h * 100 & 65535) << 1) + 1054342)[0]:ushort@1;
    e = e + -4;
    f = a > 99999999L;
    a = i;
    if (f) continue L_c;
  }
  label B_a:
  f = i32_wrap_i64(i);
  if (f <= 99) goto B_d;
  (d + 9 + (e = e + -2))[0]:short@1 =
    ((((f = i32_wrap_i64(i)) - (f = (f & 65535) / 100) * 100 & 65535) << 1) +
     1054342)[0]:ushort@1;
  label B_d:
  if (f < 10) goto B_f;
  (d + 9 + (e = e + -2))[0]:short@1 = ((f << 1) + 1054342)[0]:ushort@1;
  goto B_e;
  label B_f:
  (d + 9 + (e = e + -1))[0]:byte = f + 48;
  label B_e:
  e = core_fmt_Formatter_pad_integral_h8c76600d11a2c4b1(c,
                                                        b,
                                                        1054040,
                                                        0,
                                                        d + 9 + e,
                                                        39 - e);
  g_a = d + 48;
  return e;
}

export function wbindgen_malloc(a:int):int {
  var b:int = g_a;
  var c:int = 48;
  var d:int_ptr = b - c;
  g_a = d;
  d[8] = a;
  var e:int = 4;
  d[11] = e;
  var f:int = d[11];
  d[9] = f;
  core_alloc_layout_Layout_from_size_align_h3c2976225cacc658(d, a, f);
  var g:int = d[0];
  var h:int = d[1];
  d[5] = h;
  d[4] = g;
  var i:int = d[5];
  var j:int = 1;
  var k:int = 0;
  var l:int = select_if(k, j, i);
  if (l) goto B_a;
  var m:int = d[4];
  var n:int = d[5];
  d[6] = m;
  d[7] = n;
  var o:int = 24;
  var p:int = d + o;
  var q:int = p;
  var r:int = core_alloc_layout_Layout_size_hed7bf60fc00d518d(q);
  var s:int = 0;
  var t:int = r;
  var u:int = s;
  var v:int = t > u;
  var w:int = 1;
  var x:int = v & w;
  if (x) goto B_c;
  d[3] = f;
  goto B_b;
  label B_c:
  var y:int = d[6];
  var z:int = d[7];
  var aa:int = alloc_alloc_alloc_hbd36034e35634230(y, z);
  d[10] = aa;
  var ba:int =
    core_ptr_mut_ptr_impl_mut_T_is_null_h2f6559593d20d692(aa);
  var ca:int = -1;
  var da:int = ba ^ ca;
  var ea:int = 1;
  var fa:int = da & ea;
  if (eqz(fa)) goto B_a;
  d[3] = aa;
  label B_b:
  var ga:int = d[3];
  var ha:int = 48;
  var ia:int = d + ha;
  g_a = ia;
  return ga;
  label B_a:
  wasm_bindgen_rt_malloc_failure_h50b5403fa33c6d0e();
  return unreachable;
}

function dlmalloc_dlmalloc_Dlmalloc_A_insert_large_chunk_h2d7ab4cd21b9b1e8(a:int, b:int) {
  var g:int_ptr;
  var f:int;
  var c:int_ptr = 0;
  if (b < 256) goto B_a;
  c = 31;
  if (b > 16777215) goto B_a;
  c = (b >> 6 - (c = clz(b >> 8)) & 1) - (c << 1) + 62;
  label B_a:
  a[4]:long@4 = 0L;
  a[7]:int = c;
  var d:int_ptr = (c << 2) + 1054964;
  var e:int_ptr =
    dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(a);
  f = 0[263674]:int;
  if (eqz(f & (g = 1 << c))) goto B_f;
  f = d[0];
  c = dlmalloc_dlmalloc_leftshift_for_tree_index_h62dacf28ccbe01be(c);
  if (
    dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(
      dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(f)) !=
    b) goto B_e;
  c = f;
  goto B_d;
  label B_f:
  0[263674]:int = f | g;
  d[0] = a;
  a[6]:int = d;
  goto B_b;
  label B_e:
  d = b << c;
  loop L_g {
    g = f + (d >> 29 & 4) + 16;
    c = g[0];
    if (eqz(c)) goto B_c;
    d = d << 1;
    f = c;
    if (
      dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(
        dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(c)) !=
      b) continue L_g;
  }
  label B_d:
  c = dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(c);
  d = c[2];
  d[3] = e;
  c[2] = e;
  e[3] = c;
  e[2] = d;
  a[6]:int = 0;
  return ;
  label B_c:
  g[0] = a;
  a[6]:int = f;
  label B_b:
  e[2] = e;
  e[3] = e;
}

function dlmalloc_dlmalloc_Dlmalloc_A_unlink_large_chunk_hb07925f032cc8648(a:int_ptr) {
  var c:int_ptr;
  var d:int_ptr;
  var e:int_ptr;
  var f:int_ptr;
  var b:int_ptr = a[6];
  if (
    dlmalloc_dlmalloc_TreeChunk_next_h115dce7333e5fc2c(a) != a) goto B_c;
  e = (a + select_if(20, 16, d = (c = a + 20)[0]))[0]:int;
  if (e) goto B_b;
  d = 0;
  goto B_a;
  label B_c:
  e = dlmalloc_dlmalloc_TreeChunk_prev_h06d58a8550adfb36(a);
  e[3] =
    dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(
      d = dlmalloc_dlmalloc_TreeChunk_next_h115dce7333e5fc2c(a));
  d[2] = dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(e);
  goto B_a;
  label B_b:
  c = select_if(c, a + 16, d);
  loop L_d {
    f = c;
    d = e;
    c = d + 20;
    e = c[0];
    if (e) goto B_e;
    c = d + 16;
    e = d[4];
    label B_e:
    if (e) continue L_d;
  }
  f[0] = 0;
  label B_a:
  if (eqz(b)) goto B_f;
  e = (a[7] << 2) + 1054964;
  if (e[0] == a) goto B_h;
  (b + select_if(16, 20, b[4] == a))[0]:int = d;
  if (d) goto B_g;
  goto B_f;
  label B_h:
  e[0] = d;
  if (d) goto B_g;
  0[263674]:int = 0[263674]:int & -2 << a[7];
  return ;
  label B_g:
  d[6] = b;
  e = a[4];
  if (eqz(e)) goto B_i;
  d[4] = e;
  e[6] = d;
  label B_i:
  e = (a + 20)[0]:int;
  if (eqz(e)) goto B_f;
  (d + 20)[0]:int = e;
  e[6] = d;
  return ;
  label B_f:
}

function core_cmp_min_by_h699129abab0367e8(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 48;
  var e:int = c - d;
  g_a = e;
  e[2]:int = a;
  e[3]:int = b;
  var f:int = 0;
  e[39]:byte = f;
  var g:int = 0;
  e[38]:byte = g;
  var h:int = 1;
  e[39]:byte = h;
  var i:int = 1;
  e[38]:byte = i;
  var j:int = 8;
  var k:int = e + j;
  var l:int = k;
  e[6]:int = l;
  var m:int = 12;
  var n:int = e + m;
  var o:int = n;
  e[7]:int = o;
  var p:int = e[6]:int;
  var q:int = e[7]:int;
  var r:int =
    core_ops_function_FnOnce_call_once_hf3475e4c772b70c7(p, q);
  e[23]:byte = r;
  var s:int = e[23]:byte;
  var t:int = 1;
  var u:int = s + t;
  br_table[B_c, B_c, B_b, ..B_c](u)
  label B_c:
  var v:int = 0;
  e[39]:byte = v;
  var w:int = e[2]:int;
  e[4]:int = w;
  goto B_a;
  label B_b:
  var x:int = 0;
  e[38]:byte = x;
  var y:int = e[3]:int;
  e[4]:int = y;
  label B_a:
  var z:int = e[38]:ubyte;
  var aa:int = 1;
  var ba:int = z & aa;
  if (eqz(ba)) goto B_d
  label B_d:
  var ca:int = e[39]:ubyte;
  var da:int = 1;
  var ea:int = ca & da;
  if (eqz(ea)) goto B_e
  label B_e:
  var fa:int = e[4]:int;
  var ga:int = 48;
  var ha:int = e + ga;
  g_a = ha;
  return fa;
}

function core_cmp_max_by_hb8d87a6c10feca0d(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 48;
  var e:int = c - d;
  g_a = e;
  e[2]:int = a;
  e[3]:int = b;
  var f:int = 0;
  e[39]:byte = f;
  var g:int = 0;
  e[38]:byte = g;
  var h:int = 1;
  e[39]:byte = h;
  var i:int = 1;
  e[38]:byte = i;
  var j:int = 8;
  var k:int = e + j;
  var l:int = k;
  e[6]:int = l;
  var m:int = 12;
  var n:int = e + m;
  var o:int = n;
  e[7]:int = o;
  var p:int = e[6]:int;
  var q:int = e[7]:int;
  var r:int =
    core_ops_function_FnOnce_call_once_h56cbafbcab97a190(p, q);
  e[23]:byte = r;
  var s:int = e[23]:byte;
  var t:int = 1;
  var u:int = s + t;
  br_table[B_c, B_c, B_b, ..B_c](u)
  label B_c:
  var v:int = 0;
  e[38]:byte = v;
  var w:int = e[3]:int;
  e[4]:int = w;
  goto B_a;
  label B_b:
  var x:int = 0;
  e[39]:byte = x;
  var y:int = e[2]:int;
  e[4]:int = y;
  label B_a:
  var z:int = e[38]:ubyte;
  var aa:int = 1;
  var ba:int = z & aa;
  if (eqz(ba)) goto B_d
  label B_d:
  var ca:int = e[39]:ubyte;
  var da:int = 1;
  var ea:int = ca & da;
  if (eqz(ea)) goto B_e
  label B_e:
  var fa:int = e[4]:int;
  var ga:int = 48;
  var ha:int = e + ga;
  g_a = ha;
  return fa;
}

export function sign(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 80;
  var f:int_ptr = d - e;
  g_a = f;
  f[16] = b;
  f[17] = c;
  var g:int = 16;
  var h:int = f + g;
  wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_RefFromWasmAbi_for_str_ref_from_abi_h3af855beb(
    h,
    b,
    c);
  var i:int = f[4];
  var j:int = f[5];
  f[11] = j;
  f[10] = i;
  var k:int = f[10];
  var l:int = f[11];
  f[18] = k;
  f[19] = l;
  var m:int = 24;
  var n:int = f + m;
  var o:int = n;
  match_twenty_sign_h5787c0a9b8e619b6(o, k, l);
  var p:int = 40;
  var q:int = f + p;
  var r:int = q;
  core_ptr_drop_in_place_alloc_boxed_Box_str_hf407902d7cc55a89(r);
  var s:int = 48;
  var t:int = f + s;
  var u:long_ptr@4 = t;
  var v:int = 24;
  var w:int = f + v;
  var x:long_ptr@4 = w;
  var ka:long = x[0];
  u[0] = ka;
  var y:int = 8;
  var z:int_ptr = u + y;
  var aa:int_ptr = x + y;
  var ba:int = aa[0];
  z[0] = ba;
  var ca:int = 8;
  var da:int = f + ca;
  var ea:int = 48;
  var fa:int = f + ea;
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h6f23e352409c8535(
    da,
    fa);
  var ga:int = f[3];
  var ha:int = f[2];
  a.b = ga;
  a.a = ha;
  var ia:int = 80;
  var ja:int = f + ia;
  g_a = ja;
}

function wasm_bindgen_convert_closures_invoke4_mut_h6dbdcbcf760d5731(a:int, b:int, c:int, d:int, e:int, f:int):int {
  var g:int = g_a;
  var h:int = 96;
  var i:int_ptr = g - h;
  g_a = i;
  i[8] = a;
  i[9] = b;
  i[10] = c;
  i[11] = d;
  i[12] = e;
  i[13] = f;
  if (a) goto B_a;
  var j:int = 1051756;
  var k:int = j;
  var l:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(k, l);
  unreachable;
  label B_a:
  i[2] = a;
  i[3] = b;
  var m:int = i[2];
  var n:int = i[3];
  i[14] = m;
  i[15] = n;
  var o:int = i[14];
  var p:int_ptr = i[15];
  i[16] = o;
  i[17] = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      c);
  i[19] = q;
  var r:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      d);
  i[20] = r;
  var s:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      e);
  i[21] = s;
  var t:int =
    js_sys_wbg_generated_Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Array_from_abi_hcf75a4a2(
      f);
  i[22] = t;
  i[4] = q;
  i[5] = r;
  i[6] = s;
  i[7] = t;
  var u:int = p[4];
  var v:int = i[4];
  var w:int = i[5];
  var x:int = i[6];
  var y:int = i[7];
  var z:int = call_indirect(o, v, w, x, y, u);
  i[23] = z;
  var aa:int =
    T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_hf35f06d0d8e0b24d(
      z);
  var ba:int = 96;
  var ca:int = i + ba;
  g_a = ca;
  return aa;
}

function core_alloc_layout_Layout_from_size_align_h9c34f4959836e663(a:{ a:int, b:int }, b:int, c:int) {
  var da:int;
  var ca:int;
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[7] = b;
  f[8] = c;
  f[9] = c;
  f[10] = c;
  var g:int = popcnt(c);
  f[11] = g;
  var h:int = f[11];
  var i:int = 1;
  var j:int = h;
  var k:int = i;
  var l:int = j == k;
  var m:int = -1;
  var n:int = l ^ m;
  var o:int = 1;
  var p:int = n & o;
  if (p) goto B_e;
  var q:int = 1;
  var r:int = c - q;
  var s:int = -1;
  var t:int = s - r;
  var u:int = b;
  var v:int = t;
  var w:int = u > v;
  var x:int = 1;
  var y:int = w & x;
  if (y) goto B_c;
  goto B_d;
  label B_e:
  var z:int = 0;
  f[5] = z;
  goto B_a;
  label B_d:
  var aa:int = 8;
  var ba:int = f + aa;
  core_alloc_layout_Layout_from_size_align_unchecked_h6a97c487e6240d7c(
    ba,
    b,
    c);
  ca = f[3];
  da = f[2];
  goto B_b;
  label B_c:
  var ea:int = 0;
  f[5] = ea;
  goto B_a;
  label B_b:
  f[4] = da;
  f[5] = ca;
  label B_a:
  var fa:int = f[4];
  var ga:int = f[5];
  a.b = ga;
  a.a = fa;
  var ha:int = 48;
  var ia:int = f + ha;
  g_a = ia;
}

function core_option_Option_T_unwrap_or_else_hbd755425245af46e(a:{ a:int, b:int }, b:{ a:int, b:int, c:int }, c:long_ptr@4) {
  var d:int = g_a;
  var e:int = 48;
  var f:int = d - e;
  g_a = f;
  var g:int = 0;
  f[39]:byte = g;
  var h:int = 1;
  f[39]:byte = h;
  var i:int = b.a;
  br_table[B_d, B_c, ..B_d](i)
  label B_d:
  var j:int = 0;
  f[39]:byte = j;
  var k:int = 8;
  var l:int_ptr = c + k;
  var m:int = l[0];
  var n:int = 24;
  var o:int = f + n;
  var p:int_ptr = o + k;
  p[0] = m;
  var fa:long = c[0];
  f[3]:long = fa;
  var q:int = 8;
  var r:int = f + q;
  var s:int = 24;
  var t:int = f + s;
  wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_string_String_into_abi_c(
    r,
    t);
  var u:int = f[2]:int;
  var v:int = f[3]:int;
  f[5]:int = v;
  f[4]:int = u;
  goto B_b;
  label B_c:
  var w:int = b.b;
  var x:int = b.c;
  f[10]:int = w;
  f[11]:int = x;
  f[4]:int = w;
  f[5]:int = x;
  goto B_a;
  label B_b:
  label B_a:
  var y:int = f[39]:ubyte;
  var z:int = 1;
  var aa:int = y & z;
  if (eqz(aa)) goto B_e;
  core_ptr_drop_in_place_wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_s(
    c);
  label B_e:
  var ba:int = f[4]:int;
  var ca:int = f[5]:int;
  a.b = ca;
  a.a = ba;
  var da:int = 48;
  var ea:int = f + da;
  g_a = ea;
}

function core_alloc_layout_Layout_from_size_align_h757715589b9446af(a:{ a:int, b:int }, b:int, c:int) {
  var da:int;
  var ca:int;
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[7] = b;
  f[8] = c;
  f[9] = c;
  f[10] = c;
  var g:int = popcnt(c);
  f[11] = g;
  var h:int = f[11];
  var i:int = 1;
  var j:int = h;
  var k:int = i;
  var l:int = j == k;
  var m:int = -1;
  var n:int = l ^ m;
  var o:int = 1;
  var p:int = n & o;
  if (p) goto B_e;
  var q:int = 1;
  var r:int = c - q;
  var s:int = -1;
  var t:int = s - r;
  var u:int = b;
  var v:int = t;
  var w:int = u > v;
  var x:int = 1;
  var y:int = w & x;
  if (y) goto B_c;
  goto B_d;
  label B_e:
  var z:int = 0;
  f[5] = z;
  goto B_a;
  label B_d:
  var aa:int = 8;
  var ba:int = f + aa;
  core_alloc_layout_Layout_from_size_align_unchecked_hd141f6a17bb12fc4(
    ba,
    b,
    c);
  ca = f[3];
  da = f[2];
  goto B_b;
  label B_c:
  var ea:int = 0;
  f[5] = ea;
  goto B_a;
  label B_b:
  f[4] = da;
  f[5] = ca;
  label B_a:
  var fa:int = f[4];
  var ga:int = f[5];
  a.b = ga;
  a.a = fa;
  var ha:int = 48;
  var ia:int = f + ha;
  g_a = ia;
}

function core_alloc_layout_Layout_from_size_align_h3c2976225cacc658(a:{ a:int, b:int }, b:int, c:int) {
  var da:int;
  var ca:int;
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[7] = b;
  f[8] = c;
  f[9] = c;
  f[10] = c;
  var g:int = popcnt(c);
  f[11] = g;
  var h:int = f[11];
  var i:int = 1;
  var j:int = h;
  var k:int = i;
  var l:int = j == k;
  var m:int = -1;
  var n:int = l ^ m;
  var o:int = 1;
  var p:int = n & o;
  if (p) goto B_e;
  var q:int = 1;
  var r:int = c - q;
  var s:int = -1;
  var t:int = s - r;
  var u:int = b;
  var v:int = t;
  var w:int = u > v;
  var x:int = 1;
  var y:int = w & x;
  if (y) goto B_c;
  goto B_d;
  label B_e:
  var z:int = 0;
  f[5] = z;
  goto B_a;
  label B_d:
  var aa:int = 8;
  var ba:int = f + aa;
  core_alloc_layout_Layout_from_size_align_unchecked_he038ca9588015484(
    ba,
    b,
    c);
  ca = f[3];
  da = f[2];
  goto B_b;
  label B_c:
  var ea:int = 0;
  f[5] = ea;
  goto B_a;
  label B_b:
  f[4] = da;
  f[5] = ca;
  label B_a:
  var fa:int = f[4];
  var ga:int = f[5];
  a.b = ga;
  a.a = fa;
  var ha:int = 48;
  var ia:int = f + ha;
  g_a = ia;
}

function dlmalloc_dlmalloc_Dlmalloc_A_release_unused_segments_h15a44562f2ff2228():int {
  var a:int;
  var h:int;
  a = 0[263781]:int;
  if (a) goto B_a;
  0[263785]:int = 4095;
  return 0;
  label B_a:
  var b:int_ptr = 1055116;
  var c:int = 0;
  var d:int = 0;
  loop L_b {
    var e:{ a:int, b:int, c:int } = a;
    a = e.c;
    var f:int = e.b;
    var g:int = e.a;
    if (
      eqz(
        dlmalloc_sys_System_as_dlmalloc_Allocator_can_release_part_hbadca9aef442623d(
          1054692,
          (e + 12)[0]:int >> 1))) goto B_d;
    if (
      dlmalloc_dlmalloc_Segment_is_extern_hcb93322195efbcce(e)) goto B_d;
    h = g +
        dlmalloc_dlmalloc_align_up_h4772c6244aec6713(
          h = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(g),
          8) -
        h;
    var i:int = dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(h);
    var j:int = dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(0);
    var k:int = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(j, 8);
    var l:int = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(20, 8);
    var m:int = dlmalloc_dlmalloc_align_up_h4772c6244aec6713(16, 8);
    if (dlmalloc_dlmalloc_Chunk_inuse_h8cfc6665aae9b287(h)) goto B_d;
    if (h + i < g + f + j - k + l + m) goto B_d;
    if (0[263775]:int == h) goto B_f;
    dlmalloc_dlmalloc_Dlmalloc_A_unlink_large_chunk_hb07925f032cc8648(h);
    goto B_e;
    label B_f:
    0[263773]:int = 0;
    0[263775]:int = 0;
    label B_e:
    if (
      dlmalloc_sys_System_as_dlmalloc_Allocator_free_hb5a074dd393cd90a(
        1054692,
        g,
        f)) goto B_g;
    dlmalloc_dlmalloc_Dlmalloc_A_insert_large_chunk_h2d7ab4cd21b9b1e8(h, i);
    goto B_d;
    label B_g:
    0[263777]:int = 0[263777]:int - f;
    b[2] = a;
    c = f + c;
    goto B_c;
    label B_d:
    b = e;
    label B_c:
    d = d + 1;
    if (a) continue L_b;
  }
  0[263785]:int = select_if(d, 4095, d > 4095);
  return c;
}

function wasm_bindgen_convert_closures_invoke3_mut_hb15a1d38bb4ccc07(a:int, b:int, c:int, d:int, e:int):int {
  var f:int = g_a;
  var g:int = 80;
  var h:int = f - g;
  g_a = h;
  h[7]:int = a;
  h[8]:int = b;
  h[9]:int = c;
  h[10]:int = d;
  h[11]:int = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[2]:int = a;
  h[3]:int = b;
  var l:int = h[2]:int;
  var m:int = h[3]:int;
  h[12]:int = l;
  h[13]:int = m;
  var n:int = h[12]:int;
  var o:int_ptr = h[13]:int;
  h[14]:int = n;
  h[15]:int = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      c);
  h[16]:int = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[17]:int = q;
  var r:int =
    js_sys_wbg_generated_Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Array_from_abi_hcf75a4a2(
      e);
  h[18]:int = r;
  h[4]:int = p;
  h[5]:int = q;
  h[6]:int = r;
  var s:int = o[4];
  var t:int = h[4]:int;
  var u:int = h[5]:int;
  var v:int = h[6]:int;
  var w:int = call_indirect(n, t, u, v, s);
  var x:int = 1;
  var y:int = w & x;
  h[79]:byte = y;
  var z:int = 1;
  var aa:int = w & z;
  var ba:int =
    T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_hdc7405c6ec1f4734(
      aa);
  var ca:int = 80;
  var da:int = h + ca;
  g_a = da;
  return ba;
}

function panicking_begin_panic_handler_PanicPayload_as_core_panic_BoxMeUp_take_box_h0213f8a547c7e7bb(a:{ a:int, b:int }, b:int) {
  var f:int;
  var e:int;
  var c:int = g_a - 48;
  g_a = c;
  var d:long_ptr@4 = b + 4;
  if (eqz(b[1]:int)) goto B_b;
  e = d_srcsignrsMMMCMZcalledOptionu[1279]:int;
  goto B_a;
  label B_b:
  f = b[0]:int;
  c[3]:long@4 = 0L;
  c[2]:int = (e = d_srcsignrsMMMCMZcalledOptionu[1279]:int);
  c[5]:int = c + 8;
  (c + 24 + 16)[0]:long = (f + 16)[0]:long@4;
  (c + 24 + 8)[0]:long = (f + 8)[0]:long@4;
  c[3]:long = f[0]:long@4;
  core_fmt_write_hb363a5cc37db74af(c + 20, 1053624, c + 24);
  (d + 8)[0]:int = (c + 8 + 8)[0]:int;
  d[0] = c[1]:long;
  label B_a:
  f = c + 24 + 8;
  f[0]:int = (d + 8)[0]:int;
  (b + 12)[0]:int = 0;
  var g:long = d[0];
  (b + 8)[0]:int = 0;
  b[1]:int = e;
  c[3]:long = g;
  b = rust_alloc(12, 4);
  if (b) goto B_c;
  alloc_alloc_handle_alloc_error_h45a714900d29bef5(12, 4);
  unreachable;
  label B_c:
  b[0]:long@4 = c[3]:long;
  (b + 8)[0]:int = f[0]:int;
  a.b = 1053812;
  a.a = b;
  g_a = c + 48;
}

function core_slice_iter_Iter_T_as_core_iter_iterator_Iterator_next_h06b16cad560ddd3c(a:{ a:int, b:int }):int {
  var aa:int;
  var b:int = g_a;
  var c:int = 48;
  var d:int_ptr = b - c;
  g_a = d;
  d[4] = a;
  var e:int = a.a;
  var f:int = core_ptr_non_null_NonNull_T_as_ptr_h80ab7d4aa42677da(e);
  core_ptr_mut_ptr_impl_mut_T_is_null_ha07c92a7aa0fb7e5(f);
  var g:int = 4;
  if (g) goto B_b;
  goto B_a;
  label B_b:
  var h:int = a.b;
  core_ptr_ptr_impl_T_is_null_h87240b65f40d0c92(h);
  label B_a:
  var i:int = a.a;
  var j:int = core_ptr_non_null_NonNull_T_as_ptr_h80ab7d4aa42677da(i);
  var k:int = a.b;
  var l:int = j;
  var m:int = k;
  var n:int = l == m;
  var o:int = 1;
  var p:int = n & o;
  if (p) goto B_e;
  d[6] = a;
  var q:int = 1;
  d[7] = q;
  var r:int = a.a;
  var s:int = core_ptr_non_null_NonNull_T_as_ptr_h80ab7d4aa42677da(r);
  d[8] = s;
  var t:int = a.a;
  var u:int = core_ptr_non_null_NonNull_T_as_ptr_h80ab7d4aa42677da(t);
  d[9] = u;
  var v:int = 1;
  d[10] = v;
  var w:int = 4;
  var x:int = u + w;
  d[11] = x;
  var y:int = d[11];
  var z:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h5f68ca722f50596c(y);
  a.a = z;
  d[5] = s;
  aa = d[5];
  goto B_d;
  label B_e:
  var ba:int = 0;
  d[3] = ba;
  goto B_c;
  label B_d:
  d[3] = aa;
  label B_c:
  var ca:int = d[3];
  var da:int = 48;
  var ea:int = d + da;
  g_a = ea;
  return ca;
}

function js_sys_Function_call0_h1e4c0e2abb07af5b(a:{ a:int, b:int }, b:int, c:int) {
  var s:int;
  var d:int = g_a;
  var e:int = 80;
  var f:int_ptr = d - e;
  g_a = f;
  f[12] = b;
  f[13] = c;
  var g:int =
    js_sys_wbg_generated_Function_impl_wasm_bindgen_convert_IntoWasmAbi_for_js_sys_Function_into_abi_h68(
      b);
  f[16] = g;
  var h:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_wasm_bindgen_JsValue_into_abi_h_2(
      c);
  f[17] = h;
  var i:int =
    js_sys_Function_call0_wbg_call_89558c3e96703ca1_h880e42c5f49a4da1(g, h);
  f[18] = i;
  var j:int = 24;
  var k:int = f + j;
  wasm_bindgen_rt_take_last_exception_h53df007034b9d426(k);
  var l:int = f[7];
  var m:int = f[6];
  var n:int = 16;
  var o:int = f + n;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hc42e3993ac8cc40e(
    o,
    m,
    l);
  var p:int = f[4];
  var q:int = f[5];
  f[11] = q;
  f[10] = p;
  var r:int = f[10];
  br_table[B_d, B_c, ..B_d](r)
  label B_d:
  s =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      i);
  goto B_b;
  label B_c:
  var t:int = f[11];
  f[19] = t;
  var u:int = 8;
  var v:int = f + u;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_5(
    v,
    t);
  var w:int = f[2];
  var x:int = f[3];
  f[9] = x;
  f[8] = w;
  goto B_a;
  label B_b:
  f[9] = s;
  var y:int = 0;
  f[8] = y;
  label B_a:
  var z:int = f[8];
  var aa:int = f[9];
  a.b = aa;
  a.a = z;
  var ba:int = 80;
  var ca:int = f + ba;
  g_a = ca;
}

function alloc_raw_vec_RawVec_T_A_into_box_h85fc487abe382900(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 80;
  var g:int_ptr = e - f;
  g_a = g;
  g[8] = b;
  g[9] = c;
  g[11] = d;
  g[16] = b;
  g[17] = c;
  g[14] = b;
  g[15] = c;
  var h:int = g[14];
  var i:int = g[15];
  g[7] = i;
  g[6] = h;
  var j:int = 24;
  var k:int = g + j;
  var l:int = k;
  g[19] = l;
  var m:int = 24;
  var n:int = g + m;
  var o:int = n;
  var p:int = alloc_raw_vec_RawVec_T_A_ptr_hdcb939d847f89486(o);
  var q:int = 16;
  var r:int = g + q;
  core_slice_raw_from_raw_parts_mut_h6e22ba9bb4dba110(r, p, d);
  var s:int = g[5];
  var t:int = g[4];
  g[12] = t;
  g[13] = s;
  var u:int = 24;
  var v:int = g + u;
  var w:int = v;
  g[18] = w;
  var x:int = 24;
  var y:int = g + x;
  var z:int = y;
  core_ptr_read_h61084485bfebe2e5(z);
  var aa:int = 8;
  var ba:int = g + aa;
  alloc_boxed_Box_T_A_from_raw_in_h70d522065ac68dd1(ba, t, s);
  var ca:int = g[3];
  var da:int = g[2];
  a.b = ca;
  a.a = da;
  var ea:int = 80;
  var fa:int = g + ea;
  g_a = fa;
}

function alloc_raw_vec_RawVec_T_A_into_box_h8f4008defedba773(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 80;
  var g:int_ptr = e - f;
  g_a = g;
  g[8] = b;
  g[9] = c;
  g[11] = d;
  g[16] = b;
  g[17] = c;
  g[14] = b;
  g[15] = c;
  var h:int = g[14];
  var i:int = g[15];
  g[7] = i;
  g[6] = h;
  var j:int = 24;
  var k:int = g + j;
  var l:int = k;
  g[19] = l;
  var m:int = 24;
  var n:int = g + m;
  var o:int = n;
  var p:int = alloc_raw_vec_RawVec_T_A_ptr_h39df9be9b3c19184(o);
  var q:int = 16;
  var r:int = g + q;
  core_slice_raw_from_raw_parts_mut_he933a103c51e3842(r, p, d);
  var s:int = g[5];
  var t:int = g[4];
  g[12] = t;
  g[13] = s;
  var u:int = 24;
  var v:int = g + u;
  var w:int = v;
  g[18] = w;
  var x:int = 24;
  var y:int = g + x;
  var z:int = y;
  core_ptr_read_h61084485bfebe2e5(z);
  var aa:int = 8;
  var ba:int = g + aa;
  alloc_boxed_Box_T_A_from_raw_in_h96b2fa024797528c(ba, t, s);
  var ca:int = g[3];
  var da:int = g[2];
  a.b = ca;
  a.a = da;
  var ea:int = 80;
  var fa:int = g + ea;
  g_a = fa;
}

function alloc_raw_vec_RawVec_T_A_into_box_hfc2cc8db4d42e79e(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 80;
  var g:int_ptr = e - f;
  g_a = g;
  g[8] = b;
  g[9] = c;
  g[11] = d;
  g[16] = b;
  g[17] = c;
  g[14] = b;
  g[15] = c;
  var h:int = g[14];
  var i:int = g[15];
  g[7] = i;
  g[6] = h;
  var j:int = 24;
  var k:int = g + j;
  var l:int = k;
  g[19] = l;
  var m:int = 24;
  var n:int = g + m;
  var o:int = n;
  var p:int = alloc_raw_vec_RawVec_T_A_ptr_hdcb939d847f89486(o);
  var q:int = 16;
  var r:int = g + q;
  core_slice_raw_from_raw_parts_mut_hd0fb5c1236e0cb3e(r, p, d);
  var s:int = g[5];
  var t:int = g[4];
  g[12] = t;
  g[13] = s;
  var u:int = 24;
  var v:int = g + u;
  var w:int = v;
  g[18] = w;
  var x:int = 24;
  var y:int = g + x;
  var z:int = y;
  core_ptr_read_h8b1d2132530ddc7f(z);
  var aa:int = 8;
  var ba:int = g + aa;
  alloc_boxed_Box_T_A_from_raw_in_h657815d6ce341b24(ba, t, s);
  var ca:int = g[3];
  var da:int = g[2];
  a.b = ca;
  a.a = da;
  var ea:int = 80;
  var fa:int = g + ea;
  g_a = fa;
}

function core_num_impl_usize_checked_mul_hdbae97257fa4766c(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 64;
  var f:int = d - e;
  f[4]:int = b;
  f[5]:int = c;
  f[10]:int = b;
  f[11]:int = c;
  var y:long = i64_extend_i32_u(c);
  var z:long = i64_extend_i32_u(b);
  var aa:long = z * y;
  var ba:long = 32L;
  var ca:long = aa >> ba;
  var g:int = i32_wrap_i64(ca);
  var h:int = 0;
  var i:int = g != h;
  f[12]:int = aa;
  f[52]:byte = i;
  var j:int = f[12]:int;
  var k:int = f[52]:ubyte;
  f[14]:int = j;
  f[63]:byte = k;
  f[8]:int = j;
  f[36]:byte = k;
  var l:int = f[8]:int;
  var m:int = f[36]:ubyte;
  f[6]:int = l;
  var n:int = 1;
  var o:int = m & n;
  f[30]:byte = o;
  var p:int = 1;
  var q:int = m & p;
  f[31]:byte = q;
  var r:int = f[31]:ubyte;
  var s:int = 1;
  var t:int = r & s;
  if (t) goto B_b;
  f[3]:int = l;
  var u:int = 1;
  f[2]:int = u;
  goto B_a;
  label B_b:
  var v:int = 0;
  f[2]:int = v;
  label B_a:
  var w:int = f[2]:int;
  var x:int = f[3]:int;
  a.b = x;
  a.a = w;
}

function core_num_impl_usize_checked_mul_h1e543a6f8e7453f4(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 64;
  var f:int = d - e;
  f[4]:int = b;
  f[5]:int = c;
  f[10]:int = b;
  f[11]:int = c;
  var y:long = i64_extend_i32_u(c);
  var z:long = i64_extend_i32_u(b);
  var aa:long = z * y;
  var ba:long = 32L;
  var ca:long = aa >> ba;
  var g:int = i32_wrap_i64(ca);
  var h:int = 0;
  var i:int = g != h;
  f[12]:int = aa;
  f[52]:byte = i;
  var j:int = f[12]:int;
  var k:int = f[52]:ubyte;
  f[14]:int = j;
  f[63]:byte = k;
  f[8]:int = j;
  f[36]:byte = k;
  var l:int = f[8]:int;
  var m:int = f[36]:ubyte;
  f[6]:int = l;
  var n:int = 1;
  var o:int = m & n;
  f[30]:byte = o;
  var p:int = 1;
  var q:int = m & p;
  f[31]:byte = q;
  var r:int = f[31]:ubyte;
  var s:int = 1;
  var t:int = r & s;
  if (t) goto B_b;
  f[3]:int = l;
  var u:int = 1;
  f[2]:int = u;
  goto B_a;
  label B_b:
  var v:int = 0;
  f[2]:int = v;
  label B_a:
  var w:int = f[2]:int;
  var x:int = f[3]:int;
  a.b = x;
  a.a = w;
}

function alloc_alloc_box_free_hb5496ca0259f563f(a:int, b:int) {
  var c:int = g_a;
  var d:int = 64;
  var e:int_ptr = c - d;
  g_a = e;
  e[6] = a;
  e[7] = b;
  var f:int = 16;
  var g:int = e + f;
  var h:int = 24;
  var i:int = e + h;
  core_ptr_unique_Unique_T_as_ref_hb259cfc64fdb0bd0(g, i);
  var j:int = e[5];
  e[4];
  var k:int = 0;
  var l:int = j << k;
  e[10] = l;
  var m:int = e[10];
  e[11] = m;
  var n:int = 8;
  var o:int = e + n;
  var p:int = 24;
  var q:int = e + p;
  core_ptr_unique_Unique_T_as_ref_hb259cfc64fdb0bd0(o, q);
  e[3];
  e[2];
  var r:int = 1;
  e[12] = r;
  var s:int = e[12];
  e[13] = s;
  core_alloc_layout_Layout_from_size_align_unchecked_h7446fee2b95b05cf(
    e,
    m,
    s);
  var t:int = e[1];
  var u:int = e[0];
  e[14] = u;
  e[15] = t;
  var v:int = e[6];
  var w:int = e[7];
  var x:int = core_ptr_unique_Unique_T_cast_hfb39abf4f56345f7(v, w);
  var y:int = T_as_core_convert_Into_U_into_he220193fffbba529(x);
  var z:int = 32;
  var aa:int = e + z;
  var ba:int = aa;
  alloc_alloc_Global_as_core_alloc_Allocator_deallocate_h00f6130e6d04c4aa(
    ba,
    y,
    u,
    t);
  var ca:int = 64;
  var da:int = e + ca;
  g_a = da;
}

function core_fmt_Arguments_new_v1_hf122ca2ab015a22f(a:{ a:int, b:int, c:int, d:int, e:int, f:int }, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 32;
  var h:int = f - g;
  g_a = h;
  h[4]:int = b;
  h[5]:int = c;
  h[6]:int = d;
  h[7]:int = e;
  var i:int = c;
  var j:int = e;
  var k:int = i < j;
  var l:int = 1;
  var m:int = k & l;
  if (m) goto B_b;
  var n:int = 1;
  var o:int = e + n;
  var p:int = c;
  var q:int = o;
  var r:int = p > q;
  var s:int = 1;
  var t:int = r & s;
  h[7]:byte = t;
  goto B_a;
  label B_b:
  var u:int = 1;
  h[7]:byte = u;
  label B_a:
  var v:int = h[7]:ubyte;
  var w:int = 1;
  var x:int = v & w;
  if (x) goto B_c;
  var y:int = 0;
  h[2]:int = y;
  a.a = b;
  a.b = c;
  var z:int = h[2]:int;
  var aa:int = h[3]:int;
  a.c = z;
  a.d = aa;
  a.e = d;
  a.f = e;
  var ba:int = 32;
  var ca:int = h + ba;
  g_a = ca;
  return ;
  label B_c:
  var da:int = 1052068;
  var ea:int = da;
  var fa:int = 12;
  var ga:int = 1052156;
  var ha:int = ga;
  core_panicking_panic_hceae0c79b0247f98(ea, fa, ha);
  unreachable;
}

function core_slice_iter_Chunks_T_as_core_iter_iterator_Iterator_next_h20719db59d8af8b6(a:{ a:int, b:int }, b:{ a:int, b:int, c:int }) {
  var m:int;
  var c:int = g_a;
  var d:int = 48;
  var e:{ a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int, i:int, j:int, k:int, l:int } =
    c - d;
  g_a = e;
  e.g = b;
  var f:int = b.a;
  var g:int = b.b;
  var h:int = core_slice_impl_T_is_empty_h553b40ca32589462(f, g);
  var i:int = 1;
  var j:int = h & i;
  if (j) goto B_c;
  var k:int = b.b;
  var l:int = b.c;
  m = core_cmp_min_h3985419e1eacf37e(k, l);
  e.h = m;
  goto B_b;
  label B_c:
  var n:int = 0;
  e.a = n;
  goto B_a;
  label B_b:
  var o:int = b.a;
  var p:int = b.b;
  var q:int = 8;
  var r:int = e + q;
  var s:int = r;
  core_slice_impl_T_split_at_h335a77faeae6bf0a(s, o, p, m);
  var t:int = e.c;
  var u:int = e.d;
  e.i = t;
  e.j = u;
  var v:int = e.e;
  var w:int = e.f;
  e.k = v;
  e.l = w;
  b.a = v;
  b.b = w;
  e.a = t;
  e.b = u;
  label B_a:
  var x:int = e.a;
  var y:int = e.b;
  a.b = y;
  a.a = x;
  var z:int = 48;
  var aa:int = e + z;
  g_a = aa;
}

function wasm_bindgen_convert_closures_invoke3_mut_h70d44c9569ef230c(a:int, b:int, c:int, d:int, e:int):int {
  var f:int = g_a;
  var g:int = 80;
  var h:int_ptr = f - g;
  g_a = h;
  h[7] = a;
  h[8] = b;
  h[9] = c;
  h[10] = d;
  h[11] = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[2] = a;
  h[3] = b;
  var l:int = h[2];
  var m:int = h[3];
  h[12] = l;
  h[13] = m;
  var n:int = h[12];
  var o:int_ptr = h[13];
  h[14] = n;
  h[15] = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      c);
  h[16] = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[17] = q;
  var r:int =
    js_sys_wbg_generated_Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Array_from_abi_hcf75a4a2(
      e);
  h[18] = r;
  h[4] = p;
  h[5] = q;
  h[6] = r;
  var s:int = o[4];
  var t:int = h[4];
  var u:int = h[5];
  var v:int = h[6];
  var w:int = call_indirect(n, t, u, v, s);
  h[19] = w;
  var x:int =
    T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_hf35f06d0d8e0b24d(
      w);
  var y:int = 80;
  var z:int = h + y;
  g_a = z;
  return x;
}

function core_slice_iter_Iter_T_new_ha86f4167517dbb2d(a:{ a:int, b:int }, b:int, c:int) {
  var j:int;
  var d:int = g_a;
  var e:int = 80;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = core_slice_impl_T_as_ptr_hb86620dd5b00222e(b, c);
  f[9] = g;
  core_ptr_ptr_impl_T_is_null_h87240b65f40d0c92(g);
  var h:int = 4;
  if (h) goto B_c;
  f[15] = g;
  f[16] = c;
  f[17] = g;
  f[18] = c;
  var i:int = g + c;
  f[19] = i;
  j = f[19];
  goto B_b;
  label B_c:
  f[10] = g;
  f[11] = c;
  f[12] = g;
  f[13] = c;
  var k:int = 2;
  var l:int = c << k;
  var m:int = g + l;
  f[14] = m;
  var n:int = f[14];
  f[5] = n;
  goto B_a;
  label B_b:
  f[5] = j;
  label B_a:
  var o:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h5f68ca722f50596c(g);
  var p:int = f[5];
  f[2] = o;
  f[3] = p;
  var q:int = f[2];
  var r:int = f[3];
  a.b = r;
  a.a = q;
  var s:int = 80;
  var t:int = f + s;
  g_a = t;
}

function wasm_bindgen_convert_closures_invoke3_mut_h1a0384548346aa20(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int = f - g;
  g_a = h;
  h[5]:int = a;
  h[6]:int = b;
  h[7]:int = c;
  h[8]:int = d;
  h[9]:int = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0]:int = a;
  h[1]:int = b;
  var l:int = h[0]:int;
  var m:int = h[1]:int;
  h[12]:int = l;
  h[13]:int = m;
  var n:int = h[12]:int;
  var o:int_ptr = h[13]:int;
  h[14]:int = n;
  h[15]:int = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_i16_from_abi_hec04342c66e45330(
      c);
  h[35]:short = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[18]:int = q;
  var r:int =
    js_sys_wbg_generated_Int16Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Int16Array_from_abi(
      e);
  h[19]:int = r;
  h[6]:short = p;
  h[2]:int = q;
  h[4]:int = r;
  var s:int = o[4];
  var t:int = h[6]:ushort;
  var u:int = h[2]:int;
  var v:int = h[4]:int;
  call_indirect(n, t, u, v, s);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var w:int = 80;
  var x:int = h + w;
  g_a = x;
}

function wasm_bindgen_convert_closures_invoke3_mut_h39ac29ea8a04e829(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int = f - g;
  g_a = h;
  h[5]:int = a;
  h[6]:int = b;
  h[7]:int = c;
  h[8]:int = d;
  h[9]:int = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0]:int = a;
  h[1]:int = b;
  var l:int = h[0]:int;
  var m:int = h[1]:int;
  h[12]:int = l;
  h[13]:int = m;
  var n:int = h[12]:int;
  var o:int_ptr = h[13]:int;
  h[14]:int = n;
  h[15]:int = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_i8_from_abi_h8ee4ccb93c323a17(
      c);
  h[71]:byte = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[18]:int = q;
  var r:int =
    js_sys_wbg_generated_Int8Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Int8Array_from_abi_h(
      e);
  h[19]:int = r;
  h[12]:byte = p;
  h[2]:int = q;
  h[4]:int = r;
  var s:int = o[4];
  var t:int = h[12]:ubyte;
  var u:int = h[2]:int;
  var v:int = h[4]:int;
  call_indirect(n, t, u, v, s);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var w:int = 80;
  var x:int = h + w;
  g_a = x;
}

function wasm_bindgen_convert_closures_invoke3_mut_h3d13fefa377b88e1(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int = f - g;
  g_a = h;
  h[5]:int = a;
  h[6]:int = b;
  h[7]:int = c;
  h[8]:int = d;
  h[9]:int = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0]:int = a;
  h[1]:int = b;
  var l:int = h[0]:int;
  var m:int = h[1]:int;
  h[12]:int = l;
  h[13]:int = m;
  var n:int = h[12]:int;
  var o:int_ptr = h[13]:int;
  h[14]:int = n;
  h[15]:int = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u16_from_abi_hfd5853b261350e76(
      c);
  h[35]:short = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[18]:int = q;
  var r:int =
    js_sys_wbg_generated_Uint16Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Uint16Array_from_a(
      e);
  h[19]:int = r;
  h[6]:short = p;
  h[2]:int = q;
  h[4]:int = r;
  var s:int = o[4];
  var t:int = h[6]:ushort;
  var u:int = h[2]:int;
  var v:int = h[4]:int;
  call_indirect(n, t, u, v, s);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var w:int = 80;
  var x:int = h + w;
  g_a = x;
}

function wasm_bindgen_convert_closures_invoke3_mut_h52e1226b6ec8c688(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int_ptr = f - g;
  g_a = h;
  h[5] = a;
  h[6] = b;
  h[7] = c;
  h[8] = d;
  h[9] = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0] = a;
  h[1] = b;
  var l:int = h[0];
  var m:int = h[1];
  h[12] = l;
  h[13] = m;
  var n:int = h[12];
  var o:int_ptr = h[13];
  h[14] = n;
  h[15] = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      c);
  h[17] = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      d);
  h[18] = q;
  var r:int =
    js_sys_wbg_generated_Set_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Set_from_abi_hef0b4a038e5b(
      e);
  h[19] = r;
  h[2] = p;
  h[3] = q;
  h[4] = r;
  var s:int = o[4];
  var t:int = h[2];
  var u:int = h[3];
  var v:int = h[4];
  call_indirect(n, t, u, v, s);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var w:int = 80;
  var x:int = h + w;
  g_a = x;
}

function wasm_bindgen_convert_closures_invoke3_mut_h557d9d7c92c7d150(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int_ptr = f - g;
  g_a = h;
  h[5] = a;
  h[6] = b;
  h[7] = c;
  h[8] = d;
  h[9] = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0] = a;
  h[1] = b;
  var l:int = h[0];
  var m:int = h[1];
  h[12] = l;
  h[13] = m;
  var n:int = h[12];
  var o:int_ptr = h[13];
  h[14] = n;
  h[15] = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_i32_from_abi_h7c0a0e26952dda74(
      c);
  h[17] = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[18] = q;
  var r:int =
    js_sys_wbg_generated_Int32Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Int32Array_from_abi(
      e);
  h[19] = r;
  h[2] = p;
  h[3] = q;
  h[4] = r;
  var s:int = o[4];
  var t:int = h[2];
  var u:int = h[3];
  var v:int = h[4];
  call_indirect(n, t, u, v, s);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var w:int = 80;
  var x:int = h + w;
  g_a = x;
}

function wasm_bindgen_convert_closures_invoke3_mut_h7ff32b5757b14df7(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int_ptr = f - g;
  g_a = h;
  h[5] = a;
  h[6] = b;
  h[7] = c;
  h[8] = d;
  h[9] = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0] = a;
  h[1] = b;
  var l:int = h[0];
  var m:int = h[1];
  h[12] = l;
  h[13] = m;
  var n:int = h[12];
  var o:int_ptr = h[13];
  h[14] = n;
  h[15] = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      c);
  h[17] = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[18] = q;
  var r:int =
    js_sys_wbg_generated_Uint32Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Uint32Array_from_a(
      e);
  h[19] = r;
  h[2] = p;
  h[3] = q;
  h[4] = r;
  var s:int = o[4];
  var t:int = h[2];
  var u:int = h[3];
  var v:int = h[4];
  call_indirect(n, t, u, v, s);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var w:int = 80;
  var x:int = h + w;
  g_a = x;
}

function wasm_bindgen_convert_closures_invoke3_mut_h803d3bc099825b9e(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int = f - g;
  g_a = h;
  h[5]:int = a;
  h[6]:int = b;
  h[7]:int = c;
  h[8]:int = d;
  h[9]:int = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0]:int = a;
  h[1]:int = b;
  var l:int = h[0]:int;
  var m:int = h[1]:int;
  h[12]:int = l;
  h[13]:int = m;
  var n:int = h[12]:int;
  var o:int_ptr = h[13]:int;
  h[14]:int = n;
  h[15]:int = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u8_from_abi_h781c131b1ad627ac(
      c);
  h[71]:byte = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[18]:int = q;
  var r:int =
    js_sys_wbg_generated_Uint8ClampedArray_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Uint8Clamped(
      e);
  h[19]:int = r;
  h[12]:byte = p;
  h[2]:int = q;
  h[4]:int = r;
  var s:int = o[4];
  var t:int = h[12]:ubyte;
  var u:int = h[2]:int;
  var v:int = h[4]:int;
  call_indirect(n, t, u, v, s);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var w:int = 80;
  var x:int = h + w;
  g_a = x;
}

function wasm_bindgen_convert_closures_invoke3_mut_h9a5718310d180dae(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int = f - g;
  g_a = h;
  h[5]:int = a;
  h[6]:int = b;
  h[7]:int = c;
  h[8]:int = d;
  h[9]:int = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0]:int = a;
  h[1]:int = b;
  var l:int = h[0]:int;
  var m:int = h[1]:int;
  h[12]:int = l;
  h[13]:int = m;
  var n:int = h[12]:int;
  var o:int_ptr = h[13]:int;
  h[14]:int = n;
  h[15]:int = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u8_from_abi_h781c131b1ad627ac(
      c);
  h[71]:byte = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[18]:int = q;
  var r:int =
    js_sys_wbg_generated_Uint8Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Uint8Array_from_abi(
      e);
  h[19]:int = r;
  h[12]:byte = p;
  h[2]:int = q;
  h[4]:int = r;
  var s:int = o[4];
  var t:int = h[12]:ubyte;
  var u:int = h[2]:int;
  var v:int = h[4]:int;
  call_indirect(n, t, u, v, s);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var w:int = 80;
  var x:int = h + w;
  g_a = x;
}

function wasm_bindgen_convert_closures_invoke3_mut_hcdf9c4a6d524ea14(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int_ptr = f - g;
  g_a = h;
  h[5] = a;
  h[6] = b;
  h[7] = c;
  h[8] = d;
  h[9] = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0] = a;
  h[1] = b;
  var l:int = h[0];
  var m:int = h[1];
  h[12] = l;
  h[13] = m;
  var n:int = h[12];
  var o:int_ptr = h[13];
  h[14] = n;
  h[15] = o;
  var p:int =
    js_sys_wbg_generated_BigInt_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_BigInt_from_abi_hc20117(
      c);
  h[17] = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[18] = q;
  var r:int =
    js_sys_wbg_generated_BigUint64Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_BigUint64Array_(
      e);
  h[19] = r;
  h[2] = p;
  h[3] = q;
  h[4] = r;
  var s:int = o[4];
  var t:int = h[2];
  var u:int = h[3];
  var v:int = h[4];
  call_indirect(n, t, u, v, s);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var w:int = 80;
  var x:int = h + w;
  g_a = x;
}

function wasm_bindgen_convert_closures_invoke3_mut_hd3880e329588c435(a:int, b:int, c:float, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int = f - g;
  g_a = h;
  h[5]:int = a;
  h[6]:int = b;
  h[7]:float = c;
  h[8]:int = d;
  h[9]:int = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0]:int = a;
  h[1]:int = b;
  var l:int = h[0]:int;
  var m:int = h[1]:int;
  h[12]:int = l;
  h[13]:int = m;
  var n:int = h[12]:int;
  var o:int_ptr = h[13]:int;
  h[14]:int = n;
  h[15]:int = o;
  var w:float =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_f32_from_abi_h0d75a5cbb9f520ed(
      c);
  h[17]:float = w;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[18]:int = p;
  var q:int =
    js_sys_wbg_generated_Float32Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Float32Array_from(
      e);
  h[19]:int = q;
  h[2]:float = w;
  h[3]:int = p;
  h[4]:int = q;
  var r:int = o[4];
  var x:float = h[2]:float;
  var s:int = h[3]:int;
  var t:int = h[4]:int;
  call_indirect(n, x, s, t, r);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var u:int = 80;
  var v:int = h + u;
  g_a = v;
}

function wasm_bindgen_convert_closures_invoke3_mut_hdadace8f1d971680(a:int, b:int, c:double, d:int, e:int) {
  var f:int = g_a;
  var g:int = 96;
  var h:int = f - g;
  g_a = h;
  h[8]:int = a;
  h[9]:int = b;
  h[5]:double = c;
  h[12]:int = d;
  h[13]:int = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[2]:int = a;
  h[3]:int = b;
  var l:int = h[2]:int;
  var m:int = h[3]:int;
  h[16]:int = l;
  h[17]:int = m;
  var n:int = h[16]:int;
  var o:int_ptr = h[17]:int;
  h[18]:int = n;
  h[19]:int = o;
  var w:double =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_f64_from_abi_hd311589fde1f1f4c(
      c);
  h[10]:double = w;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[22]:int = p;
  var q:int =
    js_sys_wbg_generated_Float64Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Float64Array_from(
      e);
  h[23]:int = q;
  h[2]:double = w;
  h[6]:int = p;
  h[7]:int = q;
  var r:int = o[4];
  var x:double = h[2]:double;
  var s:int = h[6]:int;
  var t:int = h[7]:int;
  call_indirect(n, x, s, t, r);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var u:int = 96;
  var v:int = h + u;
  g_a = v;
}

function wasm_bindgen_convert_closures_invoke3_mut_hdfb7c45522811e84(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int_ptr = f - g;
  g_a = h;
  h[5] = a;
  h[6] = b;
  h[7] = c;
  h[8] = d;
  h[9] = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0] = a;
  h[1] = b;
  var l:int = h[0];
  var m:int = h[1];
  h[12] = l;
  h[13] = m;
  var n:int = h[12];
  var o:int_ptr = h[13];
  h[14] = n;
  h[15] = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      c);
  h[17] = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[18] = q;
  var r:int =
    js_sys_wbg_generated_Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Array_from_abi_hcf75a4a2(
      e);
  h[19] = r;
  h[2] = p;
  h[3] = q;
  h[4] = r;
  var s:int = o[4];
  var t:int = h[2];
  var u:int = h[3];
  var v:int = h[4];
  call_indirect(n, t, u, v, s);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var w:int = 80;
  var x:int = h + w;
  g_a = x;
}

function wasm_bindgen_convert_closures_invoke3_mut_he1ad70fa8232c78f(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 80;
  var h:int_ptr = f - g;
  g_a = h;
  h[5] = a;
  h[6] = b;
  h[7] = c;
  h[8] = d;
  h[9] = e;
  if (a) goto B_a;
  var i:int = 1051756;
  var j:int = i;
  var k:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(j, k);
  unreachable;
  label B_a:
  h[0] = a;
  h[1] = b;
  var l:int = h[0];
  var m:int = h[1];
  h[12] = l;
  h[13] = m;
  var n:int = h[12];
  var o:int_ptr = h[13];
  h[14] = n;
  h[15] = o;
  var p:int =
    js_sys_wbg_generated_BigInt_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_BigInt_from_abi_hc20117(
      c);
  h[17] = p;
  var q:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(
      d);
  h[18] = q;
  var r:int =
    js_sys_wbg_generated_BigInt64Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_BigInt64Array_fr(
      e);
  h[19] = r;
  h[2] = p;
  h[3] = q;
  h[4] = r;
  var s:int = o[4];
  var t:int = h[2];
  var u:int = h[3];
  var v:int = h[4];
  call_indirect(n, t, u, v, s);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var w:int = 80;
  var x:int = h + w;
  g_a = x;
}

function core_slice_impl_T_chunks_h903fd931d63b0a1f(a:int, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 64;
  var g:int = e - f;
  g_a = g;
  g[1]:int = d;
  g[12]:int = b;
  g[13]:int = c;
  var h:int = 4;
  var i:int = g + h;
  var j:int = i;
  g[2]:int = j;
  var k:int = 1049172;
  var l:int = k;
  g[3]:int = l;
  var m:int_ptr = g[2]:int;
  g[14]:int = m;
  var n:int_ptr = g[3]:int;
  g[15]:int = n;
  var o:int = m[0];
  var p:int = n[0];
  var q:int = o;
  var r:int = p;
  var s:int = q == r;
  var t:int = 1;
  var u:int = s & t;
  if (u) goto B_b;
  var v:int = g[1]:int;
  core_slice_iter_Chunks_T_new_h8221750e2cc614b4(a, b, c, v);
  goto B_a;
  label B_b:
  var w:int = 1;
  g[23]:byte = w;
  var x:int = 0;
  g[6]:int = x;
  var y:int = 1;
  var z:int = 24;
  var aa:int = g + z;
  var ba:int = aa;
  var ca:int = 1049256;
  var da:int = ca;
  core_panicking_assert_failed_h6d7132e872e7c5a7(y, m, n, ba, da);
  unreachable;
  label B_a:
  var ea:int = 64;
  var fa:int = g + ea;
  g_a = fa;
}

function js_sys_global_get_global_object_Global_get_self_hc2d994b4110905b5(a:{ a:int, b:int }) {
  var o:int;
  var b:int = g_a;
  var c:int = 64;
  var d:int_ptr = b - c;
  g_a = d;
  var e:int =
    js_sys_global_get_global_object_Global_get_self_wbg_self_e23d74ae45fb17d1_hf09e6b542e39556b();
  d[14] = e;
  var f:int = 24;
  var g:int = d + f;
  wasm_bindgen_rt_take_last_exception_h53df007034b9d426(g);
  var h:int = d[7];
  var i:int = d[6];
  var j:int = 16;
  var k:int = d + j;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hc42e3993ac8cc40e(
    k,
    i,
    h);
  var l:int = d[4];
  var m:int = d[5];
  d[11] = m;
  d[10] = l;
  var n:int = d[10];
  br_table[B_d, B_c, ..B_d](n)
  label B_d:
  o =
    js_sys_wbg_generated_Object_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Object_from_abi_hcddb74(
      e);
  goto B_b;
  label B_c:
  var p:int = d[11];
  d[15] = p;
  var q:int = 8;
  var r:int = d + q;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_4(
    r,
    p);
  var s:int = d[2];
  var t:int = d[3];
  d[9] = t;
  d[8] = s;
  goto B_a;
  label B_b:
  d[9] = o;
  var u:int = 0;
  d[8] = u;
  label B_a:
  var v:int = d[8];
  var w:int = d[9];
  a.b = w;
  a.a = v;
  var x:int = 64;
  var y:int = d + x;
  g_a = y;
}

function js_sys_global_get_global_object_Global_get_window_h04507ad37443f1d3(a:{ a:int, b:int }) {
  var o:int;
  var b:int = g_a;
  var c:int = 64;
  var d:int_ptr = b - c;
  g_a = d;
  var e:int =
    js_sys_global_get_global_object_Global_get_window_wbg_window_b4be7f48b24ac56e_h870102b02733e0cf();
  d[14] = e;
  var f:int = 24;
  var g:int = d + f;
  wasm_bindgen_rt_take_last_exception_h53df007034b9d426(g);
  var h:int = d[7];
  var i:int = d[6];
  var j:int = 16;
  var k:int = d + j;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hc42e3993ac8cc40e(
    k,
    i,
    h);
  var l:int = d[4];
  var m:int = d[5];
  d[11] = m;
  d[10] = l;
  var n:int = d[10];
  br_table[B_d, B_c, ..B_d](n)
  label B_d:
  o =
    js_sys_wbg_generated_Object_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Object_from_abi_hcddb74(
      e);
  goto B_b;
  label B_c:
  var p:int = d[11];
  d[15] = p;
  var q:int = 8;
  var r:int = d + q;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_4(
    r,
    p);
  var s:int = d[2];
  var t:int = d[3];
  d[9] = t;
  d[8] = s;
  goto B_a;
  label B_b:
  d[9] = o;
  var u:int = 0;
  d[8] = u;
  label B_a:
  var v:int = d[8];
  var w:int = d[9];
  a.b = w;
  a.a = v;
  var x:int = 64;
  var y:int = d + x;
  g_a = y;
}

function js_sys_global_get_global_object_Global_get_global_this_hd3cb8e8a9533af98(a:{ a:int, b:int }) {
  var o:int;
  var b:int = g_a;
  var c:int = 64;
  var d:int_ptr = b - c;
  g_a = d;
  var e:int =
    js_sys_global_get_global_object_Global_get_global_this_wbg_globalThis_d61b1f48a57191ae_h426f02238436();
  d[14] = e;
  var f:int = 24;
  var g:int = d + f;
  wasm_bindgen_rt_take_last_exception_h53df007034b9d426(g);
  var h:int = d[7];
  var i:int = d[6];
  var j:int = 16;
  var k:int = d + j;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hc42e3993ac8cc40e(
    k,
    i,
    h);
  var l:int = d[4];
  var m:int = d[5];
  d[11] = m;
  d[10] = l;
  var n:int = d[10];
  br_table[B_d, B_c, ..B_d](n)
  label B_d:
  o =
    js_sys_wbg_generated_Object_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Object_from_abi_hcddb74(
      e);
  goto B_b;
  label B_c:
  var p:int = d[11];
  d[15] = p;
  var q:int = 8;
  var r:int = d + q;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_4(
    r,
    p);
  var s:int = d[2];
  var t:int = d[3];
  d[9] = t;
  d[8] = s;
  goto B_a;
  label B_b:
  d[9] = o;
  var u:int = 0;
  d[8] = u;
  label B_a:
  var v:int = d[8];
  var w:int = d[9];
  a.b = w;
  a.a = v;
  var x:int = 64;
  var y:int = d + x;
  g_a = y;
}

function js_sys_global_get_global_object_Global_get_global_hcd6aaa238adca158(a:{ a:int, b:int }) {
  var o:int;
  var b:int = g_a;
  var c:int = 64;
  var d:int_ptr = b - c;
  g_a = d;
  var e:int =
    js_sys_global_get_global_object_Global_get_global_wbg_global_e7669da72fd7f239_h45aa136fe6efc352();
  d[14] = e;
  var f:int = 24;
  var g:int = d + f;
  wasm_bindgen_rt_take_last_exception_h53df007034b9d426(g);
  var h:int = d[7];
  var i:int = d[6];
  var j:int = 16;
  var k:int = d + j;
  core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hc42e3993ac8cc40e(
    k,
    i,
    h);
  var l:int = d[4];
  var m:int = d[5];
  d[11] = m;
  d[10] = l;
  var n:int = d[10];
  br_table[B_d, B_c, ..B_d](n)
  label B_d:
  o =
    js_sys_wbg_generated_Object_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Object_from_abi_hcddb74(
      e);
  goto B_b;
  label B_c:
  var p:int = d[11];
  d[15] = p;
  var q:int = 8;
  var r:int = d + q;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_4(
    r,
    p);
  var s:int = d[2];
  var t:int = d[3];
  d[9] = t;
  d[8] = s;
  goto B_a;
  label B_b:
  d[9] = o;
  var u:int = 0;
  d[8] = u;
  label B_a:
  var v:int = d[8];
  var w:int = d[9];
  a.b = w;
  a.a = v;
  var x:int = 64;
  var y:int = d + x;
  g_a = y;
}

function core_num_impl_usize_checked_add_hf7e5797ba0069206(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 64;
  var f:int = d - e;
  f[4]:int = b;
  f[5]:int = c;
  f[10]:int = b;
  f[11]:int = c;
  var g:int = b + c;
  var h:int = g < b;
  f[12]:int = g;
  f[52]:byte = h;
  var i:int = f[12]:int;
  var j:int = f[52]:ubyte;
  f[14]:int = i;
  f[63]:byte = j;
  f[8]:int = i;
  f[36]:byte = j;
  var k:int = f[8]:int;
  var l:int = f[36]:ubyte;
  f[6]:int = k;
  var m:int = 1;
  var n:int = l & m;
  f[30]:byte = n;
  var o:int = 1;
  var p:int = l & o;
  f[31]:byte = p;
  var q:int = f[31]:ubyte;
  var r:int = 1;
  var s:int = q & r;
  if (s) goto B_b;
  f[3]:int = k;
  var t:int = 1;
  f[2]:int = t;
  goto B_a;
  label B_b:
  var u:int = 0;
  f[2]:int = u;
  label B_a:
  var v:int = f[2]:int;
  var w:int = f[3]:int;
  a.b = w;
  a.a = v;
}

function core_num_impl_usize_checked_add_he4defe1b23ead510(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 64;
  var f:int = d - e;
  f[4]:int = b;
  f[5]:int = c;
  f[10]:int = b;
  f[11]:int = c;
  var g:int = b + c;
  var h:int = g < b;
  f[12]:int = g;
  f[52]:byte = h;
  var i:int = f[12]:int;
  var j:int = f[52]:ubyte;
  f[14]:int = i;
  f[63]:byte = j;
  f[8]:int = i;
  f[36]:byte = j;
  var k:int = f[8]:int;
  var l:int = f[36]:ubyte;
  f[6]:int = k;
  var m:int = 1;
  var n:int = l & m;
  f[30]:byte = n;
  var o:int = 1;
  var p:int = l & o;
  f[31]:byte = p;
  var q:int = f[31]:ubyte;
  var r:int = 1;
  var s:int = q & r;
  if (s) goto B_b;
  f[3]:int = k;
  var t:int = 1;
  f[2]:int = t;
  goto B_a;
  label B_b:
  var u:int = 0;
  f[2]:int = u;
  label B_a:
  var v:int = f[2]:int;
  var w:int = f[3]:int;
  a.b = w;
  a.a = v;
}

export function wbindgen_exn_store(a:int) {
  var b:int = g_a;
  var c:int = 64;
  var d:int = b - c;
  g_a = d;
  d[13]:int = a;
  var e:int = 1054664;
  var f:int = e;
  d[2]:int = f;
  var g:int = 1053372;
  var h:int = g;
  d[3]:int = h;
  var i:int_ptr = d[2]:int;
  d[14]:int = i;
  var j:int = d[3]:int;
  d[15]:int = j;
  var k:int = i[0];
  var l:int = 0;
  var m:int = k;
  var n:int = l;
  var o:int = m == n;
  var p:int = -1;
  var q:int = o ^ p;
  var r:int = 1;
  var s:int = q & r;
  if (s) goto B_a;
  var t:int = 1;
  var u:int_ptr = 0;
  u[263666] = t;
  var v:int_ptr = 0;
  v[263667] = a;
  var w:int = 64;
  var x:int = d + w;
  g_a = x;
  return ;
  label B_a:
  var y:int = 0;
  d[23]:byte = y;
  var z:int = 0;
  d[6]:int = z;
  var aa:int = 0;
  var ba:int = 24;
  var ca:int = d + ba;
  var da:int = ca;
  var ea:int = 1053472;
  var fa:int = ea;
  core_panicking_assert_failed_h9fca70a8d7c6c74a(aa, i, j, da, fa);
  unreachable;
}

function core_slice_iter_Iter_T_new_h8cbedd25cf7dfe6a(a:{ a:int, b:int }, b:int, c:int) {
  var j:int;
  var d:int = g_a;
  var e:int = 80;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = core_slice_impl_T_as_ptr_hb4f316d84b9f4f66(b, c);
  f[9] = g;
  core_ptr_ptr_impl_T_is_null_he969adfdcf5f1f09(g);
  var h:int = 1;
  if (h) goto B_c;
  f[15] = g;
  f[16] = c;
  f[17] = g;
  f[18] = c;
  var i:int = g + c;
  f[19] = i;
  j = f[19];
  goto B_b;
  label B_c:
  f[10] = g;
  f[11] = c;
  f[12] = g;
  f[13] = c;
  var k:int = g + c;
  f[14] = k;
  var l:int = f[14];
  f[5] = l;
  goto B_a;
  label B_b:
  f[5] = j;
  label B_a:
  var m:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h46314b06c79b45ed(g);
  var n:int = f[5];
  f[2] = m;
  f[3] = n;
  var o:int = f[2];
  var p:int = f[3];
  a.b = p;
  a.a = o;
  var q:int = 80;
  var r:int = f + q;
  g_a = r;
}

function core_iter_adapters_map_Map_I_F_as_core_iter_iterator_Iterator_fold_h05d7295638b5c4af(a:long_ptr@4, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 64;
  var e:int = c - d;
  g_a = e;
  var f:int = 8;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var ha:long = a[0];
  h[0] = ha;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = a + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 40;
  var n:int = e + m;
  var o:long_ptr@4 = n;
  var ia:long = b[0];
  o[0] = ia;
  var p:int = 8;
  var q:int_ptr = o + p;
  var r:int_ptr = b + p;
  var s:int = r[0];
  q[0] = s;
  var t:int = 24;
  var u:int = e + t;
  var v:int = u;
  var w:int = 40;
  var x:int = e + w;
  var y:int = x;
  core_iter_adapters_map_map_fold_hc7d9d4e437ebfe94(v, y);
  var z:int = 8;
  var aa:int = e + z;
  var ba:int = aa;
  var ca:int = 24;
  var da:int = e + ca;
  var ea:int = da;
  core_iter_iterator_Iterator_fold_hfd133dd0528520c1(ba, ea);
  var fa:int = 64;
  var ga:int = e + fa;
  g_a = ga;
}

function core_result_Result_T_E_map_err_h4e67806147a045fe(a:{ a:int, b:int, c:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 48;
  var g:int = e - f;
  g_a = g;
  g[4]:int = b;
  g[5]:int = c;
  g[7]:int = d;
  var h:int = 0;
  g[27]:byte = h;
  var i:int = 1;
  g[27]:byte = i;
  var j:int = g[4]:int;
  var k:int = eqz(j);
  br_table[B_c, B_b, ..B_c](k)
  label B_c:
  var l:int = g[4]:int;
  var m:int = g[5]:int;
  g[10]:int = l;
  g[11]:int = m;
  a.b = l;
  a.c = m;
  var n:int = 0;
  a.a = n;
  goto B_a;
  label B_b:
  var o:int = 0;
  g[27]:byte = o;
  var p:int = 8;
  var q:int = g + p;
  alloc_raw_vec_RawVec_T_A_shrink_closure_h0087d5c6a2850fd2(q, d);
  var r:int = g[3]:int;
  var s:int = g[2]:int;
  a.b = s;
  a.c = r;
  var t:int = 1;
  a.a = t;
  label B_a:
  var u:int = g[27]:ubyte;
  var v:int = 1;
  var w:int = u & v;
  if (eqz(w)) goto B_d
  label B_d:
  var x:int = 48;
  var y:int = g + x;
  g_a = y;
}

function core_result_Result_T_E_map_err_h591587c29f933f45(a:{ a:int, b:int, c:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 48;
  var g:int = e - f;
  g_a = g;
  g[4]:int = b;
  g[5]:int = c;
  g[7]:int = d;
  var h:int = 0;
  g[27]:byte = h;
  var i:int = 1;
  g[27]:byte = i;
  var j:int = g[4]:int;
  var k:int = eqz(j);
  br_table[B_c, B_b, ..B_c](k)
  label B_c:
  var l:int = g[4]:int;
  var m:int = g[5]:int;
  g[10]:int = l;
  g[11]:int = m;
  a.b = l;
  a.c = m;
  var n:int = 0;
  a.a = n;
  goto B_a;
  label B_b:
  var o:int = 0;
  g[27]:byte = o;
  var p:int = 8;
  var q:int = g + p;
  alloc_raw_vec_RawVec_T_A_shrink_closure_h37540afccbefc556(q, d);
  var r:int = g[3]:int;
  var s:int = g[2]:int;
  a.b = s;
  a.c = r;
  var t:int = 1;
  a.a = t;
  label B_a:
  var u:int = g[27]:ubyte;
  var v:int = 1;
  var w:int = u & v;
  if (eqz(w)) goto B_d
  label B_d:
  var x:int = 48;
  var y:int = g + x;
  g_a = y;
}

function core_result_Result_T_E_map_err_hf1e73b123fde224d(a:{ a:int, b:int, c:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 48;
  var g:int = e - f;
  g_a = g;
  g[4]:int = b;
  g[5]:int = c;
  g[7]:int = d;
  var h:int = 0;
  g[27]:byte = h;
  var i:int = 1;
  g[27]:byte = i;
  var j:int = g[4]:int;
  var k:int = eqz(j);
  br_table[B_c, B_b, ..B_c](k)
  label B_c:
  var l:int = g[4]:int;
  var m:int = g[5]:int;
  g[10]:int = l;
  g[11]:int = m;
  a.b = l;
  a.c = m;
  var n:int = 0;
  a.a = n;
  goto B_a;
  label B_b:
  var o:int = 0;
  g[27]:byte = o;
  var p:int = 8;
  var q:int = g + p;
  alloc_raw_vec_RawVec_T_A_shrink_closure_h13d3d79147e666e2(q, d);
  var r:int = g[3]:int;
  var s:int = g[2]:int;
  a.b = s;
  a.c = r;
  var t:int = 1;
  a.a = t;
  label B_a:
  var u:int = g[27]:ubyte;
  var v:int = 1;
  var w:int = u & v;
  if (eqz(w)) goto B_d
  label B_d:
  var x:int = 48;
  var y:int = g + x;
  g_a = y;
}

function core_result_Result_T_E_map_err_h50da166387ca36f2(a:{ a:int, b:int, c:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 48;
  var g:int = e - f;
  g_a = g;
  g[4]:int = b;
  g[5]:int = c;
  g[7]:int = d;
  var h:int = 0;
  g[27]:byte = h;
  var i:int = 1;
  g[27]:byte = i;
  var j:int = g[4]:int;
  var k:int = eqz(j);
  br_table[B_c, B_b, ..B_c](k)
  label B_c:
  var l:int = g[4]:int;
  var m:int = g[5]:int;
  g[10]:int = l;
  g[11]:int = m;
  a.b = l;
  a.c = m;
  var n:int = 0;
  a.a = n;
  goto B_a;
  label B_b:
  var o:int = 0;
  g[27]:byte = o;
  var p:int = 8;
  var q:int = g + p;
  alloc_raw_vec_finish_grow_closure_h339429fb31fd77c6(q, d);
  var r:int = g[3]:int;
  var s:int = g[2]:int;
  a.b = s;
  a.c = r;
  var t:int = 1;
  a.a = t;
  label B_a:
  var u:int = g[27]:ubyte;
  var v:int = 1;
  var w:int = u & v;
  if (eqz(w)) goto B_d
  label B_d:
  var x:int = 48;
  var y:int = g + x;
  g_a = y;
}

function core_iter_iterator_Iterator_fold_hfd133dd0528520c1(a:int, b:int) {
  var c:int = g_a;
  var d:int = 48;
  var e:int_ptr = c - d;
  g_a = e;
  loop L_a {
    core_slice_iter_Chunks_T_as_core_iter_iterator_Iterator_next_h20719db59d8af8b6(
      e,
      a);
    var f:int = e[0];
    var g:int = e[1];
    e[3] = g;
    e[2] = f;
    var h:int = e[2];
    var i:int = 0;
    var j:int = h;
    var k:int = i;
    var l:int = j == k;
    var m:int = 0;
    var n:int = 1;
    var o:int = 1;
    var p:int = l & o;
    var q:int = select_if(m, n, p);
    var r:int = 1;
    var s:int = q;
    var t:int = r;
    var u:int = s == t;
    var v:int = 1;
    var w:int = u & v;
    if (eqz(w)) goto B_c;
    var x:int = e[2];
    var y:int = e[3];
    e[10] = x;
    e[11] = y;
    e[4] = x;
    e[5] = y;
    var z:int = e[4];
    var aa:int = e[5];
    core_iter_adapters_map_map_fold_closure_h6926ca9ee05aa581(b, z, aa);
    goto B_b;
    label B_c:
    core_ptr_drop_in_place_core_iter_adapters_map_map_fold_u8_u32_match_twenty_sign_MD5_hash_closure_cor(
      b);
    var ba:int = 48;
    var ca:int = e + ba;
    g_a = ca;
    return ;
    label B_b:
    continue L_a;
  }
}

function core_result_Result_T_E_or_else_h6d4bebbf74593433(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int = d - e;
  g_a = f;
  f[2]:int = b;
  f[3]:int = c;
  var g:int = 0;
  f[31]:byte = g;
  var h:int = 1;
  f[31]:byte = h;
  var i:int = f[2]:int;
  br_table[B_c, B_b, ..B_c](i)
  label B_c:
  var j:int = f[3]:int;
  f[11]:int = j;
  f[5]:int = j;
  var k:int = 0;
  f[4]:int = k;
  goto B_a;
  label B_b:
  var l:int = f[3]:int;
  f[10]:int = l;
  var m:int = 0;
  f[31]:byte = m;
  f[6]:int = l;
  var n:int = f[6]:int;
  js_sys_global_get_global_object_closure_he4a89d579c8fcae7(f, n);
  var o:int = f[0]:int;
  var p:int = f[1]:int;
  f[5]:int = p;
  f[4]:int = o;
  label B_a:
  var q:int = f[31]:ubyte;
  var r:int = 1;
  var s:int = q & r;
  if (eqz(s)) goto B_d
  label B_d:
  var t:int = f[4]:int;
  var u:int = f[5]:int;
  a.b = u;
  a.a = t;
  var v:int = 48;
  var w:int = f + v;
  g_a = w;
}

function core_result_Result_T_E_or_else_ha88beee38a6768f3(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int = d - e;
  g_a = f;
  f[2]:int = b;
  f[3]:int = c;
  var g:int = 0;
  f[31]:byte = g;
  var h:int = 1;
  f[31]:byte = h;
  var i:int = f[2]:int;
  br_table[B_c, B_b, ..B_c](i)
  label B_c:
  var j:int = f[3]:int;
  f[11]:int = j;
  f[5]:int = j;
  var k:int = 0;
  f[4]:int = k;
  goto B_a;
  label B_b:
  var l:int = f[3]:int;
  f[10]:int = l;
  var m:int = 0;
  f[31]:byte = m;
  f[6]:int = l;
  var n:int = f[6]:int;
  js_sys_global_get_global_object_closure_hc9154108d5581a5b(f, n);
  var o:int = f[0]:int;
  var p:int = f[1]:int;
  f[5]:int = p;
  f[4]:int = o;
  label B_a:
  var q:int = f[31]:ubyte;
  var r:int = 1;
  var s:int = q & r;
  if (eqz(s)) goto B_d
  label B_d:
  var t:int = f[4]:int;
  var u:int = f[5]:int;
  a.b = u;
  a.a = t;
  var v:int = 48;
  var w:int = f + v;
  g_a = w;
}

function core_result_Result_T_E_or_else_he3303fa4928a7d14(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int = d - e;
  g_a = f;
  f[2]:int = b;
  f[3]:int = c;
  var g:int = 0;
  f[31]:byte = g;
  var h:int = 1;
  f[31]:byte = h;
  var i:int = f[2]:int;
  br_table[B_c, B_b, ..B_c](i)
  label B_c:
  var j:int = f[3]:int;
  f[11]:int = j;
  f[5]:int = j;
  var k:int = 0;
  f[4]:int = k;
  goto B_a;
  label B_b:
  var l:int = f[3]:int;
  f[10]:int = l;
  var m:int = 0;
  f[31]:byte = m;
  f[6]:int = l;
  var n:int = f[6]:int;
  js_sys_global_get_global_object_closure_hd79419af37afdd50(f, n);
  var o:int = f[0]:int;
  var p:int = f[1]:int;
  f[5]:int = p;
  f[4]:int = o;
  label B_a:
  var q:int = f[31]:ubyte;
  var r:int = 1;
  var s:int = q & r;
  if (eqz(s)) goto B_d
  label B_d:
  var t:int = f[4]:int;
  var u:int = f[5]:int;
  a.b = u;
  a.a = t;
  var v:int = 48;
  var w:int = f + v;
  g_a = w;
}

function alloc_vec_Vec_T_as_alloc_vec_spec_from_iter_nested_SpecFromIterNested_T_I_from_iter_hd513d68e37667b2(a:int, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  var f:int = e;
  core_iter_adapters_map_Map_I_F_as_core_iter_iterator_Iterator_size_hint_he13cf4396e83598a(
    f,
    b);
  var g:int = e[1];
  var h:int = 1;
  var i:int = g;
  var j:int = h;
  var k:int = i == j;
  var l:int = 1;
  var m:int = k & l;
  if (eqz(m)) goto B_b;
  var n:int = e[2];
  e[7] = n;
  alloc_vec_Vec_T_with_capacity_h271d8026689becdc(a, n);
  goto B_a;
  label B_b:
  var o:int = 1050948;
  var p:int = o;
  var q:int = 17;
  var r:int = 1051060;
  var s:int = r;
  core_panicking_panic_hceae0c79b0247f98(p, q, s);
  unreachable;
  label B_a:
  var t:int = 16;
  var u:int = e + t;
  var v:long_ptr@4 = u;
  var fa:long = b[0];
  v[0] = fa;
  var w:int = 8;
  var x:int_ptr = v + w;
  var y:int_ptr = b + w;
  var z:int = y[0];
  x[0] = z;
  var aa:int = 16;
  var ba:int = e + aa;
  var ca:int = ba;
  alloc_vec_Vec_T_A_as_alloc_vec_spec_extend_SpecExtend_T_I_spec_extend_h4a315a27f25b751e(
    a,
    ca);
  var da:int = 32;
  var ea:int = e + da;
  g_a = ea;
}

function alloc_raw_vec_handle_reserve_hf2c17f8362e82642(a:long_ptr@4) {
  var b:int = g_a;
  var c:int = 48;
  var d:int_ptr = b - c;
  g_a = d;
  var e:int = 24;
  var f:int = d + e;
  var g:long_ptr@4 = f;
  var ba:long = a[0];
  g[0] = ba;
  var h:int = 8;
  var i:int_ptr = g + h;
  var j:int_ptr = a + h;
  var k:int = j[0];
  i[0] = k;
  var l:int = 8;
  var m:int = d + l;
  var n:int = m;
  var o:int = 24;
  var p:int = d + o;
  var q:int = p;
  core_result_Result_T_E_map_err_h7796e7db18c08018(n, q);
  var r:int = d[2];
  br_table[B_b, B_a, ..B_b](r)
  label B_b:
  var s:int = 48;
  var t:int = d + s;
  g_a = t;
  return ;
  label B_a:
  var u:int = 16;
  var v:int_ptr = d + u;
  var w:int = v[0];
  var x:int = 0;
  var y:int = w != x;
  br_table[B_d, B_c, ..B_d](y)
  label B_d:
  alloc_raw_vec_capacity_overflow_h56c8d20d9eefc93d();
  unreachable;
  label B_c:
  var z:int = d[3];
  var aa:int = d[4];
  d[10] = z;
  d[11] = aa;
  alloc_alloc_handle_alloc_error_h45a714900d29bef5(z, aa);
  unreachable;
}

function alloc_raw_vec_handle_reserve_hd4e3f05045606f67(a:long_ptr@4) {
  var b:int = g_a;
  var c:int = 48;
  var d:int_ptr = b - c;
  g_a = d;
  var e:int = 24;
  var f:int = d + e;
  var g:long_ptr@4 = f;
  var ba:long = a[0];
  g[0] = ba;
  var h:int = 8;
  var i:int_ptr = g + h;
  var j:int_ptr = a + h;
  var k:int = j[0];
  i[0] = k;
  var l:int = 8;
  var m:int = d + l;
  var n:int = m;
  var o:int = 24;
  var p:int = d + o;
  var q:int = p;
  core_result_Result_T_E_map_err_h7796e7db18c08018(n, q);
  var r:int = d[2];
  br_table[B_b, B_a, ..B_b](r)
  label B_b:
  var s:int = 48;
  var t:int = d + s;
  g_a = t;
  return ;
  label B_a:
  var u:int = 16;
  var v:int_ptr = d + u;
  var w:int = v[0];
  var x:int = 0;
  var y:int = w != x;
  br_table[B_d, B_c, ..B_d](y)
  label B_d:
  alloc_raw_vec_capacity_overflow_h56c8d20d9eefc93d();
  unreachable;
  label B_c:
  var z:int = d[3];
  var aa:int = d[4];
  d[10] = z;
  d[11] = aa;
  alloc_alloc_handle_alloc_error_h45a714900d29bef5(z, aa);
  unreachable;
}

function alloc_raw_vec_handle_reserve_h71f983960773cf8b(a:long_ptr@4) {
  var b:int = g_a;
  var c:int = 48;
  var d:int_ptr = b - c;
  g_a = d;
  var e:int = 24;
  var f:int = d + e;
  var g:long_ptr@4 = f;
  var ba:long = a[0];
  g[0] = ba;
  var h:int = 8;
  var i:int_ptr = g + h;
  var j:int_ptr = a + h;
  var k:int = j[0];
  i[0] = k;
  var l:int = 8;
  var m:int = d + l;
  var n:int = m;
  var o:int = 24;
  var p:int = d + o;
  var q:int = p;
  core_result_Result_T_E_map_err_h7796e7db18c08018(n, q);
  var r:int = d[2];
  br_table[B_b, B_a, ..B_b](r)
  label B_b:
  var s:int = 48;
  var t:int = d + s;
  g_a = t;
  return ;
  label B_a:
  var u:int = 16;
  var v:int_ptr = d + u;
  var w:int = v[0];
  var x:int = 0;
  var y:int = w != x;
  br_table[B_d, B_c, ..B_d](y)
  label B_d:
  alloc_raw_vec_capacity_overflow_h56c8d20d9eefc93d();
  unreachable;
  label B_c:
  var z:int = d[3];
  var aa:int = d[4];
  d[10] = z;
  d[11] = aa;
  alloc_alloc_handle_alloc_error_h45a714900d29bef5(z, aa);
  unreachable;
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h6c4a22fb97008647(a:int, b:int) {
  var c:int = g_a;
  var d:int = 48;
  var e:int = c - d;
  var f:int = b[1]:int;
  var g:int = eqz(f);
  br_table[B_c, B_b, ..B_c](g)
  label B_c:
  var h:long_ptr@4 = e;
  var ca:long = b[0]:long@4;
  h[0] = ca;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 16;
  var n:int = e + m;
  var o:long_ptr@4 = n;
  var p:long_ptr@4 = e;
  var da:long = p[0];
  o[0] = da;
  var q:int = 8;
  var r:int_ptr = o + q;
  var s:int_ptr = p + q;
  var t:int = s[0];
  r[0] = t;
  var u:int = 16;
  var v:int = e + u;
  var w:long_ptr@4 = v;
  var ea:long = w[0];
  a[0]:long@4 = ea;
  var x:int = 8;
  var y:int_ptr = a + x;
  var z:int_ptr = w + x;
  var aa:int = z[0];
  y[0] = aa;
  goto B_a;
  label B_b:
  var ba:int = 0;
  a[1]:int = ba;
  label B_a:
}

function wasm_bindgen_convert_closures_invoke1_mut_h9bb35bde9821cef7(a:int, b:int, c:int):int {
  var d:int = g_a;
  var e:int = 48;
  var f:int = d - e;
  g_a = f;
  f[3]:int = a;
  f[4]:int = b;
  f[5]:int = c;
  if (a) goto B_a;
  var g:int = 1051756;
  var h:int = g;
  var i:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(h, i);
  unreachable;
  label B_a:
  f[0]:int = a;
  f[1]:int = b;
  var j:int = f[0]:int;
  var k:int = f[1]:int;
  f[6]:int = j;
  f[7]:int = k;
  var l:int = f[6]:int;
  var m:int_ptr = f[7]:int;
  f[8]:int = l;
  f[9]:int = m;
  var n:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      c);
  f[10]:int = n;
  f[2]:int = n;
  var o:int = m[4];
  var p:int = f[2]:int;
  var q:int = call_indirect(l, p, o);
  var r:int = 1;
  var s:int = q & r;
  f[47]:byte = s;
  var t:int = 1;
  var u:int = q & t;
  var v:int =
    T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_hdc7405c6ec1f4734(
      u);
  var w:int = 48;
  var x:int = f + w;
  g_a = x;
  return v;
}

function thread_local_LocalKey_T_try_with_h52c6b93cc942b76a(a:{ a:int, b:int }, b:int_ptr) {
  var n:int;
  var c:int = g_a;
  var d:int = 64;
  var e:int_ptr = c - d;
  g_a = e;
  e[9] = b;
  var f:int = b[0];
  var g:int = call_indirect(f);
  var h:int = core_option_Option_T_ok_or_ha739d7fd5cedbb94(g);
  var i:int =
    core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hf2aa3c64480527d8(
      h);
  e[7] = i;
  var j:int = e[7];
  var k:int = eqz(j);
  br_table[B_d, B_c, ..B_d](k)
  label B_d:
  var l:int = e[7];
  e[14] = l;
  e[15] = l;
  e[8] = l;
  var m:int = e[8];
  n = js_sys_global_closure_hae6b7408340f12a5(m);
  goto B_b;
  label B_c:
  var o:int = 8;
  var p:int = e + o;
  core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_6(
    p);
  var q:int = e[2];
  var r:int = e[3];
  e[5] = r;
  e[4] = q;
  goto B_a;
  label B_b:
  e[5] = n;
  var s:int = 0;
  e[4] = s;
  label B_a:
  var t:int = e[4];
  var u:int = e[5];
  a.b = u;
  a.a = t;
  var v:int = 64;
  var w:int = e + v;
  g_a = w;
}

function alloc_vec_Vec_T_A_push_hdd7f5def12062516(a:int_ptr, b:int) {
  var c:int = g_a;
  var d:int = 48;
  var e:int = c - d;
  g_a = e;
  e[2]:int = a;
  e[15]:byte = b;
  var f:int = a[2];
  e[6]:int = a;
  var g:int = a[1];
  e[5]:int = g;
  var h:int = e[5]:int;
  var i:int = f;
  var j:int = h;
  var k:int = i == j;
  var l:int = 1;
  var m:int = k & l;
  if (eqz(m)) goto B_a;
  var n:int = 1;
  alloc_vec_Vec_T_A_reserve_h4366fa0b9e11541f(a, n);
  label B_a:
  var o:int = alloc_vec_Vec_T_A_as_mut_ptr_h834293a9eeb4907e(a);
  var p:int = a[2];
  e[7]:int = o;
  e[8]:int = p;
  e[9]:int = o;
  e[10]:int = p;
  var q:int = o + p;
  e[11]:int = q;
  var r:int = e[11]:int;
  e[4]:int = r;
  core_ptr_write_h4aa3ce7c0b5fbce7(r, b);
  var s:int = a[2];
  var t:int = 1;
  var u:int = s + t;
  a[2] = u;
  var v:int = 48;
  var w:int = e + v;
  g_a = w;
}

function wasm_bindgen_convert_closures_invoke2_mut_h505953c8add94c60(a:int, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 64;
  var g:int_ptr = e - f;
  g_a = g;
  g[4] = a;
  g[5] = b;
  g[6] = c;
  g[7] = d;
  if (a) goto B_a;
  var h:int = 1051756;
  var i:int = h;
  var j:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(i, j);
  unreachable;
  label B_a:
  g[0] = a;
  g[1] = b;
  var k:int = g[0];
  var l:int = g[1];
  g[10] = k;
  g[11] = l;
  var m:int = g[10];
  var n:int_ptr = g[11];
  g[12] = m;
  g[13] = n;
  var o:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      c);
  g[14] = o;
  var p:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      d);
  g[15] = p;
  g[2] = o;
  g[3] = p;
  var q:int = n[4];
  var r:int = g[2];
  var s:int = g[3];
  call_indirect(m, r, s, q);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var t:int = 64;
  var u:int = g + t;
  g_a = u;
}

function wasm_bindgen_convert_closures_invoke2_mut_hc7cd7773d8de729f(a:int, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 64;
  var g:int_ptr = e - f;
  g_a = g;
  g[4] = a;
  g[5] = b;
  g[6] = c;
  g[7] = d;
  if (a) goto B_a;
  var h:int = 1051756;
  var i:int = h;
  var j:int = 48;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(i, j);
  unreachable;
  label B_a:
  g[0] = a;
  g[1] = b;
  var k:int = g[0];
  var l:int = g[1];
  g[10] = k;
  g[11] = l;
  var m:int = g[10];
  var n:int_ptr = g[11];
  g[12] = m;
  g[13] = n;
  var o:int =
    js_sys_wbg_generated_Function_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Function_from_abi_h97(
      c);
  g[14] = o;
  var p:int =
    js_sys_wbg_generated_Function_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Function_from_abi_h97(
      d);
  g[15] = p;
  g[2] = o;
  g[3] = p;
  var q:int = n[4];
  var r:int = g[2];
  var s:int = g[3];
  call_indirect(m, r, s, q);
  T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444();
  var t:int = 64;
  var u:int = g + t;
  g_a = u;
}

function core_result_Result_T_E_map_err_hca94d505b9cea412(a:{ a:int, b:int, c:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int = d - e;
  g_a = f;
  f[2]:int = b;
  f[3]:int = c;
  var g:int = 0;
  f[23]:byte = g;
  var h:int = 1;
  f[23]:byte = h;
  var i:int = f[3]:int;
  var j:int = eqz(i);
  br_table[B_c, B_b, ..B_c](j)
  label B_c:
  var k:int = f[2]:int;
  var l:int = f[3]:int;
  f[10]:int = k;
  f[11]:int = l;
  a.b = k;
  a.c = l;
  var m:int = 0;
  a.a = m;
  goto B_a;
  label B_b:
  var n:int = 0;
  f[23]:byte = n;
  alloc_raw_vec_finish_grow_closure_h671276c1adc80539(f);
  var o:int = f[1]:int;
  var p:int = f[0]:int;
  a.b = p;
  a.c = o;
  var q:int = 1;
  a.a = q;
  label B_a:
  var r:int = f[23]:ubyte;
  var s:int = 1;
  var t:int = r & s;
  if (eqz(t)) goto B_d
  label B_d:
  var u:int = 48;
  var v:int = f + u;
  g_a = v;
}

function core_option_Option_T_unwrap_or_else_h2fcb85da59ecd33e(a:{ a:int, b:int }, b:{ a:int, b:int, c:int }, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int = d - e;
  g_a = f;
  f[5]:int = c;
  var g:int = 0;
  f[19]:byte = g;
  var h:int = 1;
  f[19]:byte = h;
  var i:int = b.a;
  br_table[B_d, B_c, ..B_d](i)
  label B_d:
  var j:int = 0;
  f[19]:byte = j;
  wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_str_into_abi_closure_hc93ac2f0(
    f,
    c);
  var k:int = f[0]:int;
  var l:int = f[1]:int;
  f[3]:int = l;
  f[2]:int = k;
  goto B_b;
  label B_c:
  var m:int = b.b;
  var n:int = b.c;
  f[6]:int = m;
  f[7]:int = n;
  f[2]:int = m;
  f[3]:int = n;
  goto B_a;
  label B_b:
  label B_a:
  var o:int = f[19]:ubyte;
  var p:int = 1;
  var q:int = o & p;
  if (eqz(q)) goto B_e
  label B_e:
  var r:int = f[2]:int;
  var s:int = f[3]:int;
  a.b = s;
  a.a = r;
  var t:int = 32;
  var u:int = f + t;
  g_a = u;
}

function core_fmt_num_impl_core_fmt_Debug_for_usize_fmt_hd455b4d034984e1a(a:int, b:int):int {
  var i:int;
  var c:int = g_a;
  var d:int = 16;
  var e:int = c - d;
  g_a = e;
  e[2]:int = a;
  e[3]:int = b;
  var f:int = core_fmt_Formatter_debug_lower_hex_h0dc285d0f26f6b14(b);
  var g:int = 1;
  var h:int = f & g;
  if (h) goto B_c;
  i = core_fmt_Formatter_debug_upper_hex_h3886f20a2bf4d78c(b);
  goto B_b;
  label B_c:
  var j:int =
    core_fmt_num_impl_core_fmt_LowerHex_for_i32_fmt_hfc823db6f75c4ea5(a, b);
  var k:int = 1;
  var l:int = j & k;
  e[7]:byte = l;
  goto B_a;
  label B_b:
  var m:int = 1;
  var n:int = i & m;
  if (n) goto B_f;
  var o:int =
    core_fmt_num_imp_impl_core_fmt_Display_for_u32_fmt_h3df307cf9bb0f560(
      a,
      b);
  var p:int = 1;
  var q:int = o & p;
  e[7]:byte = q;
  goto B_e;
  label B_f:
  var r:int =
    core_fmt_num_impl_core_fmt_UpperHex_for_i32_fmt_he572e423217fb9c1(a, b);
  var s:int = 1;
  var t:int = r & s;
  e[7]:byte = t;
  goto B_d;
  label B_e:
  label B_d:
  label B_a:
  var u:int = e[7]:ubyte;
  var v:int = 1;
  var w:int = u & v;
  var x:int = 16;
  var y:int = e + x;
  g_a = y;
  return w;
}

function core_result_Result_T_E_map_err_h7796e7db18c08018(a:{ a:int, b:int, c:int }, b:{ a:int, b:int, c:int }) {
  var c:int = g_a;
  var d:int = 48;
  var e:int = c - d;
  g_a = e;
  var f:int = 0;
  e[23]:byte = f;
  var g:int = 1;
  e[23]:byte = g;
  var h:int = b.a;
  br_table[B_c, B_b, ..B_c](h)
  label B_c:
  var i:int = 0;
  a.a = i;
  goto B_a;
  label B_b:
  var j:int = b.b;
  var k:int = b.c;
  e[10]:int = j;
  e[11]:int = k;
  var l:int = 0;
  e[23]:byte = l;
  e[2]:int = j;
  e[3]:int = k;
  var m:int = e[2]:int;
  var n:int = e[3]:int;
  alloc_raw_vec_handle_reserve_closure_hff092148b6688af8(e, m, n);
  var o:int = e[1]:int;
  var p:int = e[0]:int;
  a.b = p;
  a.c = o;
  var q:int = 1;
  a.a = q;
  label B_a:
  var r:int = e[23]:ubyte;
  var s:int = 1;
  var t:int = r & s;
  if (eqz(t)) goto B_d
  label B_d:
  var u:int = 48;
  var v:int = e + u;
  g_a = v;
}

function core_fmt_num_impl_core_fmt_Debug_for_u32_fmt_h4612b93b8193d6ea(a:int, b:int):int {
  var i:int;
  var c:int = g_a;
  var d:int = 16;
  var e:int = c - d;
  g_a = e;
  e[2]:int = a;
  e[3]:int = b;
  var f:int = core_fmt_Formatter_debug_lower_hex_h0dc285d0f26f6b14(b);
  var g:int = 1;
  var h:int = f & g;
  if (h) goto B_c;
  i = core_fmt_Formatter_debug_upper_hex_h3886f20a2bf4d78c(b);
  goto B_b;
  label B_c:
  var j:int =
    core_fmt_num_impl_core_fmt_LowerHex_for_i32_fmt_hfc823db6f75c4ea5(a, b);
  var k:int = 1;
  var l:int = j & k;
  e[7]:byte = l;
  goto B_a;
  label B_b:
  var m:int = 1;
  var n:int = i & m;
  if (n) goto B_f;
  var o:int =
    core_fmt_num_imp_impl_core_fmt_Display_for_u32_fmt_h3df307cf9bb0f560(
      a,
      b);
  var p:int = 1;
  var q:int = o & p;
  e[7]:byte = q;
  goto B_e;
  label B_f:
  var r:int =
    core_fmt_num_impl_core_fmt_UpperHex_for_i32_fmt_he572e423217fb9c1(a, b);
  var s:int = 1;
  var t:int = r & s;
  e[7]:byte = t;
  goto B_d;
  label B_e:
  label B_d:
  label B_a:
  var u:int = e[7]:ubyte;
  var v:int = 1;
  var w:int = u & v;
  var x:int = 16;
  var y:int = e + x;
  g_a = y;
  return w;
}

function core_iter_iterator_Iterator_for_each_h0020c657e2a906c0(a:long_ptr@4, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 48;
  var e:int = c - d;
  g_a = e;
  var f:long_ptr@4 = e;
  var da:long = a[0];
  f[0] = da;
  var g:int = 8;
  var h:int_ptr = f + g;
  var i:int_ptr = a + g;
  var j:int = i[0];
  h[0] = j;
  var k:int = 32;
  var l:int = e + k;
  var m:long_ptr@4 = l;
  var ea:long = b[0];
  m[0] = ea;
  var n:int = 8;
  var o:int_ptr = m + n;
  var p:int_ptr = b + n;
  var q:int = p[0];
  o[0] = q;
  var r:int = 16;
  var s:int = e + r;
  var t:int = s;
  var u:int = 32;
  var v:int = e + u;
  var w:int = v;
  core_iter_iterator_Iterator_for_each_call_hec25c4097f400d07(t, w);
  var x:int = e;
  var y:int = 16;
  var z:int = e + y;
  var aa:int = z;
  core_iter_adapters_map_Map_I_F_as_core_iter_iterator_Iterator_fold_h05d7295638b5c4af(
    x,
    aa);
  var ba:int = 48;
  var ca:int = e + ba;
  g_a = ca;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_core_option_Option_T_from_abi_h(a:{ a:int, b:int }, b:int) {
  var p:int;
  var c:int = g_a;
  var d:int = 32;
  var e:int = c - d;
  g_a = e;
  e[3]:int = b;
  var f:int = 0;
  e[31]:byte = f;
  var g:int = 1;
  e[31]:byte = g;
  var h:int = 12;
  var i:int = e + h;
  var j:int = i;
  var k:int =
    web_sys_features_gen_Document_wbg_generated_Document_impl_wasm_bindgen_convert_OptionFromWasmAbi_for(
      j);
  var l:int = 1;
  var m:int = k & l;
  if (m) goto B_c;
  var n:int = 0;
  e[31]:byte = n;
  var o:int = e[3]:int;
  p =
    web_sys_features_gen_Document_wbg_generated_Document_impl_wasm_bindgen_convert_FromWasmAbi_for_web_s(
      o);
  goto B_b;
  label B_c:
  var q:int = 0;
  e[4]:int = q;
  goto B_a;
  label B_b:
  e[5]:int = p;
  var r:int = 1;
  e[4]:int = r;
  label B_a:
  var s:int = e[31]:ubyte;
  var t:int = 1;
  var u:int = s & t;
  if (eqz(u)) goto B_d
  label B_d:
  var v:int = e[4]:int;
  var w:int = e[5]:int;
  a.b = w;
  a.a = v;
  var x:int = 32;
  var y:int = e + x;
  g_a = y;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_core_option_Option_T_from_abi_h_1(a:{ a:int, b:int }, b:int) {
  var p:int;
  var c:int = g_a;
  var d:int = 32;
  var e:int = c - d;
  g_a = e;
  e[3]:int = b;
  var f:int = 0;
  e[31]:byte = f;
  var g:int = 1;
  e[31]:byte = g;
  var h:int = 12;
  var i:int = e + h;
  var j:int = i;
  var k:int =
    web_sys_features_gen_HtmlElement_wbg_generated_HtmlElement_impl_wasm_bindgen_convert_OptionFromWasmA(
      j);
  var l:int = 1;
  var m:int = k & l;
  if (m) goto B_c;
  var n:int = 0;
  e[31]:byte = n;
  var o:int = e[3]:int;
  p =
    web_sys_features_gen_HtmlElement_wbg_generated_HtmlElement_impl_wasm_bindgen_convert_FromWasmAbi_for(
      o);
  goto B_b;
  label B_c:
  var q:int = 0;
  e[4]:int = q;
  goto B_a;
  label B_b:
  e[5]:int = p;
  var r:int = 1;
  e[4]:int = r;
  label B_a:
  var s:int = e[31]:ubyte;
  var t:int = 1;
  var u:int = s & t;
  if (eqz(u)) goto B_d
  label B_d:
  var v:int = e[4]:int;
  var w:int = e[5]:int;
  a.b = w;
  a.a = v;
  var x:int = 32;
  var y:int = e + x;
  g_a = y;
}

function panicking_rust_panic_with_hook_h364974e717ed59ec(a:int, b:int_ptr, c:int_ptr, d:int) {
  var g:int;
  var e:int = g_a - 32;
  g_a = e;
  var f:int = 1;
  0[263672]:int = (g = 0[263672]:int) + 1;
  if (0[263786]:int != 1) goto B_b;
  f = 0[263787]:int + 1;
  goto B_a;
  label B_b:
  0[263786]:int = 1;
  label B_a:
  0[263787]:int = f;
  if (g < 0) goto B_d;
  if (f > 2) goto B_d;
  e[7]:int = d;
  e[6]:int = c;
  g = 0[263669]:int;
  if (g <= -1) goto B_d;
  0[263669]:int = (g = g + 1);
  c = 0[263671]:int;
  if (eqz(c)) goto B_e;
  g = 0[263670]:int;
  call_indirect(e + 8, a, b[4]);
  e[2]:long = e[1]:long;
  call_indirect(g, e + 16, c[5]);
  g = 0[263669]:int;
  label B_e:
  0[263669]:int = g + -1;
  if (f <= 1) goto B_c;
  label B_d:
  unreachable;
  label B_c:
  rust_panic(a, b);
  unreachable;
}

function wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_string_String_into_abi_h(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 48;
  var e:{ a:int, b:int, c:int, d:int } = c - d;
  g_a = e;
  var f:int = 8;
  var g:int = e + f;
  alloc_string_String_as_core_ops_deref_Deref_deref_h8639249056b2035c(g,
                                                                      b);
  var h:int = e.d;
  var i:int = e.c;
  var j:int = 16;
  var k:int = e + j;
  var l:int = k;
  wasm_bindgen_convert_slices_unsafe_get_cached_str_h35e2405641bc6775(l,
                                                                      i,
                                                                      h);
  var m:int = 32;
  var n:int = e + m;
  var o:long_ptr@4 = n;
  var ba:long = b[0];
  o[0] = ba;
  var p:int = 8;
  var q:int_ptr = o + p;
  var r:int_ptr = b + p;
  var s:int = r[0];
  q[0] = s;
  var t:int = 16;
  var u:int = e + t;
  var v:int = 32;
  var w:int = e + v;
  core_option_Option_T_unwrap_or_else_hbd755425245af46e(e, u, w);
  var x:int = e.b;
  var y:int = e.a;
  a.b = x;
  a.a = y;
  var z:int = 48;
  var aa:int = e + z;
  g_a = aa;
}

function core_panicking_assert_failed_h6d7132e872e7c5a7(a:int, b:int, c:int, d:long_ptr@4, e:int) {
  var f:int = g_a;
  var g:int = 48;
  var h:int = f - g;
  g_a = h;
  h[2]:int = b;
  h[3]:int = c;
  h[47]:byte = a;
  var i:int = 8;
  var j:int = h + i;
  var k:int = j;
  var l:int = 12;
  var m:int = h + l;
  var n:int = m;
  var o:int = 16;
  var p:int = h + o;
  var q:long_ptr@4 = p;
  var ca:long = d[0];
  q[0] = ca;
  var r:int = 16;
  var s:long_ptr@4 = q + r;
  var t:long_ptr@4 = d + r;
  var da:long = t[0];
  s[0] = da;
  var u:int = 8;
  var v:long_ptr@4 = q + u;
  var w:long_ptr@4 = d + u;
  var ea:long = w[0];
  v[0] = ea;
  var x:int = 1051600;
  var y:int = x;
  var z:int = 16;
  var aa:int = h + z;
  var ba:int = aa;
  core_panicking_assert_failed_inner_hc9ea285232a995e1(a, k, y, n, y, ba, e);
  unreachable;
}

function core_panicking_assert_failed_h9fca70a8d7c6c74a(a:int, b:int, c:int, d:long_ptr@4, e:int) {
  var f:int = g_a;
  var g:int = 48;
  var h:int = f - g;
  g_a = h;
  h[2]:int = b;
  h[3]:int = c;
  h[47]:byte = a;
  var i:int = 8;
  var j:int = h + i;
  var k:int = j;
  var l:int = 12;
  var m:int = h + l;
  var n:int = m;
  var o:int = 16;
  var p:int = h + o;
  var q:long_ptr@4 = p;
  var ca:long = d[0];
  q[0] = ca;
  var r:int = 16;
  var s:long_ptr@4 = q + r;
  var t:long_ptr@4 = d + r;
  var da:long = t[0];
  s[0] = da;
  var u:int = 8;
  var v:long_ptr@4 = q + u;
  var w:long_ptr@4 = d + u;
  var ea:long = w[0];
  v[0] = ea;
  var x:int = 1053608;
  var y:int = x;
  var z:int = 16;
  var aa:int = h + z;
  var ba:int = aa;
  core_panicking_assert_failed_inner_hc9ea285232a995e1(a, k, y, n, y, ba, e);
  unreachable;
}

function alloc_raw_vec_RawVec_T_A_as_core_ops_drop_Drop_drop_h08bd0948dc049d87(a:int) {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  g_a = d;
  d[4] = a;
  var e:int = d;
  alloc_raw_vec_RawVec_T_A_current_memory_ha12411b11109967b(e, a);
  var f:int = d[0];
  var g:int = 0;
  var h:int = f;
  var i:int = g;
  var j:int = h == i;
  var k:int = 0;
  var l:int = 1;
  var m:int = 1;
  var n:int = j & m;
  var o:int = select_if(k, l, n);
  var p:int = 1;
  var q:int = o;
  var r:int = p;
  var s:int = q == r;
  var t:int = 1;
  var u:int = s & t;
  if (eqz(u)) goto B_a;
  var v:int = d[0];
  d[5] = v;
  var w:int = d[1];
  var x:int = d[2];
  d[6] = w;
  d[7] = x;
  alloc_alloc_Global_as_core_alloc_Allocator_deallocate_h00f6130e6d04c4aa(
    a,
    v,
    w,
    x);
  label B_a:
  var y:int = 32;
  var z:int = d + y;
  g_a = z;
}

function alloc_raw_vec_RawVec_T_A_as_core_ops_drop_Drop_drop_h30df1befe90a4939(a:int) {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  g_a = d;
  d[4] = a;
  var e:int = d;
  alloc_raw_vec_RawVec_T_A_current_memory_h8709887620270aaf(e, a);
  var f:int = d[0];
  var g:int = 0;
  var h:int = f;
  var i:int = g;
  var j:int = h == i;
  var k:int = 0;
  var l:int = 1;
  var m:int = 1;
  var n:int = j & m;
  var o:int = select_if(k, l, n);
  var p:int = 1;
  var q:int = o;
  var r:int = p;
  var s:int = q == r;
  var t:int = 1;
  var u:int = s & t;
  if (eqz(u)) goto B_a;
  var v:int = d[0];
  d[5] = v;
  var w:int = d[1];
  var x:int = d[2];
  d[6] = w;
  d[7] = x;
  alloc_alloc_Global_as_core_alloc_Allocator_deallocate_h78eea967e1d72f4c(
    a,
    v,
    w,
    x);
  label B_a:
  var y:int = 32;
  var z:int = d + y;
  g_a = z;
}

function alloc_raw_vec_RawVec_T_A_as_core_ops_drop_Drop_drop_hf91247a05ef55aa9(a:int) {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  g_a = d;
  d[4] = a;
  var e:int = d;
  alloc_raw_vec_RawVec_T_A_current_memory_h2f68139788e5409a(e, a);
  var f:int = d[0];
  var g:int = 0;
  var h:int = f;
  var i:int = g;
  var j:int = h == i;
  var k:int = 0;
  var l:int = 1;
  var m:int = 1;
  var n:int = j & m;
  var o:int = select_if(k, l, n);
  var p:int = 1;
  var q:int = o;
  var r:int = p;
  var s:int = q == r;
  var t:int = 1;
  var u:int = s & t;
  if (eqz(u)) goto B_a;
  var v:int = d[0];
  d[5] = v;
  var w:int = d[1];
  var x:int = d[2];
  d[6] = w;
  d[7] = x;
  alloc_alloc_Global_as_core_alloc_Allocator_deallocate_h78eea967e1d72f4c(
    a,
    v,
    w,
    x);
  label B_a:
  var y:int = 32;
  var z:int = d + y;
  g_a = z;
}

function thread_local_lazy_LazyKeyInner_T_initialize_h52ca8ab9c342dd73(a:int_ptr, b:int):int {
  var c:int = g_a;
  var d:int = 48;
  var e:{ a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int, i:int, j:int, k:int, l:int } =
    c - d;
  g_a = e;
  e.g = a;
  e.h = b;
  var f:int = core_ops_function_FnOnce_call_once_h8b3c362ffa59abf7(b);
  e.i = f;
  e.l = a;
  e.j = a;
  e.f = f;
  var g:int = 1;
  e.e = g;
  var h:int = e.e;
  var i:int = e.f;
  core_mem_replace_hc97ff325d5162a0f(e, a, h, i);
  var j:int = e.a;
  var k:int = e.b;
  e.d = k;
  e.c = j;
  var l:int = 8;
  var m:int = e + l;
  var n:int = m;
  core_ptr_drop_in_place_core_option_Option_js_sys_Object_hd9de9f556e0633dc(
    n);
  var o:int = a[0];
  br_table[B_b, B_a, ..B_b](o)
  label B_b:
  core_hint_unreachable_unchecked_h0a606f0cb22731fe();
  unreachable;
  label B_a:
  var p:int = 4;
  var q:int = a + p;
  e.k = q;
  var r:int = 48;
  var s:int = e + r;
  g_a = s;
  return q;
}

function core_iter_adapters_step_by_StepBy_I_as_core_iter_iterator_Iterator_next_hf53707e22247256d(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[7] = b;
  var f:int = b[12]:ubyte;
  var g:int = 1;
  var h:int = f & g;
  if (h) goto B_c;
  var i:int = b[2]:int;
  var j:int = 8;
  var k:int = e + j;
  core_iter_range_impl_core_iter_iterator_Iterator_for_core_ops_range_Range_A_nth_he764d753ccb93a0e(
    k,
    b,
    i);
  var l:int = e[2];
  var m:int = e[3];
  e[5] = m;
  e[4] = l;
  goto B_b;
  label B_c:
  var n:int = 0;
  b[12]:byte = n;
  core_iter_range_impl_core_iter_iterator_Iterator_for_core_ops_range_Range_A_next_h63350c1d1fe46d98(
    e,
    b);
  var o:int = e[0];
  var p:int = e[1];
  e[5] = p;
  e[4] = o;
  goto B_a;
  label B_b:
  label B_a:
  var q:int = e[4];
  var r:int = e[5];
  a.b = r;
  a.a = q;
  var s:int = 32;
  var t:int = e + s;
  g_a = t;
}

function wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_string_String_into_abi_c(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 48;
  var e:int_ptr = c - d;
  g_a = e;
  var f:int = 32;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var aa:long = b[0];
  h[0] = aa;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 16;
  var n:int = e + m;
  var o:int = n;
  var p:int = 32;
  var q:int = e + p;
  var r:int = q;
  alloc_string_String_into_bytes_h5512df41c4ae71bf(o, r);
  var s:int = 8;
  var t:int = e + s;
  var u:int = 16;
  var v:int = e + u;
  wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_vec_Vec_T_into_abi_hadf1(
    t,
    v);
  var w:int = e[3];
  var x:int = e[2];
  a.b = w;
  a.a = x;
  var y:int = 48;
  var z:int = e + y;
  g_a = z;
}

function core_slice_iter_Iter_T_as_slice_h7743a543c1670adf(a:{ a:int, b:int }, b:{ a:int, b:int }) {
  var c:int = g_a;
  var d:int = 48;
  var e:int_ptr = c - d;
  g_a = e;
  e[4] = b;
  e[6] = b;
  var f:int = b.a;
  var g:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(f);
  var h:int = b.a;
  e[7] = h;
  var i:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(h);
  e[11] = i;
  var j:int = 1;
  e[8] = j;
  var k:int = b.b;
  var l:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(h);
  var m:int = k - l;
  e[9] = m;
  var n:int = e[9];
  e[10] = n;
  e[5] = n;
  var o:int = e[5];
  var p:int = 8;
  var q:int = e + p;
  core_slice_raw_from_raw_parts_hdef8727ebe33fd2c(q, g, o);
  var r:int = e[3];
  var s:int = e[2];
  a.b = r;
  a.a = s;
  var t:int = 48;
  var u:int = e + t;
  g_a = u;
}

function memcpy(a:int, b:int, c:int):int {
  var g:ubyte_ptr;
  if (eqz(c)) goto B_a;
  var d:int = c & 3;
  var e:byte_ptr = 0;
  if (c + -1 < 3) goto B_b;
  var f:int = c & -4;
  e = 0;
  loop L_c {
    c = a + e;
    c[0]:byte = (g = b + e)[0];
    (c + 1)[0]:byte = (g + 1)[0]:ubyte;
    (c + 2)[0]:byte = (g + 2)[0]:ubyte;
    (c + 3)[0]:byte = (g + 3)[0]:ubyte;
    if (f != (e = e + 4)) continue L_c;
  }
  label B_b:
  if (eqz(d)) goto B_a;
  c = b + e;
  e = a + e;
  loop L_d {
    e[0] = c[0]:ubyte;
    c = c + 1;
    e = e + 1;
    d = d + -1;
    if (d) continue L_d;
  }
  label B_a:
  return a;
}

function core_alloc_layout_Layout_padding_needed_for_h7a72f5f24d93ce08(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 48;
  var e:{ a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int, i:int, j:int, k:int, l:int } =
    c - d;
  g_a = e;
  e.a = a;
  e.b = b;
  var f:int = core_alloc_layout_Layout_size_h23e58bed513508c1(a);
  e.c = f;
  e.e = f;
  e.f = b;
  var g:int = f + b;
  e.k = g;
  var h:int = 1;
  e.l = h;
  var i:int = 1;
  var j:int = g - i;
  e.i = b;
  var k:int = 1;
  e.j = k;
  var l:int = 1;
  var m:int = b - l;
  var n:int = -1;
  var o:int = m ^ n;
  var p:int = j & o;
  e.d = p;
  e.g = p;
  e.h = f;
  var q:int = p - f;
  var r:int = 48;
  var s:int = e + r;
  g_a = s;
  return q;
}

function core_alloc_layout_Layout_padding_needed_for_h7ace4e8ef7657e27(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 48;
  var e:{ a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int, i:int, j:int, k:int, l:int } =
    c - d;
  g_a = e;
  e.a = a;
  e.b = b;
  var f:int = core_alloc_layout_Layout_size_hd03d4df4a572a4a6(a);
  e.c = f;
  e.e = f;
  e.f = b;
  var g:int = f + b;
  e.k = g;
  var h:int = 1;
  e.l = h;
  var i:int = 1;
  var j:int = g - i;
  e.i = b;
  var k:int = 1;
  e.j = k;
  var l:int = 1;
  var m:int = b - l;
  var n:int = -1;
  var o:int = m ^ n;
  var p:int = j & o;
  e.d = p;
  e.g = p;
  e.h = f;
  var q:int = p - f;
  var r:int = 48;
  var s:int = e + r;
  g_a = s;
  return q;
}

function memset(a:int, b:int, c:byte_ptr):int {
  if (eqz(c)) goto B_a;
  var d:int = c & 7;
  var e:int = 0;
  if (c + -1 < 7) goto B_b;
  var f:int = c & -8;
  e = 0;
  loop L_c {
    c = a + e;
    c[0] = b;
    (c + 7)[0]:byte = b;
    (c + 6)[0]:byte = b;
    (c + 5)[0]:byte = b;
    (c + 4)[0]:byte = b;
    (c + 3)[0]:byte = b;
    (c + 2)[0]:byte = b;
    (c + 1)[0]:byte = b;
    if (f != (e = e + 8)) continue L_c;
  }
  label B_b:
  if (eqz(d)) goto B_a;
  c = a + e;
  loop L_d {
    c[0] = b;
    c = c + 1;
    d = d + -1;
    if (d) continue L_d;
  }
  label B_a:
  return a;
}

function alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h4924ead02e4b7940(a:int, b:int, c:int) {
  var d:int = g_a - 32;
  g_a = d;
  c = b + c;
  if (c < b) goto B_a;
  b = (a + 4)[0]:int;
  var e:int = b << 1;
  c = select_if(e, c, e > c);
  c = select_if(c, 8, c > 8);
  if (eqz(b)) goto B_c;
  (d + 16 + 8)[0]:int = 1;
  d[5]:int = b;
  d[4]:int = a[0]:int;
  goto B_b;
  label B_c:
  d[4]:int = 0;
  label B_b:
  alloc_raw_vec_finish_grow_h3f2745a59523b24f(d, c, 1, d + 16);
  if (d[0]:int != 1) goto B_d;
  a = (d + 8)[0]:int;
  if (eqz(a)) goto B_a;
  alloc_alloc_handle_alloc_error_h45a714900d29bef5(d[1]:int, a);
  unreachable;
  label B_d:
  a[0]:long@4 = d[1]:long@4;
  g_a = d + 32;
  return ;
  label B_a:
  alloc_raw_vec_capacity_overflow_h56c8d20d9eefc93d();
  unreachable;
}

function alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h72b5fc9a2b077781(a:int, b:int, c:int) {
  var d:int = g_a - 32;
  g_a = d;
  c = b + c;
  if (c < b) goto B_a;
  b = (a + 4)[0]:int;
  var e:int = b << 1;
  c = select_if(e, c, e > c);
  c = select_if(c, 8, c > 8);
  if (eqz(b)) goto B_c;
  (d + 16 + 8)[0]:int = 1;
  d[5]:int = b;
  d[4]:int = a[0]:int;
  goto B_b;
  label B_c:
  d[4]:int = 0;
  label B_b:
  alloc_raw_vec_finish_grow_h1e1788118171b0ee(d, c, 1, d + 16);
  if (d[0]:int != 1) goto B_d;
  a = (d + 8)[0]:int;
  if (eqz(a)) goto B_a;
  alloc_alloc_handle_alloc_error_h45a714900d29bef5(d[1]:int, a);
  unreachable;
  label B_d:
  a[0]:long@4 = d[1]:long@4;
  g_a = d + 32;
  return ;
  label B_a:
  alloc_raw_vec_capacity_overflow_h56c8d20d9eefc93d();
  unreachable;
}

function alloc_boxed_Box_T_A_into_unique_h64e9e6ba7b193fca(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = 24;
  var h:int = f + g;
  var i:int = h;
  core_ptr_read_h61084485bfebe2e5(i);
  var j:int = f[6];
  var k:int = f[7];
  var l:int = 16;
  var m:int = f + l;
  alloc_boxed_Box_T_A_leak_h111163d6b16be7e9(m, j, k);
  var n:int = f[5];
  var o:int = f[4];
  var p:int = 8;
  var q:int = f + p;
  core_ptr_unique_Unique_T_as_core_convert_From_mut_T_from_hca1d3f6d6eb36b85(
    q,
    o,
    n);
  var r:int = f[3];
  var s:int = f[2];
  f[8] = s;
  f[9] = r;
  var t:int = f[8];
  var u:int = f[9];
  a.b = u;
  a.a = t;
  var v:int = 48;
  var w:int = f + v;
  g_a = w;
}

function alloc_boxed_Box_T_A_into_unique_hd443f94af92c0dd1(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = 24;
  var h:int = f + g;
  var i:int = h;
  core_ptr_read_h61084485bfebe2e5(i);
  var j:int = f[6];
  var k:int = f[7];
  var l:int = 16;
  var m:int = f + l;
  alloc_boxed_Box_T_A_leak_h6a63ee9de5125507(m, j, k);
  var n:int = f[5];
  var o:int = f[4];
  var p:int = 8;
  var q:int = f + p;
  core_ptr_unique_Unique_T_as_core_convert_From_mut_T_from_h43e9525d54de8e07(
    q,
    o,
    n);
  var r:int = f[3];
  var s:int = f[2];
  f[8] = s;
  f[9] = r;
  var t:int = f[8];
  var u:int = f[9];
  a.b = u;
  a.a = t;
  var v:int = 48;
  var w:int = f + v;
  g_a = w;
}

function alloc_boxed_Box_T_A_into_unique_h5bc6ca925f8691a7(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = 24;
  var h:int = f + g;
  var i:int = h;
  core_ptr_read_h8b1d2132530ddc7f(i);
  var j:int = f[6];
  var k:int = f[7];
  var l:int = 16;
  var m:int = f + l;
  alloc_boxed_Box_T_A_leak_h0bf4af6eaa85b63b(m, j, k);
  var n:int = f[5];
  var o:int = f[4];
  var p:int = 8;
  var q:int = f + p;
  core_ptr_unique_Unique_T_as_core_convert_From_mut_T_from_h68da51a81768ce98(
    q,
    o,
    n);
  var r:int = f[3];
  var s:int = f[2];
  f[8] = s;
  f[9] = r;
  var t:int = f[8];
  var u:int = f[9];
  a.b = u;
  a.a = t;
  var v:int = 48;
  var w:int = f + v;
  g_a = w;
}

function alloc_boxed_Box_T_A_leak_h111163d6b16be7e9(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  f[8] = b;
  f[9] = c;
  f[6] = b;
  f[7] = c;
  var g:int = f[6];
  var h:int = f[7];
  f[3] = h;
  f[2] = g;
  var i:int = 8;
  var j:int = f + i;
  var k:int = j;
  f[11] = k;
  var l:int = 8;
  var m:int = f + l;
  var n:{ a:int, b:int } = m;
  var o:int = n.a;
  var p:int = n.b;
  core_ptr_unique_Unique_T_as_ptr_h2e81056810c4504b(f, o, p);
  var q:int = f[1];
  var r:int = f[0];
  a.b = q;
  a.a = r;
  var s:int = 48;
  var t:int = f + s;
  g_a = t;
}

function alloc_boxed_Box_T_A_leak_h6a63ee9de5125507(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  f[8] = b;
  f[9] = c;
  f[6] = b;
  f[7] = c;
  var g:int = f[6];
  var h:int = f[7];
  f[3] = h;
  f[2] = g;
  var i:int = 8;
  var j:int = f + i;
  var k:int = j;
  f[11] = k;
  var l:int = 8;
  var m:int = f + l;
  var n:{ a:int, b:int } = m;
  var o:int = n.a;
  var p:int = n.b;
  core_ptr_unique_Unique_T_as_ptr_h89ceb27563bff787(f, o, p);
  var q:int = f[1];
  var r:int = f[0];
  a.b = q;
  a.a = r;
  var s:int = 48;
  var t:int = f + s;
  g_a = t;
}

function alloc_boxed_Box_T_A_leak_h0bf4af6eaa85b63b(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  f[8] = b;
  f[9] = c;
  f[6] = b;
  f[7] = c;
  var g:int = f[6];
  var h:int = f[7];
  f[3] = h;
  f[2] = g;
  var i:int = 8;
  var j:int = f + i;
  var k:int = j;
  f[11] = k;
  var l:int = 8;
  var m:int = f + l;
  var n:{ a:int, b:int } = m;
  var o:int = n.a;
  var p:int = n.b;
  core_ptr_unique_Unique_T_as_ptr_h5ea11eb5b31f8006(f, o, p);
  var q:int = f[1];
  var r:int = f[0];
  a.b = q;
  a.a = r;
  var s:int = 48;
  var t:int = f + s;
  g_a = t;
}

function match_twenty_sign_ff_h987cd8ee6b2ffbed(a:int, b:int, c:int, d:int, e:int, f:int):int {
  var g:int = g_a;
  var h:int = 64;
  var i:int_ptr = g - h;
  g_a = i;
  i[1] = a;
  i[2] = b;
  i[3] = c;
  i[4] = d;
  i[5] = e;
  i[6] = f;
  var j:int = match_twenty_sign_f_h519ec698e229a18f(b, c, d);
  i[7] = a;
  i[8] = j;
  var k:int = a + j;
  i[14] = k;
  i[15] = e;
  var l:int = k + e;
  i[11] = l;
  i[12] = f;
  var m:int = l << f;
  i[13] = m;
  var n:int = i[13];
  i[9] = n;
  i[10] = b;
  var o:int = n + b;
  var p:int = 64;
  var q:int = i + p;
  g_a = q;
  return o;
}

function match_twenty_sign_gg_h0bc14fece0614bb7(a:int, b:int, c:int, d:int, e:int, f:int):int {
  var g:int = g_a;
  var h:int = 64;
  var i:int_ptr = g - h;
  g_a = i;
  i[1] = a;
  i[2] = b;
  i[3] = c;
  i[4] = d;
  i[5] = e;
  i[6] = f;
  var j:int = match_twenty_sign_g_h2ae454331f5a4e9d(b, c, d);
  i[7] = a;
  i[8] = j;
  var k:int = a + j;
  i[14] = k;
  i[15] = e;
  var l:int = k + e;
  i[11] = l;
  i[12] = f;
  var m:int = l << f;
  i[13] = m;
  var n:int = i[13];
  i[9] = n;
  i[10] = b;
  var o:int = n + b;
  var p:int = 64;
  var q:int = i + p;
  g_a = q;
  return o;
}

function match_twenty_sign_hh_hab51d95fe96a8025(a:int, b:int, c:int, d:int, e:int, f:int):int {
  var g:int = g_a;
  var h:int = 64;
  var i:int_ptr = g - h;
  g_a = i;
  i[1] = a;
  i[2] = b;
  i[3] = c;
  i[4] = d;
  i[5] = e;
  i[6] = f;
  var j:int = match_twenty_sign_h_h1eb034bf1284c53a(b, c, d);
  i[7] = a;
  i[8] = j;
  var k:int = a + j;
  i[14] = k;
  i[15] = e;
  var l:int = k + e;
  i[11] = l;
  i[12] = f;
  var m:int = l << f;
  i[13] = m;
  var n:int = i[13];
  i[9] = n;
  i[10] = b;
  var o:int = n + b;
  var p:int = 64;
  var q:int = i + p;
  g_a = q;
  return o;
}

function match_twenty_sign_ii_h842e08d6d70c5e90(a:int, b:int, c:int, d:int, e:int, f:int):int {
  var g:int = g_a;
  var h:int = 64;
  var i:int_ptr = g - h;
  g_a = i;
  i[1] = a;
  i[2] = b;
  i[3] = c;
  i[4] = d;
  i[5] = e;
  i[6] = f;
  var j:int = match_twenty_sign_i_h2d14fd979edfc150(b, c, d);
  i[7] = a;
  i[8] = j;
  var k:int = a + j;
  i[14] = k;
  i[15] = e;
  var l:int = k + e;
  i[11] = l;
  i[12] = f;
  var m:int = l << f;
  i[13] = m;
  var n:int = i[13];
  i[9] = n;
  i[10] = b;
  var o:int = n + b;
  var p:int = 64;
  var q:int = i + p;
  g_a = q;
  return o;
}

function wasm_bindgen_rt_take_last_exception_h53df007034b9d426(a:{ a:int, b:int }) {
  var o:int;
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  var e:int_ptr = 0;
  var f:int = e[263666];
  var g:int = 1;
  var h:int = f;
  var i:int = g;
  var j:int = h == i;
  var k:int = 1;
  var l:int = j & k;
  if (eqz(l)) goto B_c;
  var m:int_ptr = 0;
  var n:int = m[263667];
  o = wasm_bindgen_JsValue_new_hba5f1700cca2fb16(n);
  goto B_b;
  label B_c:
  var p:int = 0;
  d[2] = p;
  goto B_a;
  label B_b:
  d[3] = o;
  var q:int = 1;
  d[2] = q;
  label B_a:
  var r:int_ptr = 0;
  r[263666] = r;
  r[263667] = r;
  var s:int = d[2];
  var t:int = d[3];
  a.b = t;
  a.a = s;
  var u:int = 16;
  var v:int = d + u;
  g_a = v;
}

function alloc_collections_TryReserveErrorKind_as_core_clone_Clone_clone_hb9068c3aaaa7478b(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:{ a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int } =
    c - d;
  g_a = e;
  e.f = b;
  e.e = b;
  var f:int_ptr = e.e;
  var g:int = f[1];
  var h:int = 0;
  var i:int = g != h;
  br_table[B_c, B_b, ..B_c](i)
  label B_c:
  var j:int = 0;
  e.d = j;
  goto B_a;
  label B_b:
  var k:int = e.e;
  e.g = k;
  var l:int = e.e;
  e.h = l;
  core_alloc_layout_Layout_as_core_clone_Clone_clone_h14e59157dfd23f47(
    e,
    k);
  var m:int = e.b;
  var n:int = e.a;
  core_clone_Clone_clone_h5f2641c39188718d(l);
  e.c = n;
  e.d = m;
  label B_a:
  var o:int = e.c;
  var p:int = e.d;
  a.b = p;
  a.a = o;
  var q:int = 32;
  var r:int = e + q;
  g_a = r;
}

function core_iter_adapters_step_by_StepBy_I_new_hdf1932be37da85ea(a:{ a:int, b:int, c:int, d:byte }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 16;
  var g:int_ptr = e - f;
  g_a = g;
  g[0] = b;
  g[1] = c;
  g[3] = d;
  var h:int = 0;
  var i:int = d;
  var j:int = h;
  var k:int = i != j;
  var l:int = -1;
  var m:int = k ^ l;
  var n:int = 1;
  var o:int = m & n;
  if (o) goto B_a;
  var p:int = 1;
  var q:int = d - p;
  a.a = b;
  a.b = c;
  a.c = q;
  var r:int = 1;
  a.d = r;
  var s:int = 16;
  var t:int = g + s;
  g_a = t;
  return ;
  label B_a:
  var u:int = 1048905;
  var v:int = u;
  var w:int = 27;
  var x:int = 1049024;
  var y:int = x;
  core_panicking_panic_hceae0c79b0247f98(v, w, y);
  unreachable;
}

function core_slice_impl_T_split_at_unchecked_he0347686b9eda1d1(a:{ a:int, b:int, c:int, d:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 48;
  var g:int_ptr = e - f;
  g_a = g;
  g[8] = b;
  g[9] = c;
  g[11] = d;
  g[6] = d;
  var h:int = g[6];
  var i:int = 16;
  var j:int = g + i;
  core_slice_impl_T_get_unchecked_hd1dc3b984e51e678(j, b, c, h);
  var k:int = g[5];
  var l:int = g[4];
  g[7] = d;
  var m:int = g[7];
  var n:int = 8;
  var o:int = g + n;
  core_slice_impl_T_get_unchecked_h66095cdf0df92508(o, b, c, m);
  var p:int = g[3];
  var q:int = g[2];
  a.a = l;
  a.b = k;
  a.c = q;
  a.d = p;
  var r:int = 48;
  var s:int = g + r;
  g_a = s;
}

function core_cmp_impls_impl_core_cmp_Ord_for_usize_cmp_h7dc086cef8422b00(a:int_ptr, b:int_ptr):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int = c - d;
  e[2]:int = a;
  e[3]:int = b;
  var f:int = a[0];
  var g:int = b[0];
  var h:int = f;
  var i:int = g;
  var j:int = h < i;
  var k:int = 1;
  var l:int = j & k;
  if (l) goto B_e;
  var m:int = a[0];
  var n:int = b[0];
  var o:int = m;
  var p:int = n;
  var q:int = o == p;
  var r:int = 1;
  var s:int = q & r;
  if (s) goto B_c;
  goto B_d;
  label B_e:
  var t:int = 255;
  e[7]:byte = t;
  goto B_a;
  label B_d:
  var u:int = 1;
  e[7]:byte = u;
  goto B_b;
  label B_c:
  var v:int = 0;
  e[7]:byte = v;
  label B_b:
  label B_a:
  var w:int = e[7]:ubyte;
  return w;
}

function alloc_raw_vec_alloc_guard_hfdc5e8f0c8c82ea9(a:{ a:int, b:int, c:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[7] = b;
  var f:int = 2147483647;
  var g:int = b;
  var h:int = f;
  var i:int = g > h;
  var j:int = 1;
  var k:int = i & j;
  if (k) goto B_b;
  var l:int = 0;
  a.a = l;
  goto B_a;
  label B_b:
  var m:int = 0;
  e[5] = m;
  var n:int = e[4];
  var o:int = e[5];
  var p:int = 8;
  var q:int = e + p;
  T_as_core_convert_Into_U_into_h6eedd7c65925ce3f(q, n, o);
  var r:int = e[3];
  var s:int = e[2];
  a.b = s;
  a.c = r;
  var t:int = 1;
  a.a = t;
  label B_a:
  var u:int = 32;
  var v:int = e + u;
  g_a = v;
}

function wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_vec_Vec_T_into_abi_hcbd3(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 32;
  var e:{ a:int, b:int, c:int, d:int } = c - d;
  g_a = e;
  var f:int = 16;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var w:long = b[0];
  h[0] = w;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 8;
  var n:int = e + m;
  var o:int = 16;
  var p:int = e + o;
  alloc_vec_Vec_T_A_into_boxed_slice_h023d93048a245460(n, p);
  var q:int = e.d;
  var r:int = e.c;
  wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_boxed_Box_wasm_bindgen_J(
    e,
    r,
    q);
  var s:int = e.b;
  var t:int = e.a;
  a.b = s;
  a.a = t;
  var u:int = 32;
  var v:int = e + u;
  g_a = v;
}

function wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_vec_Vec_T_into_abi_hadf1(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 32;
  var e:{ a:int, b:int, c:int, d:int } = c - d;
  g_a = e;
  var f:int = 16;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var w:long = b[0];
  h[0] = w;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 8;
  var n:int = e + m;
  var o:int = 16;
  var p:int = e + o;
  alloc_vec_Vec_T_A_into_boxed_slice_h4952823940574848(n, p);
  var q:int = e.d;
  var r:int = e.c;
  wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_boxed_Box_u8_into_abi_hb(
    e,
    r,
    q);
  var s:int = e.b;
  var t:int = e.a;
  a.b = s;
  a.a = t;
  var u:int = 32;
  var v:int = e + u;
  g_a = v;
}

function alloc_raw_vec_alloc_guard_hde16a2763e2c8a9b(a:{ a:int, b:int, c:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[7] = b;
  var f:int = 2147483647;
  var g:int = b;
  var h:int = f;
  var i:int = g > h;
  var j:int = 1;
  var k:int = i & j;
  if (k) goto B_b;
  var l:int = 0;
  a.a = l;
  goto B_a;
  label B_b:
  var m:int = 0;
  e[5] = m;
  var n:int = e[4];
  var o:int = e[5];
  var p:int = 8;
  var q:int = e + p;
  T_as_core_convert_Into_U_into_h6eedd7c65925ce3f(q, n, o);
  var r:int = e[3];
  var s:int = e[2];
  a.b = s;
  a.c = r;
  var t:int = 1;
  a.a = t;
  label B_a:
  var u:int = 32;
  var v:int = e + u;
  g_a = v;
}

function core_cmp_impls_impl_core_cmp_Ord_for_usize_cmp_h29acab65d858e343(a:int_ptr, b:int_ptr):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int = c - d;
  e[2]:int = a;
  e[3]:int = b;
  var f:int = a[0];
  var g:int = b[0];
  var h:int = f;
  var i:int = g;
  var j:int = h < i;
  var k:int = 1;
  var l:int = j & k;
  if (l) goto B_e;
  var m:int = a[0];
  var n:int = b[0];
  var o:int = m;
  var p:int = n;
  var q:int = o == p;
  var r:int = 1;
  var s:int = q & r;
  if (s) goto B_c;
  goto B_d;
  label B_e:
  var t:int = 255;
  e[7]:byte = t;
  goto B_a;
  label B_d:
  var u:int = 1;
  e[7]:byte = u;
  goto B_b;
  label B_c:
  var v:int = 0;
  e[7]:byte = v;
  label B_b:
  label B_a:
  var w:int = e[7]:ubyte;
  return w;
}

function panicking_begin_panic_handler_PanicPayload_as_core_panic_BoxMeUp_get_h023e80216351dde5(a:{ a:int, b:int }, b:int) {
  var c:int = g_a - 48;
  g_a = c;
  var d:long_ptr@4 = b + 4;
  if (b[1]:int) goto B_a;
  b = b[0]:int;
  c[3]:long@4 = 0L;
  c[2]:int = d_srcsignrsMMMCMZcalledOptionu[1279]:int;
  c[5]:int = c + 8;
  (c + 24 + 16)[0]:long = (b + 16)[0]:long@4;
  (c + 24 + 8)[0]:long = (b + 8)[0]:long@4;
  c[3]:long = b[0]:long@4;
  core_fmt_write_hb363a5cc37db74af(c + 20, 1053624, c + 24);
  (d + 8)[0]:int = (c + 8 + 8)[0]:int;
  d[0] = c[1]:long;
  label B_a:
  a.b = 1053812;
  a.a = d;
  g_a = c + 48;
}

function core_ops_range_Range_T_as_core_iter_range_RangeIteratorImpl_spec_next_h04a97a339d488b07(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:{ a:int, b:int, c:int, d:int } = c - d;
  g_a = e;
  e.c = b;
  var f:int = 4;
  var g:int = b + f;
  var h:int =
    core_cmp_impls_impl_core_cmp_PartialOrd_for_usize_lt_h5a5760edc4e97d2e(
      b,
      g);
  var i:int = 1;
  var j:int = h & i;
  if (j) goto B_b;
  var k:int = 0;
  e.a = k;
  goto B_a;
  label B_b:
  var l:int =
    core_clone_impls_impl_core_clone_Clone_for_usize_clone_h59e1769a8b1f0beb(
      b);
  var m:int = 1;
  var n:int =
    usize_as_core_iter_range_Step_forward_unchecked_h7025af2f31cc6430(l, m);
  e.d = n;
  var o:int = core_mem_replace_h7cd2cdcc662d43a5(b, n);
  e.b = o;
  var p:int = 1;
  e.a = p;
  label B_a:
  var q:int = e.a;
  var r:int = e.b;
  a.b = r;
  a.a = q;
  var s:int = 16;
  var t:int = e + s;
  g_a = t;
}

function core_ops_range_Range_T_as_core_iter_range_RangeIteratorImpl_spec_next_h6d0e82e7c1fe4f02(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:{ a:int, b:int, c:int, d:int } = c - d;
  g_a = e;
  e.c = b;
  var f:int = 4;
  var g:int = b + f;
  var h:int =
    core_cmp_impls_impl_core_cmp_PartialOrd_for_i32_lt_h53dde44c4598c27a(
      b,
      g);
  var i:int = 1;
  var j:int = h & i;
  if (j) goto B_b;
  var k:int = 0;
  e.a = k;
  goto B_a;
  label B_b:
  var l:int =
    core_clone_impls_impl_core_clone_Clone_for_i32_clone_h3da5ad231a363afc(
      b);
  var m:int = 1;
  var n:int =
    i32_as_core_iter_range_Step_forward_unchecked_h4b08274e4b64a49a(l, m);
  e.d = n;
  var o:int = core_mem_replace_h1facca175f1c381c(b, n);
  e.b = o;
  var p:int = 1;
  e.a = p;
  label B_a:
  var q:int = e.a;
  var r:int = e.b;
  a.b = r;
  a.a = q;
  var s:int = 16;
  var t:int = e + s;
  g_a = t;
}

function core_option_Option_T_ok_or_h0f700fd4898544fa(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int = d - e;
  f[0]:int = b;
  f[1]:int = c;
  var g:int = 0;
  f[23]:byte = g;
  var h:int = 1;
  f[23]:byte = h;
  var i:int = f[0]:int;
  br_table[B_c, B_b, ..B_c](i)
  label B_c:
  var j:int = 0;
  f[23]:byte = j;
  var k:int = 1;
  f[2]:int = k;
  goto B_a;
  label B_b:
  var l:int = f[1]:int;
  f[7]:int = l;
  f[3]:int = l;
  var m:int = 0;
  f[2]:int = m;
  label B_a:
  var n:int = f[23]:ubyte;
  var o:int = 1;
  var p:int = n & o;
  if (eqz(p)) goto B_d
  label B_d:
  var q:int = f[2]:int;
  var r:int = f[3]:int;
  a.b = r;
  a.a = q;
}

function core_option_Option_T_ok_or_he3d44d7429a7b916(a:{ a:int, b:int, c:int }, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 32;
  var h:int = f - g;
  h[0]:int = b;
  h[1]:int = c;
  h[4]:int = d;
  h[5]:int = e;
  var i:int = 0;
  h[15]:byte = i;
  var j:int = 1;
  h[15]:byte = j;
  var k:int = h[0]:int;
  br_table[B_c, B_b, ..B_c](k)
  label B_c:
  var l:int = 0;
  h[15]:byte = l;
  a.b = d;
  a.c = e;
  var m:int = 1;
  a.a = m;
  goto B_a;
  label B_b:
  var n:int = h[1]:int;
  h[7]:int = n;
  a.b = n;
  var o:int = 0;
  a.a = o;
  label B_a:
  var p:int = h[15]:ubyte;
  var q:int = 1;
  var r:int = p & q;
  if (eqz(r)) goto B_d
  label B_d:
}

function core_result_Result_T_E_ok_h28fac71484392cc5(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[2] = b;
  f[3] = c;
  var g:int = f[2];
  br_table[B_c, B_b, ..B_c](g)
  label B_c:
  var h:int = f[3];
  f[7] = h;
  f[5] = h;
  var i:int = 1;
  f[4] = i;
  goto B_a;
  label B_b:
  var j:int = 0;
  f[4] = j;
  label B_a:
  var k:int = f[2];
  if (eqz(k)) goto B_d;
  var l:int = 8;
  var m:int = f + l;
  var n:int = m;
  core_ptr_drop_in_place_core_result_Result_web_sys_features_gen_Window_Window_js_sys_Object_hecd79eb1(
    n);
  label B_d:
  var o:int = f[4];
  var p:int = f[5];
  a.b = p;
  a.a = o;
  var q:int = 32;
  var r:int = f + q;
  g_a = r;
}

function core_result_Result_T_E_ok_hc8e02b1dab832ba2(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[2] = b;
  f[3] = c;
  var g:int = f[2];
  br_table[B_c, B_b, ..B_c](g)
  label B_c:
  var h:int = f[3];
  f[7] = h;
  f[5] = h;
  var i:int = 1;
  f[4] = i;
  goto B_a;
  label B_b:
  var j:int = 0;
  f[4] = j;
  label B_a:
  var k:int = f[2];
  if (eqz(k)) goto B_d;
  var l:int = 8;
  var m:int = f + l;
  var n:int = m;
  core_ptr_drop_in_place_core_result_Result_wasm_bindgen_JsValue_wasm_bindgen_JsValue_h2286174c4da2725(
    n);
  label B_d:
  var o:int = f[4];
  var p:int = f[5];
  a.b = p;
  a.a = o;
  var q:int = 32;
  var r:int = f + q;
  g_a = r;
}

function thread_local_statik_Key_T_get_hd83acac61c0ab6c1(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = a;
  e[6] = b;
  var f:int = thread_local_lazy_LazyKeyInner_T_get_h37d812a295a56be1(a);
  e[4] = f;
  var g:int = e[4];
  var h:int = 0;
  var i:int = g != h;
  br_table[B_d, B_c, ..B_d](i)
  label B_d:
  var j:int =
    thread_local_lazy_LazyKeyInner_T_initialize_h52ca8ab9c342dd73(a, b);
  e[3] = j;
  goto B_b;
  label B_c:
  var k:int = 16;
  var l:int = e + k;
  var m:int = l;
  e[7] = m;
  var n:int = e[4];
  e[3] = n;
  goto B_a;
  label B_b:
  label B_a:
  var o:int = e[3];
  e[2] = o;
  var p:int = e[2];
  var q:int = 32;
  var r:int = e + q;
  g_a = r;
  return p;
}

function thread_local_statik_Key_T_get_hafc650927fc2e942(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = a;
  e[6] = b;
  var f:int = thread_local_lazy_LazyKeyInner_T_get_hf92aaf23b4265214(a);
  e[4] = f;
  var g:int = e[4];
  var h:int = 0;
  var i:int = g != h;
  br_table[B_d, B_c, ..B_d](i)
  label B_d:
  var j:int =
    thread_local_lazy_LazyKeyInner_T_initialize_ha002256f08c24ce8(a, b);
  e[3] = j;
  goto B_b;
  label B_c:
  var k:int = 16;
  var l:int = e + k;
  var m:int = l;
  e[7] = m;
  var n:int = e[4];
  e[3] = n;
  goto B_a;
  label B_b:
  label B_a:
  var o:int = e[3];
  e[2] = o;
  var p:int = e[2];
  var q:int = 32;
  var r:int = e + q;
  g_a = r;
  return p;
}

function wasm_bindgen_cast_JsCast_dyn_into_h5f9be03c5d612028(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[1] = b;
  var f:int = 4;
  var g:int = e + f;
  var h:int = g;
  var i:int = wasm_bindgen_cast_JsCast_has_type_h143621c26baeedde(h);
  var j:int = 1;
  var k:int = i & j;
  if (k) goto B_b;
  var l:int = e[1];
  e[3] = l;
  var m:int = 1;
  e[2] = m;
  goto B_a;
  label B_b:
  var n:int = e[1];
  var o:int =
    wasm_bindgen_cast_JsCast_unchecked_into_hb0b57f3af1496fc9(n);
  e[3] = o;
  var p:int = 0;
  e[2] = p;
  label B_a:
  var q:int = e[2];
  var r:int = e[3];
  a.b = r;
  a.a = q;
  var s:int = 16;
  var t:int = e + s;
  g_a = t;
}

function core_alloc_layout_Layout_pad_to_align_h0c083f8ef4d4d45f(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = b;
  var f:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(b);
  var g:int =
    core_alloc_layout_Layout_padding_needed_for_h7a72f5f24d93ce08(b, f);
  e[6] = g;
  var h:int = core_alloc_layout_Layout_size_h23e58bed513508c1(b);
  var i:int = h + g;
  e[7] = i;
  var j:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(b);
  var k:int = 8;
  var l:int = e + k;
  core_alloc_layout_Layout_from_size_align_h9c34f4959836e663(l, i, j);
  var m:int = e[3];
  var n:int = e[2];
  var o:int = 1052052;
  core_result_Result_T_E_unwrap_h303b8f9c11d3f6a2(e, n, m, o);
  var p:int = e[1];
  var q:int = e[0];
  a.b = p;
  a.a = q;
  var r:int = 32;
  var s:int = e + r;
  g_a = s;
}

function core_alloc_layout_Layout_pad_to_align_h052e77cbe477272a(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = b;
  var f:int = core_alloc_layout_Layout_align_he66d4e1016473d9e(b);
  var g:int =
    core_alloc_layout_Layout_padding_needed_for_h7ace4e8ef7657e27(b, f);
  e[6] = g;
  var h:int = core_alloc_layout_Layout_size_hd03d4df4a572a4a6(b);
  var i:int = h + g;
  e[7] = i;
  var j:int = core_alloc_layout_Layout_align_he66d4e1016473d9e(b);
  var k:int = 8;
  var l:int = e + k;
  core_alloc_layout_Layout_from_size_align_h757715589b9446af(l, i, j);
  var m:int = e[3];
  var n:int = e[2];
  var o:int = 1052432;
  core_result_Result_T_E_unwrap_h303b8f9c11d3f6a2(e, n, m, o);
  var p:int = e[1];
  var q:int = e[0];
  a.b = p;
  a.a = q;
  var r:int = 32;
  var s:int = e + r;
  g_a = s;
}

function wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_str_into_abi_h59670f2c5b8d351a(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[2] = b;
  f[3] = c;
  var g:int = f[2];
  var h:int = f[3];
  var i:int = 16;
  var j:int = f + i;
  var k:int = j;
  wasm_bindgen_convert_slices_unsafe_get_cached_str_h456c139fb3405569(k,
                                                                      g,
                                                                      h);
  var l:int = 8;
  var m:int = f + l;
  var n:int = m;
  f[7] = n;
  var o:int = f[7];
  var p:int = 16;
  var q:int = f + p;
  core_option_Option_T_unwrap_or_else_h2fcb85da59ecd33e(f, q, o);
  var r:int = f[1];
  var s:int = f[0];
  a.b = r;
  a.a = s;
  var t:int = 32;
  var u:int = f + t;
  g_a = u;
}

function alloc_vec_Vec_T_A_append_elements_hc5fc9ba3fefb39cb(a:int_ptr, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  f[5] = c;
  alloc_vec_Vec_T_A_reserve_h4366fa0b9e11541f(a, c);
  var g:int = alloc_vec_Vec_T_A_len_h1c78540e29c262ca(a);
  f[6] = g;
  var h:int = alloc_vec_Vec_T_A_as_mut_ptr_h834293a9eeb4907e(a);
  f[7] = h;
  f[8] = g;
  f[9] = h;
  f[10] = g;
  var i:int = h + g;
  f[11] = i;
  var j:int = f[11];
  core_intrinsics_copy_nonoverlapping_h2eac84473f2f528f(b, j, c);
  var k:int = a[2];
  var l:int = k + c;
  a[2] = l;
  var m:int = 48;
  var n:int = f + m;
  g_a = n;
}

function core_result_Result_T_E_unwrap_h303b8f9c11d3f6a2(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 32;
  var g:int_ptr = e - f;
  g_a = g;
  g[2] = b;
  g[3] = c;
  var h:int = g[3];
  var i:int = eqz(h);
  br_table[B_b, B_a, ..B_b](i)
  label B_b:
  var j:int = g[2];
  var k:int = g[3];
  g[6] = j;
  g[7] = k;
  a.b = k;
  a.a = j;
  var l:int = 32;
  var m:int = g + l;
  g_a = m;
  return ;
  label B_a:
  var n:int = 16;
  var o:int = g + n;
  var p:int = o;
  var q:int = 1052585;
  var r:int = q;
  var s:int = 43;
  var t:int = 1052628;
  var u:int = t;
  core_result_unwrap_failed_h694db13a45aa6740(r, s, p, u, d);
  unreachable;
}

function core_ops_range_Range_usize_as_core_slice_index_SliceIndex_T_get_unchecked_h35ec22132b168097(a:{ a:int, b:int }, b:int, c:int, d:int, e:int) {
  var f:int = g_a;
  var g:int = 48;
  var h:int_ptr = f - g;
  g_a = h;
  h[2] = b;
  h[3] = c;
  h[4] = d;
  h[5] = e;
  var i:int = core_ptr_ptr_impl_T_as_ptr_he51d0aec9574f809(d, e);
  h[7] = i;
  h[8] = b;
  h[9] = i;
  h[10] = b;
  var j:int = i + b;
  h[11] = j;
  var k:int = h[11];
  var l:int = c - b;
  core_ptr_slice_from_raw_parts_hdb5bffc0dde131b5(h, k, l);
  var m:int = h[1];
  var n:int = h[0];
  a.b = m;
  a.a = n;
  var o:int = 48;
  var p:int = h + o;
  g_a = p;
}

function alloc_raw_vec_finish_grow_h3f2745a59523b24f(a:{ a:int, b:int }, b:int, c:int, d:{ a:int, b:int }) {
  var f:int;
  var e:int;
  if (eqz(c)) goto B_g;
  e = 1;
  if (b < 0) goto B_f;
  f = d.a;
  if (eqz(f)) goto B_d;
  d = d.b;
  if (d) goto B_e;
  if (b) goto B_c;
  d = c;
  goto B_b;
  label B_g:
  a.b = b;
  e = 1;
  label B_f:
  b = 0;
  goto B_a;
  label B_e:
  d = rust_realloc(f, d, c, b);
  goto B_b;
  label B_d:
  if (b) goto B_c;
  d = c;
  goto B_b;
  label B_c:
  d = rust_alloc(b, c);
  label B_b:
  if (eqz(d)) goto B_h;
  a.b = d;
  e = 0;
  goto B_a;
  label B_h:
  a.b = b;
  b = c;
  label B_a:
  a.a = e;
  (a + 8)[0]:int = b;
}

function alloc_raw_vec_finish_grow_h1e1788118171b0ee(a:{ a:int, b:int }, b:int, c:int, d:{ a:int, b:int }) {
  var f:int;
  var e:int;
  if (eqz(c)) goto B_g;
  e = 1;
  if (b < 0) goto B_f;
  f = d.a;
  if (eqz(f)) goto B_d;
  d = d.b;
  if (d) goto B_e;
  if (b) goto B_c;
  d = c;
  goto B_b;
  label B_g:
  a.b = b;
  e = 1;
  label B_f:
  b = 0;
  goto B_a;
  label B_e:
  d = rust_realloc(f, d, c, b);
  goto B_b;
  label B_d:
  if (b) goto B_c;
  d = c;
  goto B_b;
  label B_c:
  d = rust_alloc(b, c);
  label B_b:
  if (eqz(d)) goto B_h;
  a.b = d;
  e = 0;
  goto B_a;
  label B_h:
  a.b = b;
  b = c;
  label B_a:
  a.a = e;
  (a + 8)[0]:int = b;
}

function T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h6f23e352409c8535(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  var f:int = 16;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var u:long = b[0];
  h[0] = u;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 8;
  var n:int = e + m;
  var o:int = 16;
  var p:int = e + o;
  wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_string_String_into_abi_h(
    n,
    p);
  var q:int = e[3];
  var r:int = e[2];
  a.b = q;
  a.a = r;
  var s:int = 32;
  var t:int = e + s;
  g_a = t;
}

function u32_as_core_ops_bit_Shr_i32_shr_he040aceb879d1e9c(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = -32;
  var g:int = b & f;
  var h:int = 0;
  var i:int = g;
  var j:int = h;
  var k:int = i != j;
  var l:int = 31;
  var m:int = b & l;
  var n:int = a >> m;
  var o:int = 1;
  var p:int = k & o;
  if (p) goto B_a;
  var q:int = 16;
  var r:int = e + q;
  g_a = r;
  return n;
  label B_a:
  var s:int = 1049136;
  var t:int = s;
  var u:int = 36;
  var v:int = 1049116;
  var w:int = v;
  core_panicking_panic_hceae0c79b0247f98(t, u, w);
  return unreachable;
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hf58cc5d16ffdbe96(a:{ a:int, b:int, c:int }, b:{ a:int, b:int, c:int }) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  var f:int = b.a;
  br_table[B_c, B_b, ..B_c](f)
  label B_c:
  var g:int = b.b;
  var h:int = b.c;
  e[6] = g;
  e[7] = h;
  a.b = g;
  a.c = h;
  var i:int = 0;
  a.a = i;
  goto B_a;
  label B_b:
  var j:int = b.b;
  var k:int = b.c;
  e[4] = j;
  e[5] = k;
  e[2] = j;
  e[3] = k;
  var l:int = e[2];
  var m:int = e[3];
  a.b = l;
  a.c = m;
  var n:int = 1;
  a.a = n;
  label B_a:
}

function T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h86f7b5ca4e1a3578(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  var f:int = 16;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var u:long = b[0];
  h[0] = u;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 8;
  var n:int = e + m;
  var o:int = 16;
  var p:int = e + o;
  wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_vec_Vec_T_into_abi_hcbd3(
    n,
    p);
  var q:int = e[3];
  var r:int = e[2];
  a.b = q;
  a.a = r;
  var s:int = 32;
  var t:int = e + s;
  g_a = t;
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h3781b88636f83108(a:{ a:int, b:int, c:int }, b:{ a:int, b:int, c:int }) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  var f:int = b.a;
  br_table[B_c, B_b, ..B_c](f)
  label B_c:
  var g:int = b.b;
  var h:int = b.c;
  e[6] = g;
  e[7] = h;
  a.b = g;
  a.c = h;
  var i:int = 0;
  a.a = i;
  goto B_a;
  label B_b:
  var j:int = b.b;
  var k:int = b.c;
  e[4] = j;
  e[5] = k;
  e[2] = j;
  e[3] = k;
  var l:int = e[2];
  var m:int = e[3];
  a.b = l;
  a.c = m;
  var n:int = 1;
  a.a = n;
  label B_a:
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h0ba23edeaa9d2964(a:{ a:int, b:int, c:int }, b:{ a:int, b:int, c:int }) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  var f:int = b.a;
  br_table[B_c, B_b, ..B_c](f)
  label B_c:
  var g:int = b.b;
  var h:int = b.c;
  e[6] = g;
  e[7] = h;
  a.b = g;
  a.c = h;
  var i:int = 0;
  a.a = i;
  goto B_a;
  label B_b:
  var j:int = b.b;
  var k:int = b.c;
  e[4] = j;
  e[5] = k;
  e[2] = j;
  e[3] = k;
  var l:int = e[2];
  var m:int = e[3];
  a.b = l;
  a.c = m;
  var n:int = 1;
  a.a = n;
  label B_a:
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hd25eed3a43a2d519(a:{ a:int, b:int, c:int }, b:{ a:int, b:int, c:int }) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  var f:int = b.a;
  br_table[B_c, B_b, ..B_c](f)
  label B_c:
  var g:int = b.b;
  var h:int = b.c;
  e[6] = g;
  e[7] = h;
  a.b = g;
  a.c = h;
  var i:int = 0;
  a.a = i;
  goto B_a;
  label B_b:
  var j:int = b.b;
  var k:int = b.c;
  e[4] = j;
  e[5] = k;
  e[2] = j;
  e[3] = k;
  var l:int = e[2];
  var m:int = e[3];
  a.b = l;
  a.c = m;
  var n:int = 1;
  a.a = n;
  label B_a:
}

function alloc_boxed_Box_T_A_into_raw_with_h481304091064558a(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = 8;
  var h:int = f + g;
  alloc_boxed_Box_T_A_into_unique_hd443f94af92c0dd1(h, b, c);
  var i:int = f[3];
  var j:int = f[2];
  f[10] = j;
  f[11] = i;
  core_ptr_unique_Unique_T_as_ptr_h89ceb27563bff787(f, j, i);
  var k:int = f[1];
  var l:int = f[0];
  f[4] = l;
  f[5] = k;
  var m:int = f[4];
  var n:int = f[5];
  a.b = n;
  a.a = m;
  var o:int = 48;
  var p:int = f + o;
  g_a = p;
}

function alloc_boxed_Box_T_A_into_raw_with_hf2bccf6f46e1a700(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = 8;
  var h:int = f + g;
  alloc_boxed_Box_T_A_into_unique_h64e9e6ba7b193fca(h, b, c);
  var i:int = f[3];
  var j:int = f[2];
  f[10] = j;
  f[11] = i;
  core_ptr_unique_Unique_T_as_ptr_h2e81056810c4504b(f, j, i);
  var k:int = f[1];
  var l:int = f[0];
  f[4] = l;
  f[5] = k;
  var m:int = f[4];
  var n:int = f[5];
  a.b = n;
  a.a = m;
  var o:int = 48;
  var p:int = f + o;
  g_a = p;
}

function alloc_boxed_Box_T_A_into_raw_with_hf71d5a4baae9a94b(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = 8;
  var h:int = f + g;
  alloc_boxed_Box_T_A_into_unique_h5bc6ca925f8691a7(h, b, c);
  var i:int = f[3];
  var j:int = f[2];
  f[10] = j;
  f[11] = i;
  core_ptr_unique_Unique_T_as_ptr_h5ea11eb5b31f8006(f, j, i);
  var k:int = f[1];
  var l:int = f[0];
  f[4] = l;
  f[5] = k;
  var m:int = f[4];
  var n:int = f[5];
  a.b = n;
  a.a = m;
  var o:int = 48;
  var p:int = f + o;
  g_a = p;
}

function core_fmt_num_impl_core_fmt_LowerHex_for_i8_fmt_hd631321d4e9e6bab(a:ubyte_ptr, b:int):int {
  var e:int;
  var c:int = g_a - 128;
  g_a = c;
  var d:int = a[0];
  a = 0;
  loop L_a {
    (c + a + 127)[0]:byte = select_if(48, 87, (e = d & 15) < 10) + e;
    a = a + -1;
    e = d & 255;
    d = e >> 4;
    if (e > 15) continue L_a;
  }
  d = a + 128;
  if (d < 129) goto B_b;
  core_slice_index_slice_start_index_len_fail_hfdb57cc8dc82f9cb(d,
                                                                128,
                                                                1054324);
  unreachable;
  label B_b:
  a = core_fmt_Formatter_pad_integral_h8c76600d11a2c4b1(b,
                                                        1,
                                                        1054340,
                                                        2,
                                                        c + a + 128,
                                                        0 - a);
  g_a = c + 128;
  return a;
}

function wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_FromWasmAbi_for_alloc_boxed_Box_u8_from_abi_h5(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[8] = b;
  f[9] = c;
  var g:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_mut_T_from_abi_hc80a2d2b95712fb(
      b);
  f[10] = g;
  f[11] = c;
  var h:int = 16;
  var i:int = f + h;
  var j:int = i;
  alloc_vec_Vec_T_from_raw_parts_h27155069f293c026(j, g, c, c);
  var k:int = 8;
  var l:int = f + k;
  var m:int = 16;
  var n:int = f + m;
  alloc_vec_Vec_T_A_into_boxed_slice_h7eee598b4612be3f(l, n);
  var o:int = f[3];
  var p:int = f[2];
  a.b = o;
  a.a = p;
  var q:int = 48;
  var r:int = f + q;
  g_a = r;
}

function core_fmt_num_impl_core_fmt_LowerHex_for_i32_fmt_hfc823db6f75c4ea5(a:int_ptr, b:int):int {
  var e:int;
  var c:int = g_a - 128;
  g_a = c;
  a = a[0];
  var d:int = 0;
  loop L_a {
    (c + d + 127)[0]:byte = select_if(48, 87, (e = a & 15) < 10) + e;
    d = d + -1;
    e = a > 15;
    a = a >> 4;
    if (e) continue L_a;
  }
  a = d + 128;
  if (a < 129) goto B_b;
  core_slice_index_slice_start_index_len_fail_hfdb57cc8dc82f9cb(a,
                                                                128,
                                                                1054324);
  unreachable;
  label B_b:
  a = core_fmt_Formatter_pad_integral_h8c76600d11a2c4b1(b,
                                                        1,
                                                        1054340,
                                                        2,
                                                        c + d + 128,
                                                        0 - d);
  g_a = c + 128;
  return a;
}

function core_fmt_num_impl_core_fmt_UpperHex_for_i32_fmt_he572e423217fb9c1(a:int_ptr, b:int):int {
  var e:int;
  var c:int = g_a - 128;
  g_a = c;
  a = a[0];
  var d:int = 0;
  loop L_a {
    (c + d + 127)[0]:byte = select_if(48, 55, (e = a & 15) < 10) + e;
    d = d + -1;
    e = a > 15;
    a = a >> 4;
    if (e) continue L_a;
  }
  a = d + 128;
  if (a < 129) goto B_b;
  core_slice_index_slice_start_index_len_fail_hfdb57cc8dc82f9cb(a,
                                                                128,
                                                                1054324);
  unreachable;
  label B_b:
  a = core_fmt_Formatter_pad_integral_h8c76600d11a2c4b1(b,
                                                        1,
                                                        1054340,
                                                        2,
                                                        c + d + 128,
                                                        0 - d);
  g_a = c + 128;
  return a;
}

function core_slice_impl_T_split_at_h335a77faeae6bf0a(a:int, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 16;
  var g:int_ptr = e - f;
  g_a = g;
  g[0] = b;
  g[1] = c;
  g[3] = d;
  var h:int = d;
  var i:int = c;
  var j:int = h <= i;
  var k:int = -1;
  var l:int = j ^ k;
  var m:int = 1;
  var n:int = l & m;
  if (n) goto B_b;
  core_slice_impl_T_split_at_unchecked_he0347686b9eda1d1(a, b, c, d);
  goto B_a;
  label B_b:
  var o:int = 1049272;
  var p:int = o;
  var q:int = 35;
  var r:int = 1049308;
  var s:int = r;
  core_panicking_panic_hceae0c79b0247f98(p, q, s);
  unreachable;
  label B_a:
  var t:int = 16;
  var u:int = g + t;
  g_a = u;
}

function core_option_Option_T_ok_or_ha739d7fd5cedbb94(a:int):int {
  var b:int = g_a;
  var c:int = 32;
  var d:int = b - c;
  d[3]:int = a;
  var e:int = 0;
  d[23]:byte = e;
  var f:int = 1;
  d[23]:byte = f;
  var g:int = d[3]:int;
  var h:int = g != e;
  br_table[B_c, B_b, ..B_c](h)
  label B_c:
  var i:int = 0;
  d[23]:byte = i;
  var j:int = 0;
  d[4]:int = j;
  goto B_a;
  label B_b:
  var k:int = d[3]:int;
  d[7]:int = k;
  d[4]:int = k;
  label B_a:
  var l:int = d[23]:ubyte;
  var m:int = 1;
  var n:int = l & m;
  if (eqz(n)) goto B_d
  label B_d:
  var o:int = d[4]:int;
  return o;
}

function core_option_Option_T_ok_or_h5937c463bf2a8ab0(a:int):int {
  var b:int = g_a;
  var c:int = 32;
  var d:int = b - c;
  d[3]:int = a;
  var e:int = 0;
  d[23]:byte = e;
  var f:int = 1;
  d[23]:byte = f;
  var g:int = d[3]:int;
  var h:int = g != e;
  br_table[B_c, B_b, ..B_c](h)
  label B_c:
  var i:int = 0;
  d[23]:byte = i;
  var j:int = 0;
  d[4]:int = j;
  goto B_a;
  label B_b:
  var k:int = d[3]:int;
  d[7]:int = k;
  d[4]:int = k;
  label B_a:
  var l:int = d[23]:ubyte;
  var m:int = 1;
  var n:int = l & m;
  if (eqz(n)) goto B_d
  label B_d:
  var o:int = d[4]:int;
  return o;
}

function core_mem_replace_hd14de02155c0002a(a:int, b:int, c:long_ptr@4) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[7] = b;
  core_ptr_read_h04ae8ce0aae0f06a(a, b);
  var g:long_ptr@4 = f;
  var q:long = c[0];
  g[0] = q;
  var h:int = 16;
  var i:long_ptr@4 = g + h;
  var j:long_ptr@4 = c + h;
  var r:long = j[0];
  i[0] = r;
  var k:int = 8;
  var l:long_ptr@4 = g + k;
  var m:long_ptr@4 = c + k;
  var s:long = m[0];
  l[0] = s;
  var n:int = f;
  core_ptr_write_h17edb25b32c622d4(b, n);
  var o:int = 32;
  var p:int = f + o;
  g_a = p;
}

function core_iter_adapters_map_Map_I_F_new_h373b01c4d7f48f44(a:long_ptr@4, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 32;
  var e:int = c - d;
  var f:int = 8;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var t:long = b[0];
  h[0] = t;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 8;
  var n:int = e + m;
  var o:long_ptr@4 = n;
  var u:long = o[0];
  a[0] = u;
  var p:int = 8;
  var q:int_ptr = a + p;
  var r:int_ptr = o + p;
  var s:int = r[0];
  q[0] = s;
}

function alloc_boxed_Box_core_mem_maybe_uninit_MaybeUninit_T_A_assume_init_h8198f4663bd7d3cb(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = 16;
  var h:int = f + g;
  alloc_boxed_Box_T_A_into_raw_with_h481304091064558a(h, b, c);
  var i:int = f[5];
  var j:int = f[4];
  f[10] = j;
  f[11] = i;
  var k:int = 8;
  var l:int = f + k;
  alloc_boxed_Box_T_A_from_raw_in_h2096dd1c72f3c0b1(l, j, i);
  var m:int = f[3];
  var n:int = f[2];
  a.b = m;
  a.a = n;
  var o:int = 48;
  var p:int = f + o;
  g_a = p;
}

function alloc_boxed_Box_core_mem_maybe_uninit_MaybeUninit_T_A_assume_init_hd901d47c6d99a0a1(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = 16;
  var h:int = f + g;
  alloc_boxed_Box_T_A_into_raw_with_hf2bccf6f46e1a700(h, b, c);
  var i:int = f[5];
  var j:int = f[4];
  f[10] = j;
  f[11] = i;
  var k:int = 8;
  var l:int = f + k;
  alloc_boxed_Box_T_A_from_raw_in_hdb10d6c392cbfc1e(l, j, i);
  var m:int = f[3];
  var n:int = f[2];
  a.b = m;
  a.a = n;
  var o:int = 48;
  var p:int = f + o;
  g_a = p;
}

function alloc_boxed_Box_core_mem_maybe_uninit_MaybeUninit_T_A_assume_init_h9366630facffd0e6(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = 16;
  var h:int = f + g;
  alloc_boxed_Box_T_A_into_raw_with_hf71d5a4baae9a94b(h, b, c);
  var i:int = f[5];
  var j:int = f[4];
  f[10] = j;
  f[11] = i;
  var k:int = 8;
  var l:int = f + k;
  alloc_boxed_Box_T_A_from_raw_in_hdd54d66f08d93db5(l, j, i);
  var m:int = f[3];
  var n:int = f[2];
  a.b = m;
  a.a = n;
  var o:int = 48;
  var p:int = f + o;
  g_a = p;
}

function alloc_vec_Vec_T_A_as_alloc_vec_spec_extend_SpecExtend_T_I_spec_extend_closure_he5b4e9732087d5a1(a:int_ptr, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = a;
  e[4] = b;
  var f:int = a[0];
  core_ptr_write_h08075b59e270f878(f, b);
  var g:int = a[0];
  e[5] = g;
  var h:int = 1;
  e[6] = h;
  var i:int = 4;
  var j:int = g + i;
  e[7] = j;
  var k:int = e[7];
  a[0] = k;
  var l:int = 4;
  var m:int = a + l;
  var n:int = 1;
  alloc_vec_set_len_on_drop_SetLenOnDrop_increment_len_hba888394be5b97ec(
    m,
    n);
  var o:int = 32;
  var p:int = e + o;
  g_a = p;
}

function alloc_vec_Vec_T_as_core_iter_collect_FromIterator_T_from_iter_h4d4d625e30aa9768(a:int, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 32;
  var e:int = c - d;
  g_a = e;
  var f:int = 16;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var t:long = b[0];
  h[0] = t;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = e;
  var n:int = 16;
  var o:int = e + n;
  var p:int = o;
  I_as_core_iter_collect_IntoIterator_into_iter_ha4933ed307ada64b(m, p);
  var q:int = e;
  alloc_vec_Vec_T_as_alloc_vec_spec_from_iter_SpecFromIter_T_I_from_iter_hafa93f04aa1c833e(
    a,
    q);
  var r:int = 32;
  var s:int = e + r;
  g_a = s;
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h35aa375f89099de4(a:{ a:int, b:int, c:int }, b:{ a:int, b:int, c:int }) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  var f:int = b.a;
  br_table[B_c, B_b, ..B_c](f)
  label B_c:
  var g:int = b.b;
  e[7] = g;
  a.b = g;
  var h:int = 0;
  a.a = h;
  goto B_a;
  label B_b:
  var i:int = b.b;
  var j:int = b.c;
  e[4] = i;
  e[5] = j;
  e[2] = i;
  e[3] = j;
  var k:int = e[2];
  var l:int = e[3];
  a.b = k;
  a.c = l;
  var m:int = 1;
  a.a = m;
  label B_a:
}

function alloc_str_impl_alloc_borrow_ToOwned_for_str_to_owned_ha0f88bb1eb1fd6e7(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  f[8] = b;
  f[9] = c;
  f[10] = b;
  f[11] = c;
  var g:int = f[10];
  var h:int = f[11];
  var i:int = 8;
  var j:int = f + i;
  var k:int = j;
  alloc_slice_impl_alloc_borrow_ToOwned_for_T_to_owned_h42ffe34c41d6a148(
    k,
    g,
    h);
  var l:int = 8;
  var m:int = f + l;
  var n:int = m;
  alloc_string_String_from_utf8_unchecked_h08828c7e4f2a98a1(a, n);
  var o:int = 48;
  var p:int = f + o;
  g_a = p;
}

function core_ptr_non_null_NonNull_T_slice_from_raw_parts_hbbabded21d42bcf5(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[6] = b;
  f[7] = c;
  var g:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(b);
  var h:int = 16;
  var i:int = f + h;
  core_ptr_slice_from_raw_parts_mut_h097538769b43587c(i, g, c);
  var j:int = f[5];
  var k:int = f[4];
  var l:int = 8;
  var m:int = f + l;
  core_ptr_non_null_NonNull_T_new_unchecked_he38ccf3f36104f80(m, k, j);
  var n:int = f[3];
  var o:int = f[2];
  a.b = n;
  a.a = o;
  var p:int = 32;
  var q:int = f + p;
  g_a = q;
}

export function wbindgen_free(a:int, b:int) {
  var c:int = g_a;
  var d:int = 48;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = a;
  e[6] = b;
  if (eqz(b)) goto B_a;
  var f:int = 4;
  e[11] = f;
  var g:int = e[11];
  e[7] = g;
  var h:int = 8;
  var i:int = e + h;
  core_alloc_layout_Layout_from_size_align_unchecked_he038ca9588015484(
    i,
    b,
    g);
  var j:int = e[3];
  var k:int = e[2];
  e[8] = k;
  e[9] = j;
  alloc_alloc_dealloc_h69523d9f2769d69e(a, k, j);
  label B_a:
  var l:int = 48;
  var m:int = e + l;
  g_a = m;
}

function alloc_raw_vec_RawVec_T_A_capacity_from_bytes_h2462053e10485098(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = 1;
  var f:int = 0;
  var g:int = e;
  var h:int = f;
  var i:int = g == h;
  var j:int = 1;
  var k:int = i & j;
  if (k) goto B_a;
  var l:int = 0;
  var m:int = a >> l;
  var n:int = 16;
  var o:int = d + n;
  g_a = o;
  return m;
  label B_a:
  var p:int = 1051504;
  var q:int = p;
  var r:int = 25;
  var s:int = 1051480;
  var t:int = s;
  core_panicking_panic_hceae0c79b0247f98(q, r, t);
  return unreachable;
}

function alloc_raw_vec_RawVec_T_A_capacity_from_bytes_h12dd384bdebc336c(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = 4;
  var f:int = 0;
  var g:int = e;
  var h:int = f;
  var i:int = g == h;
  var j:int = 1;
  var k:int = i & j;
  if (k) goto B_a;
  var l:int = 2;
  var m:int = a >> l;
  var n:int = 16;
  var o:int = d + n;
  g_a = o;
  return m;
  label B_a:
  var p:int = 1051504;
  var q:int = p;
  var r:int = 25;
  var s:int = 1051480;
  var t:int = s;
  core_panicking_panic_hceae0c79b0247f98(q, r, t);
  return unreachable;
}

function alloc_raw_vec_RawVec_T_A_capacity_from_bytes_h37b68469e4d7cf53(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = 4;
  var f:int = 0;
  var g:int = e;
  var h:int = f;
  var i:int = g == h;
  var j:int = 1;
  var k:int = i & j;
  if (k) goto B_a;
  var l:int = 2;
  var m:int = a >> l;
  var n:int = 16;
  var o:int = d + n;
  g_a = o;
  return m;
  label B_a:
  var p:int = 1051504;
  var q:int = p;
  var r:int = 25;
  var s:int = 1051480;
  var t:int = s;
  core_panicking_panic_hceae0c79b0247f98(q, r, t);
  return unreachable;
}

function alloc_raw_vec_RawVec_T_A_capacity_from_bytes_hede4f51048a3581e(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = 1;
  var f:int = 0;
  var g:int = e;
  var h:int = f;
  var i:int = g == h;
  var j:int = 1;
  var k:int = i & j;
  if (k) goto B_a;
  var l:int = 0;
  var m:int = a >> l;
  var n:int = 16;
  var o:int = d + n;
  g_a = o;
  return m;
  label B_a:
  var p:int = 1052272;
  var q:int = p;
  var r:int = 25;
  var s:int = 1052248;
  var t:int = s;
  core_panicking_panic_hceae0c79b0247f98(q, r, t);
  return unreachable;
}

function core_result_Result_T_E_expect_ha26051f9c907b78d(a:int, b:int, c:int, d:int, e:int):int {
  var f:int = g_a;
  var g:int = 32;
  var h:int_ptr = f - g;
  g_a = h;
  h[0] = a;
  h[1] = b;
  h[4] = c;
  h[5] = d;
  var i:int = h[0];
  br_table[B_b, B_a, ..B_b](i)
  label B_b:
  var j:int = h[1];
  h[7] = j;
  var k:int = 32;
  var l:int = h + k;
  g_a = l;
  return j;
  label B_a:
  var m:int = 8;
  var n:int = h + m;
  var o:int = n;
  var p:int = 1051584;
  var q:int = p;
  core_result_unwrap_failed_h694db13a45aa6740(c, d, o, q, e);
  return unreachable;
}

function core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible(a:{ a:int, b:int, c:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[6] = g;
  f[7] = h;
  var i:int = 8;
  var j:int = f + i;
  T_as_core_convert_From_T_from_h32498c635a891114(j, g, h);
  var k:int = f[3];
  var l:int = f[2];
  a.b = l;
  a.c = k;
  var m:int = 1;
  a.a = m;
  var n:int = 32;
  var o:int = f + n;
  g_a = o;
}

function core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_1(a:{ a:int, b:int, c:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[6] = g;
  f[7] = h;
  var i:int = 8;
  var j:int = f + i;
  alloc_collections_TryReserveError_as_core_convert_From_alloc_collections_TryReserveErrorKind_from_h9(
    j,
    g,
    h);
  var k:int = f[3];
  var l:int = f[2];
  a.b = l;
  a.c = k;
  var m:int = 1;
  a.a = m;
  var n:int = 32;
  var o:int = f + n;
  g_a = o;
}

function core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_2(a:{ a:int, b:int, c:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[6] = g;
  f[7] = h;
  var i:int = 8;
  var j:int = f + i;
  T_as_core_convert_From_T_from_h32498c635a891114(j, g, h);
  var k:int = f[3];
  var l:int = f[2];
  a.b = l;
  a.c = k;
  var m:int = 1;
  a.a = m;
  var n:int = 32;
  var o:int = f + n;
  g_a = o;
}

function core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_3(a:{ a:int, b:int, c:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[6] = g;
  f[7] = h;
  var i:int = 8;
  var j:int = f + i;
  alloc_collections_TryReserveError_as_core_convert_From_alloc_collections_TryReserveErrorKind_from_h9(
    j,
    g,
    h);
  var k:int = f[3];
  var l:int = f[2];
  a.b = l;
  a.c = k;
  var m:int = 1;
  a.a = m;
  var n:int = 32;
  var o:int = f + n;
  g_a = o;
}

function core_ops_range_RangeFrom_usize_as_core_slice_index_SliceIndex_T_get_unchecked_h16d920d4815c72fc(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 32;
  var g:int_ptr = e - f;
  g_a = g;
  g[5] = b;
  g[6] = c;
  g[7] = d;
  var h:int = core_ptr_ptr_impl_T_len_h30df55a99447e371(c, d);
  g[2] = b;
  g[3] = h;
  var i:int = g[2];
  var j:int = g[3];
  core_ops_range_Range_usize_as_core_slice_index_SliceIndex_T_get_unchecked_h35ec22132b168097(
    g,
    i,
    j,
    c,
    d);
  var k:int = g[1];
  var l:int = g[0];
  a.b = k;
  a.a = l;
  var m:int = 32;
  var n:int = g + m;
  g_a = n;
}

function usize_as_core_slice_index_SliceIndex_T_index_h215346f25bc09eff(a:int, b:int, c:int, d:int):int {
  var e:int = g_a;
  var f:int = 16;
  var g:int_ptr = e - f;
  g_a = g;
  g[1] = a;
  g[2] = b;
  g[3] = c;
  var h:int = a;
  var i:int = c;
  var j:int = h < i;
  var k:int = 1;
  var l:int = j & k;
  if (eqz(l)) goto B_a;
  var m:int = 2;
  var n:int = a << m;
  var o:int = b + n;
  var p:int = 16;
  var q:int = g + p;
  g_a = q;
  return o;
  label B_a:
  core_panicking_panic_bounds_check_h1d84519ec46ed48c(a, c, d);
  return unreachable;
}

function wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_str_into_abi_closure_hc93ac2f0(a:{ a:int, b:int }, b:{ a:int, b:int }) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  var f:int = b.a;
  var g:int = b.b;
  e[4] = f;
  e[5] = g;
  e[6] = f;
  e[7] = g;
  var h:int = e[6];
  var i:int = e[7];
  wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_u8_into_abi_h8c77e700feef3bd5(
    e,
    h,
    i);
  var j:int = e[1];
  var k:int = e[0];
  a.b = j;
  a.a = k;
  var l:int = 32;
  var m:int = e + l;
  g_a = m;
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_ha097dea39e8374c5(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  f[2] = b;
  f[3] = c;
  var g:int = f[2];
  var h:int = eqz(g);
  br_table[B_c, B_b, ..B_c](h)
  label B_c:
  var i:int = f[2];
  var j:int = f[3];
  f[10] = i;
  f[11] = j;
  f[4] = i;
  f[5] = j;
  goto B_a;
  label B_b:
  var k:int = 0;
  f[4] = k;
  label B_a:
  var l:int = f[4];
  var m:int = f[5];
  a.b = m;
  a.a = l;
}

function panicking_begin_panic_handler_closure_h9c6751687bfc5521(a:{ a:int, b:int }, b:int, c:int) {
  var d:{ a:int, b:int } = g_a - 16;
  g_a = d;
  var e:int = (a + 20)[0]:int;
  br_table[B_d, B_c, ..B_a]((a + 4)[0]:int)
  label B_d:
  if (e) goto B_a;
  a = 1053648;
  e = 0;
  goto B_b;
  label B_c:
  if (e) goto B_a;
  a = a.a;
  e = a.b;
  a = a.a;
  label B_b:
  d.b = e;
  d.a = a;
  panicking_rust_panic_with_hook_h364974e717ed59ec(
    d,
    1053792,
    core_panic_panic_info_PanicInfo_message_h36702d3d004a6dee(b),
    c);
  unreachable;
  label B_a:
  d.b = 0;
  d.a = a;
  panicking_rust_panic_with_hook_h364974e717ed59ec(
    d,
    1053772,
    core_panic_panic_info_PanicInfo_message_h36702d3d004a6dee(b),
    c);
  unreachable;
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hc42e3993ac8cc40e(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[0] = b;
  f[1] = c;
  var g:int = f[0];
  br_table[B_c, B_b, ..B_c](g)
  label B_c:
  var h:int = 0;
  f[2] = h;
  goto B_a;
  label B_b:
  var i:int = f[1];
  f[7] = i;
  f[5] = i;
  var j:int = f[5];
  f[3] = j;
  var k:int = 1;
  f[2] = k;
  label B_a:
  var l:int = f[2];
  var m:int = f[3];
  a.b = m;
  a.a = l;
}

function core_alloc_layout_Layout_new_h15fca8342f491ece(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  g_a = d;
  var e:int = 16;
  var f:int = d + e;
  core_alloc_layout_size_align_h485de565e8c03b41(f);
  var g:int = d[5];
  var h:int = d[4];
  d[6] = h;
  d[7] = g;
  var i:int = 8;
  var j:int = d + i;
  core_alloc_layout_Layout_from_size_align_unchecked_h6a97c487e6240d7c(
    j,
    h,
    g);
  var k:int = d[3];
  var l:int = d[2];
  a.b = k;
  a.a = l;
  var m:int = 32;
  var n:int = d + m;
  g_a = n;
}

function core_alloc_layout_Layout_new_hd52dfef738d924aa(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  g_a = d;
  var e:int = 16;
  var f:int = d + e;
  core_alloc_layout_size_align_h05702dd1bba9a301(f);
  var g:int = d[5];
  var h:int = d[4];
  d[6] = h;
  d[7] = g;
  var i:int = 8;
  var j:int = d + i;
  core_alloc_layout_Layout_from_size_align_unchecked_h6a97c487e6240d7c(
    j,
    h,
    g);
  var k:int = d[3];
  var l:int = d[2];
  a.b = k;
  a.a = l;
  var m:int = 32;
  var n:int = d + m;
  g_a = n;
}

function core_ptr_read_heb39375af74015ed(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 48;
  var e:int_ptr = c - d;
  e[3] = b;
  var f:int = e[4];
  var g:int = e[5];
  e[1] = g;
  e[0] = f;
  var h:int = e;
  e[11] = h;
  var i:long_ptr@4 = e;
  var l:long = b[0];
  i[0] = l;
  var j:int = e[0];
  var k:int = e[1];
  e[6] = j;
  e[7] = k;
  e[8] = j;
  e[9] = k;
  a.b = k;
  a.a = j;
}

function core_alloc_layout_Layout_new_h08a6ad368d455a6c(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  g_a = d;
  var e:int = 16;
  var f:int = d + e;
  core_alloc_layout_size_align_hbba6579936286681(f);
  var g:int = d[5];
  var h:int = d[4];
  d[6] = h;
  d[7] = g;
  var i:int = 8;
  var j:int = d + i;
  core_alloc_layout_Layout_from_size_align_unchecked_hd141f6a17bb12fc4(
    j,
    h,
    g);
  var k:int = d[3];
  var l:int = d[2];
  a.b = k;
  a.a = l;
  var m:int = 32;
  var n:int = d + m;
  g_a = n;
}

function core_ops_range_RangeTo_usize_as_core_slice_index_SliceIndex_T_get_unchecked_h3254a427b7113d9d(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 32;
  var g:int_ptr = e - f;
  g_a = g;
  g[5] = b;
  g[6] = c;
  g[7] = d;
  var h:int = 0;
  g[2] = h;
  g[3] = b;
  var i:int = g[2];
  var j:int = g[3];
  core_ops_range_Range_usize_as_core_slice_index_SliceIndex_T_get_unchecked_h35ec22132b168097(
    g,
    i,
    j,
    c,
    d);
  var k:int = g[1];
  var l:int = g[0];
  a.b = k;
  a.a = l;
  var m:int = 32;
  var n:int = g + m;
  g_a = n;
}

function core_iter_iterator_Iterator_map_h5107fa9604aacbca(a:int, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 32;
  var e:int = c - d;
  g_a = e;
  var f:int = 8;
  var g:int = e + f;
  var h:long_ptr@4 = g;
  var r:long = b[0];
  h[0] = r;
  var i:int = 8;
  var j:int_ptr = h + i;
  var k:int_ptr = b + i;
  var l:int = k[0];
  j[0] = l;
  var m:int = 8;
  var n:int = e + m;
  var o:int = n;
  core_iter_adapters_map_Map_I_F_new_h373b01c4d7f48f44(a, o);
  var p:int = 32;
  var q:int = e + p;
  g_a = q;
}

function alloc_alloc_Global_as_core_alloc_Allocator_grow_h4eb20161e4324771(a:{ a:int, b:int }, b:int, c:int, d:int, e:int, f:int, g:int) {
  var h:int = g_a;
  var i:int = 32;
  var j:{ a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int } =
    h - i;
  g_a = j;
  j.c = b;
  j.d = c;
  j.e = d;
  j.f = e;
  j.g = f;
  j.h = g;
  var k:int = 0;
  alloc_alloc_Global_grow_impl_h30049f444c9187b4(j, b, c, d, e, f, g, k);
  var l:int = j.b;
  var m:int = j.a;
  a.b = l;
  a.a = m;
  var n:int = 32;
  var o:int = j + n;
  g_a = o;
}

function wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_RefFromWasmAbi_for_str_ref_from_abi_h3af855beb(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  var g:int = 8;
  var h:int = f + g;
  wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_FromWasmAbi_for_alloc_boxed_Box_u8_from_abi_h5(
    h,
    b,
    c);
  var i:int = f[3];
  var j:int = f[2];
  f[6] = j;
  f[7] = i;
  var k:int = f[6];
  var l:int = f[7];
  a.b = l;
  a.a = k;
  var m:int = 32;
  var n:int = f + m;
  g_a = n;
}

function alloc_string_String_as_core_ops_deref_Deref_deref_h8639249056b2035c(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[7] = b;
  var f:int = 16;
  var g:int = e + f;
  alloc_vec_Vec_T_A_as_core_ops_deref_Deref_deref_h30bd18da80b67e7c(g, b);
  var h:int = e[5];
  var i:int = e[4];
  var j:int = 8;
  var k:int = e + j;
  core_str_converts_from_utf8_unchecked_h64cf2c319e97434f(k, i, h);
  var l:int = e[3];
  var m:int = e[2];
  a.b = l;
  a.a = m;
  var n:int = 32;
  var o:int = e + n;
  g_a = o;
}

function usize_as_core_iter_range_Step_forward_checked_hd41d97545e1ad021(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[5] = b;
  f[6] = c;
  var g:int = T_as_core_convert_TryFrom_U_try_from_h121a72a31af6498f(c);
  f[4] = g;
  var h:int = f[4];
  f[7] = h;
  var i:int = 8;
  var j:int = f + i;
  core_num_impl_usize_checked_add_hf7e5797ba0069206(j, b, h);
  var k:int = f[3];
  var l:int = f[2];
  a.b = k;
  a.a = l;
  var m:int = 32;
  var n:int = f + m;
  g_a = n;
}

function wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_boxed_Box_wasm_bindgen_J(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  var g:int = core_slice_impl_T_as_ptr_hf33fd17c16b7ae5a(b, c);
  f[6] = g;
  f[7] = c;
  core_mem_forget_h5d8fc464b1e2226b(b, c);
  var h:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_T_into_abi_hc64d5fd915818bc1(
      g);
  f[2] = h;
  f[3] = c;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function core_ptr_read_h05c85269ec15de12(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 48;
  var e:int = c - d;
  e[3]:int = b;
  var f:int = e[4]:int;
  var g:int = e[5]:int;
  e[1]:int = g;
  e[0]:int = f;
  var h:int = e;
  e[11]:int = h;
  var k:long = b[0];
  e[0]:long = k;
  var i:int = e[0]:int;
  var j:int = e[1]:int;
  e[6]:int = i;
  e[7]:int = j;
  e[8]:int = i;
  e[9]:int = j;
  a.b = j;
  a.a = i;
}

function core_ptr_read_h44ba49f6abdfb27e(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 48;
  var e:int = c - d;
  e[3]:int = b;
  var f:int = e[4]:int;
  var g:int = e[5]:int;
  e[1]:int = g;
  e[0]:int = f;
  var h:int = e;
  e[11]:int = h;
  var k:long = b[0];
  e[0]:long = k;
  var i:int = e[0]:int;
  var j:int = e[1]:int;
  e[6]:int = i;
  e[7]:int = j;
  e[8]:int = i;
  e[9]:int = j;
  a.b = j;
  a.a = i;
}

function wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_boxed_Box_u8_into_abi_hb(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  var g:int = core_slice_impl_T_as_ptr_hb4f316d84b9f4f66(b, c);
  f[6] = g;
  f[7] = c;
  core_mem_forget_h3f35919f69b7da73(b, c);
  var h:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_T_into_abi_h0231a98fb8f4b477(
      g);
  f[2] = h;
  f[3] = c;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function core_ptr_read_h3c3e0317399017e6(a:{ a:int, b:int }, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 48;
  var e:int = c - d;
  e[3]:int = b;
  var f:int = e[4]:int;
  var g:int = e[5]:int;
  e[1]:int = g;
  e[0]:int = f;
  var h:int = e;
  e[11]:int = h;
  var k:long = b[0];
  e[0]:long = k;
  var i:int = e[0]:int;
  var j:int = e[1]:int;
  e[6]:int = i;
  e[7]:int = j;
  e[8]:int = i;
  e[9]:int = j;
  a.b = j;
  a.a = i;
}

function alloc_raw_vec_RawVec_T_A_with_capacity_in_h0fbce035afc062bd(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int = c - d;
  g_a = e;
  e[5]:int = b;
  var f:int = 0;
  e[19]:byte = f;
  var g:int = e[19]:ubyte;
  var h:int = 1;
  var i:int = g & h;
  var j:int = 8;
  var k:int = e + j;
  alloc_raw_vec_RawVec_T_A_allocate_in_h2e2dfd609310ab2f(k, b, i);
  var l:int = e[3]:int;
  var m:int = e[2]:int;
  a.b = l;
  a.a = m;
  var n:int = 32;
  var o:int = e + n;
  g_a = o;
}

function alloc_raw_vec_RawVec_T_A_with_capacity_in_h9c424b42f43a660a(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int = c - d;
  g_a = e;
  e[5]:int = b;
  var f:int = 0;
  e[19]:byte = f;
  var g:int = e[19]:ubyte;
  var h:int = 1;
  var i:int = g & h;
  var j:int = 8;
  var k:int = e + j;
  alloc_raw_vec_RawVec_T_A_allocate_in_hfaa01c7567460fa2(k, b, i);
  var l:int = e[3]:int;
  var m:int = e[2]:int;
  a.b = l;
  a.a = m;
  var n:int = 32;
  var o:int = e + n;
  g_a = o;
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hb4c75229e6d96235(a:{ a:int, b:int, c:int }, b:{ a:int, b:int, c:int }) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  var f:int = b.a;
  br_table[B_c, B_b, ..B_c](f)
  label B_c:
  var g:int = 0;
  a.a = g;
  goto B_a;
  label B_b:
  var h:int = b.b;
  var i:int = b.c;
  e[6] = h;
  e[7] = i;
  e[2] = h;
  e[3] = i;
  var j:int = e[2];
  var k:int = e[3];
  a.b = j;
  a.c = k;
  var l:int = 1;
  a.a = l;
  label B_a:
}

function core_fmt_Arguments_new_v1_formatted_h619a5115d5a3e54f(a:{ a:int, b:int, c:int, d:int, e:int, f:int }, b:int, c:int, d:int, e:int, f:int, g:int) {
  var h:int = g_a;
  var i:int = 32;
  var j:{ a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int } =
    h - i;
  j.c = b;
  j.d = c;
  j.e = d;
  j.f = e;
  j.g = f;
  j.h = g;
  j.a = f;
  j.b = g;
  a.a = b;
  a.b = c;
  var k:int = j.a;
  var l:int = j.b;
  a.c = k;
  a.d = l;
  a.e = d;
  a.f = e;
}

function alloc_string_String_from_utf8_unchecked_h08828c7e4f2a98a1(a:long_ptr@4, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 16;
  var e:int = c - d;
  var f:long_ptr@4 = e;
  var p:long = b[0];
  f[0] = p;
  var g:int = 8;
  var h:int_ptr = f + g;
  var i:int_ptr = b + g;
  var j:int = i[0];
  h[0] = j;
  var k:long_ptr@4 = e;
  var q:long = k[0];
  a[0] = q;
  var l:int = 8;
  var m:int_ptr = a + l;
  var n:int_ptr = k + l;
  var o:int = n[0];
  m[0] = o;
}

function core_option_Option_T_is_some_ha00975938eb3f18f(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int = b - c;
  d[3]:int = a;
  var e:int = a[0];
  var f:int = 1;
  var g:int = e;
  var h:int = f;
  var i:int = g == h;
  var j:int = 1;
  var k:int = i & j;
  if (eqz(k)) goto B_b;
  var l:int = 1;
  d[11]:byte = l;
  goto B_a;
  label B_b:
  var m:int = 0;
  d[11]:byte = m;
  label B_a:
  var n:int = d[11]:ubyte;
  var o:int = 1;
  var p:int = n & o;
  return p;
}

function core_ptr_non_null_NonNull_T_new_h097dcfc41a1a0fb7(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = core_ptr_mut_ptr_impl_mut_T_is_null_h2f6559593d20d692(a);
  var f:int = -1;
  var g:int = e ^ f;
  var h:int = 1;
  var i:int = g & h;
  if (i) goto B_b;
  var j:int = 0;
  d[2] = j;
  goto B_a;
  label B_b:
  var k:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h46314b06c79b45ed(a);
  d[2] = k;
  label B_a:
  var l:int = d[2];
  var m:int = 16;
  var n:int = d + m;
  g_a = n;
  return l;
}

function wasm_bindgen_externref_Slab_new_h22d0245eb517d6d7(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int = b - c;
  g_a = d;
  var e:int = d;
  alloc_vec_Vec_T_new_h686143bde653a80c(e);
  var f:long_ptr@4 = d;
  var o:long = f[0];
  a[0]:long@4 = o;
  var g:int = 8;
  var h:int_ptr = a + g;
  var i:int_ptr = f + g;
  var j:int = i[0];
  h[0] = j;
  var k:int = 0;
  a[3]:int = k;
  var l:int = 0;
  a[4]:int = l;
  var m:int = 16;
  var n:int = d + m;
  g_a = n;
}

function core_result_unwrap_failed_h694db13a45aa6740(a:int, b:int, c:int, d:int, e:int) {
  var f:int = g_a - 64;
  g_a = f;
  f[3]:int = b;
  f[2]:int = a;
  f[5]:int = d;
  f[4]:int = c;
  (f + 44)[0]:int = 2;
  (f + 60)[0]:int = 55;
  f[7]:long@4 = 2L;
  f[6]:int = 1054276;
  f[13]:int = 54;
  f[10]:int = f + 48;
  f[14]:int = f + 16;
  f[12]:int = f + 8;
  core_panicking_panic_fmt_hf69c8b08bc9d2ee5(f + 24, e);
  unreachable;
}

function alloc_raw_vec_finish_grow_closure_h339429fb31fd77c6(a:{ a:int, b:int }, b:{ a:int, b:int }) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = b;
  var f:int = b.a;
  var g:int = b.b;
  e[2] = f;
  e[3] = g;
  var h:int = e[2];
  var i:int = e[3];
  T_as_core_convert_Into_U_into_h6eedd7c65925ce3f(e, h, i);
  var j:int = e[1];
  var k:int = e[0];
  a.b = j;
  a.a = k;
  var l:int = 32;
  var m:int = e + l;
  g_a = m;
}

function core_fmt_builders_DebugStruct_finish_hf25481809ffbda7d(a:int):int {
  var b:int = a[4]:ubyte;
  if (eqz(a[5]:ubyte)) goto B_a;
  var c:int = b & 255;
  b = 1;
  if (c) goto B_b;
  b = a[0]:int;
  if (b[0]:ubyte & 4) goto B_c;
  b = call_indirect(b[6]:int, 1054293, 2, ((b + 28)[0]:int)[3]:int);
  goto B_b;
  label B_c:
  b = call_indirect(b[6]:int, 1054292, 1, ((b + 28)[0]:int)[3]:int);
  label B_b:
  a[4]:byte = b;
  label B_a:
  return (b & 255) != 0;
}

function alloc_raw_vec_RawVec_T_A_needs_to_grow_h383370444d91534b(a:int_ptr, b:int, c:int):int {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  f[5] = a;
  var g:int = a[1];
  f[4] = g;
  var h:int = f[4];
  f[6] = h;
  f[7] = b;
  var i:int = h - b;
  var j:int = c;
  var k:int = i;
  var l:int = j > k;
  var m:int = 1;
  var n:int = l & m;
  return n;
}

function web_sys_features_gen_Window_Window_document_h5ede7ff4f1c3d443(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = b;
  var f:int =
    web_sys_features_gen_Window_wbg_generated_Window_impl_wasm_bindgen_convert_IntoWasmAbi_for_web_sys_f(
      b);
  e[6] = f;
  var g:int =
    web_sys_features_gen_Window_Window_document_wbg_document_5edd43643d1060d9_h4dd6605746ba6f29(
      f);
  e[7] = g;
  var h:int = 8;
  var i:int = e + h;
  wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_core_option_Option_T_from_abi_h(
    i,
    g);
  var j:int = e[3];
  var k:int = e[2];
  a.b = j;
  a.a = k;
  var l:int = 32;
  var m:int = e + l;
  g_a = m;
}

function web_sys_features_gen_Document_Document_body_h20cbbcf6ce16f98b(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = b;
  var f:int =
    web_sys_features_gen_Document_wbg_generated_Document_impl_wasm_bindgen_convert_IntoWasmAbi_for_web_s(
      b);
  e[6] = f;
  var g:int =
    web_sys_features_gen_Document_Document_body_wbg_body_7538539844356c1c_hfdaa805e8515038e(
      f);
  e[7] = g;
  var h:int = 8;
  var i:int = e + h;
  wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_core_option_Option_T_from_abi_h_1(
    i,
    g);
  var j:int = e[3];
  var k:int = e[2];
  a.b = j;
  a.a = k;
  var l:int = 32;
  var m:int = e + l;
  g_a = m;
}

function thread_local_LocalKey_T_with_h2af130ee782a21d9(a:int):int {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  g_a = d;
  d[5] = a;
  var e:int = 8;
  var f:int = d + e;
  thread_local_LocalKey_T_try_with_h52c6b93cc942b76a(f, a);
  var g:int = d[3];
  var h:int = d[2];
  var i:int = 1051804;
  var j:int = i;
  var k:int = 70;
  var l:int = 1051956;
  var m:int = l;
  var n:int =
    core_result_Result_T_E_expect_ha26051f9c907b78d(h, g, j, k, m);
  var o:int = 32;
  var p:int = d + o;
  g_a = p;
  return n;
}

function alloc_raw_vec_RawVec_T_A_needs_to_grow_hfe6364cc99b89494(a:int_ptr, b:int, c:int):int {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  f[5] = a;
  var g:int = a[1];
  f[4] = g;
  var h:int = f[4];
  f[6] = h;
  f[7] = b;
  var i:int = h - b;
  var j:int = c;
  var k:int = i;
  var l:int = j > k;
  var m:int = 1;
  var n:int = l & m;
  return n;
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_he5f55ba0d3bf5129(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[0] = b;
  f[1] = c;
  var g:int = f[0];
  br_table[B_c, B_b, ..B_c](g)
  label B_c:
  var h:int = f[1];
  f[7] = h;
  f[3] = h;
  var i:int = 0;
  f[2] = i;
  goto B_a;
  label B_b:
  var j:int = 1;
  f[2] = j;
  label B_a:
  var k:int = f[2];
  var l:int = f[3];
  a.b = l;
  a.a = k;
}

function core_iter_adapters_map_map_fold_closure_h6926ca9ee05aa581(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 48;
  var f:int_ptr = d - e;
  g_a = f;
  f[7] = a;
  f[10] = b;
  f[11] = c;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  var i:int =
    match_twenty_sign_MD5_hash_closure_h12ea5e2f8d46d554(a, g, h);
  f[3] = i;
  var j:int = f[3];
  core_iter_iterator_Iterator_for_each_call_closure_h850e4f4b5ee7b1d0(a,
                                                                      j);
  var k:int = 48;
  var l:int = f + k;
  g_a = l;
}

function alloc_alloc_Global_as_core_alloc_Allocator_deallocate_h00f6130e6d04c4aa(a:int, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 16;
  var g:{ a:int, b:int, c:int, d:int } = e - f;
  g_a = g;
  g.a = c;
  g.b = d;
  g.c = a;
  g.d = b;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_hec1bfea4eb6d0cc6(h);
  if (i) goto B_b;
  goto B_a;
  label B_b:
  var j:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(b);
  var k:int = g.a;
  var l:int = g.b;
  alloc_alloc_dealloc_h8f88c954d8ae0aa5(j, k, l);
  label B_a:
  var m:int = 16;
  var n:int = g + m;
  g_a = n;
}

function alloc_alloc_Global_as_core_alloc_Allocator_deallocate_hfe35b4695cc8f537(a:int, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 16;
  var g:{ a:int, b:int, c:int, d:int } = e - f;
  g_a = g;
  g.a = c;
  g.b = d;
  g.c = a;
  g.d = b;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_h23e58bed513508c1(h);
  if (i) goto B_b;
  goto B_a;
  label B_b:
  var j:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(b);
  var k:int = g.a;
  var l:int = g.b;
  alloc_alloc_dealloc_h327d9e1349a238ef(j, k, l);
  label B_a:
  var m:int = 16;
  var n:int = g + m;
  g_a = n;
}

function alloc_alloc_Global_as_core_alloc_Allocator_allocate_zeroed_hfa64fb7bf052ba2a(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 32;
  var g:int_ptr = e - f;
  g_a = g;
  g[5] = b;
  g[6] = c;
  g[7] = d;
  var h:int = 1;
  var i:int = 8;
  var j:int = g + i;
  alloc_alloc_Global_alloc_impl_h67b37ea8f1e1d9d2(j, b, c, d, h);
  var k:int = g[3];
  var l:int = g[2];
  a.b = k;
  a.a = l;
  var m:int = 32;
  var n:int = g + m;
  g_a = n;
}

function alloc_alloc_Global_as_core_alloc_Allocator_allocate_h728542ee676fe2a2(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 32;
  var g:int_ptr = e - f;
  g_a = g;
  g[5] = b;
  g[6] = c;
  g[7] = d;
  var h:int = 0;
  var i:int = 8;
  var j:int = g + i;
  alloc_alloc_Global_alloc_impl_h67b37ea8f1e1d9d2(j, b, c, d, h);
  var k:int = g[3];
  var l:int = g[2];
  a.b = k;
  a.a = l;
  var m:int = 32;
  var n:int = g + m;
  g_a = n;
}

function alloc_alloc_Global_as_core_alloc_Allocator_deallocate_he61c762e632941bb(a:int, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 16;
  var g:{ a:int, b:int, c:int, d:int } = e - f;
  g_a = g;
  g.a = c;
  g.b = d;
  g.c = a;
  g.d = b;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_hd03d4df4a572a4a6(h);
  if (i) goto B_b;
  goto B_a;
  label B_b:
  var j:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(b);
  var k:int = g.a;
  var l:int = g.b;
  alloc_alloc_dealloc_had876e177e3eb82a(j, k, l);
  label B_a:
  var m:int = 16;
  var n:int = g + m;
  g_a = n;
}

function alloc_alloc_Global_as_core_alloc_Allocator_allocate_h25e9c620e376dca7(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 32;
  var g:int_ptr = e - f;
  g_a = g;
  g[5] = b;
  g[6] = c;
  g[7] = d;
  var h:int = 0;
  var i:int = 8;
  var j:int = g + i;
  alloc_alloc_Global_alloc_impl_h7c8f1a02c7b60545(j, b, c, d, h);
  var k:int = g[3];
  var l:int = g[2];
  a.b = k;
  a.a = l;
  var m:int = 32;
  var n:int = g + m;
  g_a = n;
}

function alloc_alloc_Global_as_core_alloc_Allocator_deallocate_h78eea967e1d72f4c(a:int, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 16;
  var g:{ a:int, b:int, c:int, d:int } = e - f;
  g_a = g;
  g.a = c;
  g.b = d;
  g.c = a;
  g.d = b;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_hed7bf60fc00d518d(h);
  if (i) goto B_b;
  goto B_a;
  label B_b:
  var j:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(b);
  var k:int = g.a;
  var l:int = g.b;
  alloc_alloc_dealloc_h69523d9f2769d69e(j, k, l);
  label B_a:
  var m:int = 16;
  var n:int = g + m;
  g_a = n;
}

function alloc_alloc_Global_as_core_alloc_Allocator_allocate_h1b38be445c9f3eba(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 32;
  var g:int_ptr = e - f;
  g_a = g;
  g[5] = b;
  g[6] = c;
  g[7] = d;
  var h:int = 0;
  var i:int = 8;
  var j:int = g + i;
  alloc_alloc_Global_alloc_impl_h31785f410c663f1b(j, b, c, d, h);
  var k:int = g[3];
  var l:int = g[2];
  a.b = k;
  a.a = l;
  var m:int = 32;
  var n:int = g + m;
  g_a = n;
}

function core_ptr_read_h427864b75c626476(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = d[4];
  d[2] = e;
  var f:int = 8;
  var g:int = d + f;
  var h:int = g;
  d[7] = h;
  var i:int = 8;
  var j:int = d + i;
  var k:int_ptr = j;
  var l:int = a[0];
  k[0] = l;
  var m:int = d[2];
  d[5] = m;
  d[6] = m;
  return m;
}

function core_ptr_read_hbd9ff689e1aae83d(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = d[4];
  d[2] = e;
  var f:int = 8;
  var g:int = d + f;
  var h:int = g;
  d[7] = h;
  var i:int = 8;
  var j:int = d + i;
  var k:int_ptr = j;
  var l:int = a[0];
  k[0] = l;
  var m:int = d[2];
  d[5] = m;
  d[6] = m;
  return m;
}

function core_mem_replace_hc97ff325d5162a0f(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 32;
  var g:int_ptr = e - f;
  g_a = g;
  g[3] = b;
  g[4] = c;
  g[5] = d;
  core_ptr_read_h44ba49f6abdfb27e(g, b);
  var h:int = g[1];
  var i:int = g[0];
  g[6] = i;
  g[7] = h;
  core_ptr_write_h7aada906f313145e(b, c, d);
  a.b = h;
  a.a = i;
  var j:int = 32;
  var k:int = g + j;
  g_a = k;
}

function alloc_boxed_Box_T_A_from_raw_in_h2096dd1c72f3c0b1(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:{ a:int, b:int, c:int, d:int, e:int, f:int } = d - e;
  g_a = f;
  f.e = b;
  f.f = c;
  core_ptr_unique_Unique_T_new_unchecked_h3e18737fe385c210(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  f.c = h;
  f.d = g;
  var i:int = f.c;
  var j:int = f.d;
  a.b = j;
  a.a = i;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function alloc_boxed_Box_T_A_from_raw_in_h70d522065ac68dd1(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:{ a:int, b:int, c:int, d:int, e:int, f:int } = d - e;
  g_a = f;
  f.e = b;
  f.f = c;
  core_ptr_unique_Unique_T_new_unchecked_h46587944fcb5fd5b(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  f.c = h;
  f.d = g;
  var i:int = f.c;
  var j:int = f.d;
  a.b = j;
  a.a = i;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function alloc_boxed_Box_T_A_from_raw_in_h96b2fa024797528c(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:{ a:int, b:int, c:int, d:int, e:int, f:int } = d - e;
  g_a = f;
  f.e = b;
  f.f = c;
  core_ptr_unique_Unique_T_new_unchecked_h3df5d8100a766f84(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  f.c = h;
  f.d = g;
  var i:int = f.c;
  var j:int = f.d;
  a.b = j;
  a.a = i;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function alloc_boxed_Box_T_A_from_raw_in_hdb10d6c392cbfc1e(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:{ a:int, b:int, c:int, d:int, e:int, f:int } = d - e;
  g_a = f;
  f.e = b;
  f.f = c;
  core_ptr_unique_Unique_T_new_unchecked_hdaa2e2351b7cb5ae(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  f.c = h;
  f.d = g;
  var i:int = f.c;
  var j:int = f.d;
  a.b = j;
  a.a = i;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function alloc_vec_Vec_T_A_as_alloc_vec_spec_extend_SpecExtend_T_core_slice_iter_Iter_T_spec_extend_h5678c1f6(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[2] = b;
  f[3] = c;
  f[5] = a;
  var g:int = 8;
  var h:int = f + g;
  core_slice_iter_Iter_T_as_slice_h7743a543c1670adf(f, h);
  var i:int = f[1];
  var j:int = f[0];
  f[6] = j;
  f[7] = i;
  alloc_vec_Vec_T_A_append_elements_hc5fc9ba3fefb39cb(a, j, i);
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function alloc_boxed_Box_T_A_from_raw_in_h657815d6ce341b24(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:{ a:int, b:int, c:int, d:int, e:int, f:int } = d - e;
  g_a = f;
  f.e = b;
  f.f = c;
  core_ptr_unique_Unique_T_new_unchecked_h81257fc057bde2ec(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  f.c = h;
  f.d = g;
  var i:int = f.c;
  var j:int = f.d;
  a.b = j;
  a.a = i;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function alloc_boxed_Box_T_A_from_raw_in_hdd54d66f08d93db5(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:{ a:int, b:int, c:int, d:int, e:int, f:int } = d - e;
  g_a = f;
  f.e = b;
  f.f = c;
  core_ptr_unique_Unique_T_new_unchecked_h37a24957928a7859(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  f.c = h;
  f.d = g;
  var i:int = f.c;
  var j:int = f.d;
  a.b = j;
  a.a = i;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function alloc_string_String_push_str_he023cb8b7aed1167(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int = a;
  f[4] = b;
  f[5] = c;
  f[6] = b;
  f[7] = c;
  var h:int = f[6];
  var i:int = f[7];
  alloc_vec_Vec_T_A_extend_from_slice_hcc34d0f891f206d0(g, h, i);
  var j:int = 32;
  var k:int = f + j;
  g_a = k;
}

function web_sys_window_ha75a47938eafa24a(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 16;
  var d:{ a:int, b:int, c:int, d:int } = b - c;
  g_a = d;
  var e:int = js_sys_global_ha060cbdc52a1dfdc();
  var f:int = 8;
  var g:int = d + f;
  wasm_bindgen_cast_JsCast_dyn_into_h5f9be03c5d612028(g, e);
  var h:int = d.d;
  var i:int = d.c;
  core_result_Result_T_E_ok_h28fac71484392cc5(d, i, h);
  var j:int = d.b;
  var k:int = d.a;
  a.b = j;
  a.a = k;
  var l:int = 16;
  var m:int = d + l;
  g_a = m;
}

function js_sys_Function_new_no_args_h3b2969208e3e6826(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_str_into_abi_h59670f2c5b8d351a(
    e,
    a,
    b);
  var f:int = e[1];
  var g:int = e[0];
  e[4] = g;
  e[5] = f;
  var h:int =
    js_sys_Function_new_no_args_wbg_newnoargs_f579424187aa1717_hcf9f4085601eba82(
      g,
      f);
  e[7] = h;
  var i:int =
    js_sys_wbg_generated_Function_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Function_from_abi_h97(
      h);
  var j:int = 32;
  var k:int = e + j;
  g_a = k;
  return i;
}

function js_sys_global_get_global_object_closure_hd79419af37afdd50(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = b;
  var f:int = 8;
  var g:int = e + f;
  js_sys_global_get_global_object_Global_get_window_h04507ad37443f1d3(g);
  var h:int = e[3];
  var i:int = e[2];
  var j:int = 20;
  var k:int = e + j;
  var l:int = k;
  core_ptr_drop_in_place_wasm_bindgen_JsValue_ha52073a19a60eadc(l);
  a.b = h;
  a.a = i;
  var m:int = 32;
  var n:int = e + m;
  g_a = n;
}

function js_sys_global_get_global_object_closure_he4a89d579c8fcae7(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = b;
  var f:int = 8;
  var g:int = e + f;
  js_sys_global_get_global_object_Global_get_global_this_hd3cb8e8a9533af98(
    g);
  var h:int = e[3];
  var i:int = e[2];
  var j:int = 20;
  var k:int = e + j;
  var l:int = k;
  core_ptr_drop_in_place_wasm_bindgen_JsValue_ha52073a19a60eadc(l);
  a.b = h;
  a.a = i;
  var m:int = 32;
  var n:int = e + m;
  g_a = n;
}

function js_sys_global_get_global_object_closure_hc9154108d5581a5b(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = b;
  var f:int = 8;
  var g:int = e + f;
  js_sys_global_get_global_object_Global_get_global_hcd6aaa238adca158(g);
  var h:int = e[3];
  var i:int = e[2];
  var j:int = 20;
  var k:int = e + j;
  var l:int = k;
  core_ptr_drop_in_place_wasm_bindgen_JsValue_ha52073a19a60eadc(l);
  a.b = h;
  a.a = i;
  var m:int = 32;
  var n:int = e + m;
  g_a = n;
}

function alloc_alloc_alloc_zeroed_h602a0c9caaa0af45(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = 8;
  var g:int = e + f;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_h23e58bed513508c1(h);
  var j:int = 8;
  var k:int = e + j;
  var l:int = k;
  var m:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(l);
  var n:int = rust_alloc_zeroed(i, m);
  var o:int = 16;
  var p:int = e + o;
  g_a = p;
  return n;
}

function alloc_alloc_alloc_h3e4c2060c8f99c47(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = 8;
  var g:int = e + f;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_h23e58bed513508c1(h);
  var j:int = 8;
  var k:int = e + j;
  var l:int = k;
  var m:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(l);
  var n:int = rust_alloc(i, m);
  var o:int = 16;
  var p:int = e + o;
  g_a = p;
  return n;
}

function alloc_vec_Vec_T_A_shrink_to_fit_h5be14a2f70fe33ef(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = alloc_vec_Vec_T_A_capacity_h91154bb255f99de1(a);
  var f:int = a[2];
  var g:int = e;
  var h:int = f;
  var i:int = g > h;
  var j:int = 1;
  var k:int = i & j;
  if (eqz(k)) goto B_a;
  var l:int = a[2];
  alloc_raw_vec_RawVec_T_A_shrink_to_fit_h9a21061c4aab5037(a, l);
  label B_a:
  var m:int = 16;
  var n:int = d + m;
  g_a = n;
}

function alloc_vec_Vec_T_A_shrink_to_fit_hd9d1776e62842ec0(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = alloc_vec_Vec_T_A_capacity_h04b6b4cdc47ac4f3(a);
  var f:int = a[2];
  var g:int = e;
  var h:int = f;
  var i:int = g > h;
  var j:int = 1;
  var k:int = i & j;
  if (eqz(k)) goto B_a;
  var l:int = a[2];
  alloc_raw_vec_RawVec_T_A_shrink_to_fit_h12208ec9c6e96faa(a, l);
  label B_a:
  var m:int = 16;
  var n:int = d + m;
  g_a = n;
}

function alloc_alloc_alloc_zeroed_h3bd568b0ab3d2709(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = 8;
  var g:int = e + f;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_hd03d4df4a572a4a6(h);
  var j:int = 8;
  var k:int = e + j;
  var l:int = k;
  var m:int = core_alloc_layout_Layout_align_he66d4e1016473d9e(l);
  var n:int = rust_alloc_zeroed(i, m);
  var o:int = 16;
  var p:int = e + o;
  g_a = p;
  return n;
}

function alloc_alloc_alloc_h29748e1861cd5848(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = 8;
  var g:int = e + f;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_hd03d4df4a572a4a6(h);
  var j:int = 8;
  var k:int = e + j;
  var l:int = k;
  var m:int = core_alloc_layout_Layout_align_he66d4e1016473d9e(l);
  var n:int = rust_alloc(i, m);
  var o:int = 16;
  var p:int = e + o;
  g_a = p;
  return n;
}

function alloc_vec_Vec_T_A_shrink_to_fit_h7b920f68f4a0216c(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = alloc_vec_Vec_T_A_capacity_ha40c9d7a2757b888(a);
  var f:int = a[2];
  var g:int = e;
  var h:int = f;
  var i:int = g > h;
  var j:int = 1;
  var k:int = i & j;
  if (eqz(k)) goto B_a;
  var l:int = a[2];
  alloc_raw_vec_RawVec_T_A_shrink_to_fit_h2f418aaf2cd500bc(a, l);
  label B_a:
  var m:int = 16;
  var n:int = d + m;
  g_a = n;
}

function alloc_raw_vec_handle_reserve_closure_hff092148b6688af8(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  var g:int = 8;
  var h:int = f + g;
  var i:int = 16;
  var j:int = f + i;
  alloc_collections_TryReserveError_kind_h92f85f9cab1081bd(h, j);
  var k:int = f[3];
  var l:int = f[2];
  a.b = k;
  a.a = l;
  var m:int = 32;
  var n:int = f + m;
  g_a = n;
}

function core_ptr_non_null_NonNull_T_len_h4df854dc261967d3(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[4] = a;
  e[5] = b;
  var f:int = 8;
  var g:int = e + f;
  core_ptr_non_null_NonNull_T_as_ptr_hbbb41f19cbf8ef4d(g, a, b);
  var h:int = e[3];
  var i:int = e[2];
  e[6] = i;
  e[7] = h;
  var j:int = core_ptr_metadata_metadata_he385fc93bb16abd7(i, h);
  var k:int = 32;
  var l:int = e + k;
  g_a = l;
  return j;
}

function alloc_alloc_alloc_zeroed_h458c8ea309369d51(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = 8;
  var g:int = e + f;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_hed7bf60fc00d518d(h);
  var j:int = 8;
  var k:int = e + j;
  var l:int = k;
  var m:int = core_alloc_layout_Layout_align_hbe5a9f7fb8662166(l);
  var n:int = rust_alloc_zeroed(i, m);
  var o:int = 16;
  var p:int = e + o;
  g_a = p;
  return n;
}

function alloc_alloc_alloc_hbd36034e35634230(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = 8;
  var g:int = e + f;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_hed7bf60fc00d518d(h);
  var j:int = 8;
  var k:int = e + j;
  var l:int = k;
  var m:int = core_alloc_layout_Layout_align_hbe5a9f7fb8662166(l);
  var n:int = rust_alloc(i, m);
  var o:int = 16;
  var p:int = e + o;
  g_a = p;
  return n;
}

function alloc_raw_vec_RawVec_T_A_set_ptr_hac1c8fd6f0b2313b(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int = core_ptr_non_null_NonNull_T_cast_h25fdbfaa1bcf6682(b, c);
  var h:int = core_ptr_non_null_NonNull_T_as_ptr_h80ab7d4aa42677da(g);
  var i:int =
    core_ptr_unique_Unique_T_new_unchecked_h8016cd05df31846a(h);
  a.a = i;
  var j:int = core_ptr_non_null_NonNull_T_len_h4df854dc261967d3(b, c);
  var k:int =
    alloc_raw_vec_RawVec_T_A_capacity_from_bytes_h37b68469e4d7cf53(j);
  a.b = k;
  var l:int = 16;
  var m:int = f + l;
  g_a = m;
}

function alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h417b2cc4fe93a7b8(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[5] = a;
  f[6] = b;
  f[7] = c;
  var g:int = 8;
  var h:int = f + g;
  var i:int = h;
  alloc_raw_vec_RawVec_T_A_grow_amortized_h6f3c94781939137b(i, a, b, c);
  var j:int = 8;
  var k:int = f + j;
  var l:int = k;
  alloc_raw_vec_handle_reserve_hf2c17f8362e82642(l);
  var m:int = 32;
  var n:int = f + m;
  g_a = n;
}

function core_slice_impl_T_get_unchecked_h66095cdf0df92508(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 32;
  var g:int_ptr = e - f;
  g_a = g;
  g[4] = b;
  g[5] = c;
  g[7] = d;
  var h:int = 8;
  var i:int = g + h;
  core_ops_range_RangeFrom_usize_as_core_slice_index_SliceIndex_T_get_unchecked_h16d920d4815c72fc(
    i,
    d,
    b,
    c);
  var j:int = g[3];
  var k:int = g[2];
  a.b = j;
  a.a = k;
  var l:int = 32;
  var m:int = g + l;
  g_a = m;
}

function core_slice_impl_T_get_unchecked_hd1dc3b984e51e678(a:{ a:int, b:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 32;
  var g:int_ptr = e - f;
  g_a = g;
  g[4] = b;
  g[5] = c;
  g[7] = d;
  var h:int = 8;
  var i:int = g + h;
  core_ops_range_RangeTo_usize_as_core_slice_index_SliceIndex_T_get_unchecked_h3254a427b7113d9d(
    i,
    d,
    b,
    c);
  var j:int = g[3];
  var k:int = g[2];
  a.b = j;
  a.a = k;
  var l:int = 32;
  var m:int = g + l;
  g_a = m;
}

function alloc_raw_vec_RawVec_T_A_set_ptr_hec4448a08f40cd8e(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int = core_ptr_non_null_NonNull_T_cast_h01ee112d63f5eb02(b, c);
  var h:int = core_ptr_non_null_NonNull_T_as_ptr_hb117359db57ced22(g);
  var i:int =
    core_ptr_unique_Unique_T_new_unchecked_hbe11a986f1be9ece(h);
  a.a = i;
  var j:int = core_ptr_non_null_NonNull_T_len_h4df854dc261967d3(b, c);
  var k:int =
    alloc_raw_vec_RawVec_T_A_capacity_from_bytes_h12dd384bdebc336c(j);
  a.b = k;
  var l:int = 16;
  var m:int = f + l;
  g_a = m;
}

function alloc_raw_vec_RawVec_T_A_set_ptr_hec5570548688c1cd(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int = core_ptr_non_null_NonNull_T_cast_h2a581058b20aba72(b, c);
  var h:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(g);
  var i:int =
    core_ptr_unique_Unique_T_new_unchecked_hf80bbb969ed74f34(h);
  a.a = i;
  var j:int = core_ptr_non_null_NonNull_T_len_h4df854dc261967d3(b, c);
  var k:int =
    alloc_raw_vec_RawVec_T_A_capacity_from_bytes_h2462053e10485098(j);
  a.b = k;
  var l:int = 16;
  var m:int = f + l;
  g_a = m;
}

function core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_4(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  var f:int = e[3];
  e[7] = f;
  var g:int = T_as_core_convert_From_T_from_h42518409f8b75c09(f);
  e[5] = g;
  var h:int = 1;
  e[4] = h;
  var i:int = e[4];
  var j:int = e[5];
  a.b = j;
  a.a = i;
  var k:int = 32;
  var l:int = e + k;
  g_a = l;
}

function core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_5(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  var f:int = e[3];
  e[7] = f;
  var g:int = T_as_core_convert_From_T_from_h42518409f8b75c09(f);
  e[5] = g;
  var h:int = 1;
  e[4] = h;
  var i:int = e[4];
  var j:int = e[5];
  a.b = j;
  a.a = i;
  var k:int = 32;
  var l:int = e + k;
  g_a = l;
}

function alloc_raw_vec_RawVec_T_A_set_ptr_h9c2abfd0cbc1a937(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int = core_ptr_non_null_NonNull_T_cast_h9b8f69a2b2fb2833(b, c);
  var h:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(g);
  var i:int =
    core_ptr_unique_Unique_T_new_unchecked_hf80bbb969ed74f34(h);
  a.a = i;
  var j:int = core_ptr_non_null_NonNull_T_len_h4df854dc261967d3(b, c);
  var k:int =
    alloc_raw_vec_RawVec_T_A_capacity_from_bytes_hede4f51048a3581e(j);
  a.b = k;
  var l:int = 16;
  var m:int = f + l;
  g_a = m;
}

function alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h8044a80da32979d2(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[5] = a;
  f[6] = b;
  f[7] = c;
  var g:int = 8;
  var h:int = f + g;
  var i:int = h;
  alloc_raw_vec_RawVec_T_A_grow_amortized_h80923cd96e903f64(i, a, b, c);
  var j:int = 8;
  var k:int = f + j;
  var l:int = k;
  alloc_raw_vec_handle_reserve_h71f983960773cf8b(l);
  var m:int = 32;
  var n:int = f + m;
  g_a = n;
}

function core_ptr_non_null_NonNull_T_as_non_null_ptr_h5bb27f5687862f50(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[4] = a;
  e[5] = b;
  var f:int = 8;
  var g:int = e + f;
  core_ptr_non_null_NonNull_T_as_ptr_hbbb41f19cbf8ef4d(g, a, b);
  var h:int = e[3];
  var i:int = e[2];
  e[6] = i;
  e[7] = h;
  var j:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h46314b06c79b45ed(i);
  var k:int = 32;
  var l:int = e + k;
  g_a = l;
  return j;
}

function core_option_Option_T_expect_h17c347df65aa6b6f(a:int, b:int, c:int, d:int, e:int):int {
  var f:int = g_a;
  var g:int = 32;
  var h:int_ptr = f - g;
  g_a = h;
  h[2] = a;
  h[3] = b;
  h[4] = c;
  h[5] = d;
  var i:int = h[2];
  br_table[B_b, B_a, ..B_b](i)
  label B_b:
  core_option_expect_failed_h4dde128bbd491598(c, d, e);
  unreachable;
  label B_a:
  var j:int = h[3];
  h[7] = j;
  var k:int = 32;
  var l:int = h + k;
  g_a = l;
  return j;
}

function core_option_Option_T_expect_h75f7a5b6bb53fc96(a:int, b:int, c:int, d:int, e:int):int {
  var f:int = g_a;
  var g:int = 32;
  var h:int_ptr = f - g;
  g_a = h;
  h[2] = a;
  h[3] = b;
  h[4] = c;
  h[5] = d;
  var i:int = h[2];
  br_table[B_b, B_a, ..B_b](i)
  label B_b:
  core_option_expect_failed_h4dde128bbd491598(c, d, e);
  unreachable;
  label B_a:
  var j:int = h[3];
  h[7] = j;
  var k:int = 32;
  var l:int = h + k;
  g_a = l;
  return j;
}

function core_option_Option_T_unwrap_hdd146c54046739fd(a:int, b:int, c:int):int {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[0] = a;
  f[1] = b;
  var g:int = f[0];
  br_table[B_b, B_a, ..B_b](g)
  label B_b:
  var h:int = 1048652;
  var i:int = h;
  var j:int = 43;
  core_panicking_panic_hceae0c79b0247f98(i, j, c);
  unreachable;
  label B_a:
  var k:int = f[1];
  f[3] = k;
  var l:int = 16;
  var m:int = f + l;
  g_a = m;
  return k;
}

function core_ptr_slice_from_raw_parts_mut_h134b7b93007f0fe5(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[5] = b;
  f[6] = c;
  f[7] = b;
  var g:int = 8;
  var h:int = f + g;
  core_ptr_metadata_from_raw_parts_mut_hc0e3587afa2c1afc(h, b, c);
  var i:int = f[3];
  var j:int = f[2];
  a.b = i;
  a.a = j;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_u8_into_abi_h8c77e700feef3bd5(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  var g:int = core_slice_impl_T_as_ptr_he7625c3e66273994(b, c);
  var h:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_T_into_abi_hdf86ed9026d0df65(
      g);
  f.a = h;
  f.b = c;
  var i:int = f.a;
  var j:int = f.b;
  a.b = j;
  a.a = i;
  var k:int = 16;
  var l:int = f + k;
  g_a = l;
}

function core_ptr_slice_from_raw_parts_mut_h6a711182eaaf2c95(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[5] = b;
  f[6] = c;
  f[7] = b;
  var g:int = 8;
  var h:int = f + g;
  core_ptr_metadata_from_raw_parts_mut_hfe43d280bea1fee4(h, b, c);
  var i:int = f[3];
  var j:int = f[2];
  a.b = i;
  a.a = j;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function core_ptr_slice_from_raw_parts_mut_ha9fdd40deb40c392(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[5] = b;
  f[6] = c;
  f[7] = b;
  var g:int = 8;
  var h:int = f + g;
  core_ptr_metadata_from_raw_parts_mut_hbbd9c7bf16992fd6(h, b, c);
  var i:int = f[3];
  var j:int = f[2];
  a.b = i;
  a.a = j;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function core_ptr_slice_from_raw_parts_mut_h853bda8e55fd43b2(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[5] = b;
  f[6] = c;
  f[7] = b;
  var g:int = 8;
  var h:int = f + g;
  core_ptr_metadata_from_raw_parts_mut_h155afa3bdc79b038(h, b, c);
  var i:int = f[3];
  var j:int = f[2];
  a.b = i;
  a.a = j;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function core_ptr_slice_from_raw_parts_mut_h097538769b43587c(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[5] = b;
  f[6] = c;
  f[7] = b;
  var g:int = 8;
  var h:int = f + g;
  core_ptr_metadata_from_raw_parts_mut_h86c00281a20b1645(h, b, c);
  var i:int = f[3];
  var j:int = f[2];
  a.b = i;
  a.a = j;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function core_ptr_slice_from_raw_parts_mut_hc60dce5439e070b6(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[5] = b;
  f[6] = c;
  f[7] = b;
  var g:int = 8;
  var h:int = f + g;
  core_ptr_metadata_from_raw_parts_mut_ha6e01e56d6678613(h, b, c);
  var i:int = f[3];
  var j:int = f[2];
  a.b = i;
  a.a = j;
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function core_ptr_write_h17edb25b32c622d4(a:long_ptr@4, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[3] = a;
  var l:long = b[0];
  a[0] = l;
  var f:int = 16;
  var g:long_ptr@4 = a + f;
  var h:long_ptr@4 = b + f;
  var m:long = h[0];
  g[0] = m;
  var i:int = 8;
  var j:long_ptr@4 = a + i;
  var k:long_ptr@4 = b + i;
  var n:long = k[0];
  j[0] = n;
}

function core_panicking_panic_bounds_check_h1d84519ec46ed48c(a:int, b:int, c:int) {
  var d:int = g_a - 48;
  g_a = d;
  d[1]:int = b;
  d[0]:int = a;
  (d + 28)[0]:int = 2;
  (d + 44)[0]:int = 6;
  d[3]:long@4 = 2L;
  d[2]:int = 1054116;
  d[9]:int = 6;
  d[6]:int = d + 32;
  d[10]:int = d;
  d[8]:int = d + 4;
  core_panicking_panic_fmt_hf69c8b08bc9d2ee5(d + 8, c);
  unreachable;
}

function core_slice_index_slice_start_index_len_fail_hfdb57cc8dc82f9cb(a:int, b:int, c:int) {
  var d:int = g_a - 48;
  g_a = d;
  d[1]:int = b;
  d[0]:int = a;
  (d + 28)[0]:int = 2;
  (d + 44)[0]:int = 6;
  d[3]:long@4 = 2L;
  d[2]:int = 1054596;
  d[9]:int = 6;
  d[6]:int = d + 32;
  d[10]:int = d + 4;
  d[8]:int = d;
  core_panicking_panic_fmt_hf69c8b08bc9d2ee5(d + 8, c);
  unreachable;
}

function core_fmt_Arguments_as_core_fmt_Display_fmt_h5b388d0ba01268bb(a:long_ptr@4, b:int_ptr):int {
  var c:long_ptr = g_a - 32;
  g_a = c;
  var d:int = (b + 28)[0]:int;
  b = b[6];
  (c + 8 + 16)[0]:long = (a + 16)[0]:long@4;
  (c + 8 + 8)[0]:long = (a + 8)[0]:long@4;
  c[1] = a[0];
  a = core_fmt_write_hb363a5cc37db74af(b, d, c + 8);
  g_a = c + 32;
  return a;
}

function core_iter_iterator_Iterator_collect_hd595ea78ce0ec62b(a:int, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 16;
  var e:int = c - d;
  g_a = e;
  var f:long_ptr@4 = e;
  var n:long = b[0];
  f[0] = n;
  var g:int = 8;
  var h:int_ptr = f + g;
  var i:int_ptr = b + g;
  var j:int = i[0];
  h[0] = j;
  var k:int = e;
  alloc_vec_Vec_T_as_core_iter_collect_FromIterator_T_from_iter_h4d4d625e30aa9768(
    a,
    k);
  var l:int = 16;
  var m:int = e + l;
  g_a = m;
}

function alloc_vec_Vec_T_as_alloc_vec_spec_from_iter_SpecFromIter_T_I_from_iter_hafa93f04aa1c833e(a:int, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 16;
  var e:int = c - d;
  g_a = e;
  var f:long_ptr@4 = e;
  var n:long = b[0];
  f[0] = n;
  var g:int = 8;
  var h:int_ptr = f + g;
  var i:int_ptr = b + g;
  var j:int = i[0];
  h[0] = j;
  var k:int = e;
  alloc_vec_Vec_T_as_alloc_vec_spec_from_iter_nested_SpecFromIterNested_T_I_from_iter_hd513d68e37667b2(
    a,
    k);
  var l:int = 16;
  var m:int = e + l;
  g_a = m;
}

function web_sys_features_gen_Window_wbg_generated_Window_impl_wasm_bindgen_cast_JsCast_for_web_sys_features__1(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[2] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_wasm_bindgen_JsValue_into_abi_h_1(
      a);
  d[3] = e;
  var f:int =
    web_sys_features_gen_Window_wbg_generated_Window_impl_wasm_bindgen_cast_JsCast_for_web_sys_features_(
      e);
  var g:int = 0;
  var h:int = f;
  var i:int = g;
  var j:int = h != i;
  var k:int = 1;
  var l:int = j & k;
  var m:int = 16;
  var n:int = d + m;
  g_a = n;
  return l;
}

function alloc_alloc_realloc_hcf82e3a15434d0e7(a:int, b:int, c:int, d:int):int {
  var e:int = g_a;
  var f:int = 16;
  var g:{ a:int, b:int, c:int, d:int } = e - f;
  g_a = g;
  g.a = b;
  g.b = c;
  g.c = a;
  g.d = d;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_h23e58bed513508c1(h);
  var j:int = g;
  var k:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(j);
  var l:int = rust_realloc(a, i, k, d);
  var m:int = 16;
  var n:int = g + m;
  g_a = n;
  return l;
}

function alloc_vec_Vec_T_A_with_capacity_in_h48c9e8d584456e9b(a:{ a:int, b:int, c:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = b;
  var f:int = 8;
  var g:int = e + f;
  alloc_raw_vec_RawVec_T_A_with_capacity_in_h9c424b42f43a660a(g, b);
  var h:int = e[3];
  var i:int = e[2];
  a.a = i;
  a.b = h;
  var j:int = 0;
  a.c = j;
  var k:int = 32;
  var l:int = e + k;
  g_a = l;
}

function alloc_vec_Vec_T_A_with_capacity_in_h9e9bf1033d9ff22e(a:{ a:int, b:int, c:int }, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[5] = b;
  var f:int = 8;
  var g:int = e + f;
  alloc_raw_vec_RawVec_T_A_with_capacity_in_h0fbce035afc062bd(g, b);
  var h:int = e[3];
  var i:int = e[2];
  a.a = i;
  a.b = h;
  var j:int = 0;
  a.c = j;
  var k:int = 32;
  var l:int = e + k;
  g_a = l;
}

function alloc_alloc_realloc_h02bf57a43f0f7c0d(a:int, b:int, c:int, d:int):int {
  var e:int = g_a;
  var f:int = 16;
  var g:{ a:int, b:int, c:int, d:int } = e - f;
  g_a = g;
  g.a = b;
  g.b = c;
  g.c = a;
  g.d = d;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_hd03d4df4a572a4a6(h);
  var j:int = g;
  var k:int = core_alloc_layout_Layout_align_he66d4e1016473d9e(j);
  var l:int = rust_realloc(a, i, k, d);
  var m:int = 16;
  var n:int = g + m;
  g_a = n;
  return l;
}

function alloc_vec_Vec_T_A_extend_from_slice_hcc34d0f891f206d0(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[5] = a;
  f[6] = b;
  f[7] = c;
  var g:int = 8;
  var h:int = f + g;
  core_slice_impl_T_iter_h965bf82793b57669(h, b, c);
  var i:int = f[3];
  var j:int = f[2];
  alloc_vec_Vec_T_A_as_alloc_vec_spec_extend_SpecExtend_T_core_slice_iter_Iter_T_spec_extend_h5678c1f6(
    a,
    j,
    i);
  var k:int = 32;
  var l:int = f + k;
  g_a = l;
}

function alloc_alloc_realloc_hedd2f213e693d0f4(a:int, b:int, c:int, d:int):int {
  var e:int = g_a;
  var f:int = 16;
  var g:{ a:int, b:int, c:int, d:int } = e - f;
  g_a = g;
  g.a = b;
  g.b = c;
  g.c = a;
  g.d = d;
  var h:int = g;
  var i:int = core_alloc_layout_Layout_size_hed7bf60fc00d518d(h);
  var j:int = g;
  var k:int = core_alloc_layout_Layout_align_hbe5a9f7fb8662166(j);
  var l:int = rust_realloc(a, i, k, d);
  var m:int = 16;
  var n:int = g + m;
  g_a = n;
  return l;
}

function alloc_string_String_new_h583f567769abe97c(a:long_ptr@4) {
  var b:int = g_a;
  var c:int = 16;
  var d:int = b - c;
  g_a = d;
  var e:int = d;
  alloc_vec_Vec_T_new_h837b2651f076230b(e);
  var f:long_ptr@4 = d;
  var m:long = f[0];
  a[0] = m;
  var g:int = 8;
  var h:int_ptr = a + g;
  var i:int_ptr = f + g;
  var j:int = i[0];
  h[0] = j;
  var k:int = 16;
  var l:int = d + k;
  g_a = l;
}

function alloc_raw_vec_RawVec_T_A_reserve_h31297051cea57edf(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int =
    alloc_raw_vec_RawVec_T_A_needs_to_grow_h383370444d91534b(a, b, c);
  var h:int = 1;
  var i:int = g & h;
  if (eqz(i)) goto B_a;
  alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h417b2cc4fe93a7b8(
    a,
    b,
    c);
  label B_a:
  var j:int = 16;
  var k:int = f + j;
  g_a = k;
}

function alloc_raw_vec_RawVec_T_A_shrink_to_fit_h12208ec9c6e96faa(a:int, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[6] = a;
  e[7] = b;
  var f:int = 8;
  var g:int = e + f;
  var h:int = g;
  alloc_raw_vec_RawVec_T_A_shrink_hc076bb7f110ceef6(h, a, b);
  var i:int = 8;
  var j:int = e + i;
  var k:int = j;
  alloc_raw_vec_handle_reserve_hd4e3f05045606f67(k);
  var l:int = 32;
  var m:int = e + l;
  g_a = m;
}

function alloc_raw_vec_RawVec_T_A_shrink_to_fit_h9a21061c4aab5037(a:int, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[6] = a;
  e[7] = b;
  var f:int = 8;
  var g:int = e + f;
  var h:int = g;
  alloc_raw_vec_RawVec_T_A_shrink_h4f6c2444ca4b98f4(h, a, b);
  var i:int = 8;
  var j:int = e + i;
  var k:int = j;
  alloc_raw_vec_handle_reserve_hd4e3f05045606f67(k);
  var l:int = 32;
  var m:int = e + l;
  g_a = m;
}

function alloc_raw_vec_RawVec_T_A_shrink_to_fit_h2f418aaf2cd500bc(a:int, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  g_a = e;
  e[6] = a;
  e[7] = b;
  var f:int = 8;
  var g:int = e + f;
  var h:int = g;
  alloc_raw_vec_RawVec_T_A_shrink_h8b1ee712d7cfb67b(h, a, b);
  var i:int = 8;
  var j:int = e + i;
  var k:int = j;
  alloc_raw_vec_handle_reserve_h71f983960773cf8b(k);
  var l:int = 32;
  var m:int = e + l;
  g_a = m;
}

function alloc_raw_vec_RawVec_T_A_reserve_h71f69e40853a8b2a(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int =
    alloc_raw_vec_RawVec_T_A_needs_to_grow_hfe6364cc99b89494(a, b, c);
  var h:int = 1;
  var i:int = g & h;
  if (eqz(i)) goto B_a;
  alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h8044a80da32979d2(
    a,
    b,
    c);
  label B_a:
  var j:int = 16;
  var k:int = f + j;
  g_a = k;
}

function alloc_vec_Vec_T_A_from_raw_parts_in_h900e2cf510f977f6(a:{ a:int, b:int, c:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 32;
  var g:int_ptr = e - f;
  g_a = g;
  g[3] = b;
  g[4] = c;
  g[5] = d;
  alloc_raw_vec_RawVec_T_A_from_raw_parts_in_h048bd7a4e1453e56(g, b, d);
  var h:int = g[1];
  var i:int = g[0];
  a.a = i;
  a.b = h;
  a.c = c;
  var j:int = 32;
  var k:int = g + j;
  g_a = k;
}

function mut_W_as_core_fmt_Write_write_fmt_h4e63be9707973d51(a:int_ptr, b:long_ptr@4):int {
  var c:int = g_a - 32;
  g_a = c;
  c[1]:int = a[0];
  (c + 8 + 16)[0]:long = (b + 16)[0]:long@4;
  (c + 8 + 8)[0]:long = (b + 8)[0]:long@4;
  c[1]:long = b[0];
  b = core_fmt_write_hb363a5cc37db74af(c + 4, 1053624, c + 8);
  g_a = c + 32;
  return b;
}

function mut_W_as_core_fmt_Write_write_fmt_hbd1056884a229db1(a:int_ptr, b:long_ptr@4):int {
  var c:int = g_a - 32;
  g_a = c;
  c[1]:int = a[0];
  (c + 8 + 16)[0]:long = (b + 16)[0]:long@4;
  (c + 8 + 8)[0]:long = (b + 8)[0]:long@4;
  c[1]:long = b[0];
  b = core_fmt_write_hb363a5cc37db74af(c + 4, 1053844, c + 8);
  g_a = c + 32;
  return b;
}

function core_alloc_layout_Layout_from_size_align_unchecked_h7446fee2b95b05cf(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  var g:int =
    core_num_nonzero_NonZeroUsize_new_unchecked_h4b678ec2078f875b(c);
  f.a = b;
  f.b = g;
  var h:int = f.a;
  var i:int = f.b;
  a.b = i;
  a.a = h;
  var j:int = 16;
  var k:int = f + j;
  g_a = k;
}

function core_ptr_drop_in_place_core_result_Result_web_sys_features_gen_Window_Window_js_sys_Object_hecd79eb1(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[0];
  if (e) goto B_b;
  var f:int = 4;
  var g:int = a + f;
  core_ptr_drop_in_place_web_sys_features_gen_Window_Window_hbb32e061b5062bd7(
    g);
  goto B_a;
  label B_b:
  var h:int = 4;
  var i:int = a + h;
  core_ptr_drop_in_place_js_sys_Object_h9a6c2effa8308ac5(i);
  label B_a:
  var j:int = 16;
  var k:int = d + j;
  g_a = k;
}

function core_ptr_drop_in_place_core_result_Result_js_sys_Object_wasm_bindgen_JsValue_h002fbb0d3e54cb53(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[0];
  if (e) goto B_b;
  var f:int = 4;
  var g:int = a + f;
  core_ptr_drop_in_place_js_sys_Object_h9a6c2effa8308ac5(g);
  goto B_a;
  label B_b:
  var h:int = 4;
  var i:int = a + h;
  core_ptr_drop_in_place_wasm_bindgen_JsValue_ha52073a19a60eadc(i);
  label B_a:
  var j:int = 16;
  var k:int = d + j;
  g_a = k;
}

function core_ptr_drop_in_place_core_result_Result_wasm_bindgen_JsValue_wasm_bindgen_JsValue_h2286174c4da2725(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[0];
  if (e) goto B_b;
  var f:int = 4;
  var g:int = a + f;
  core_ptr_drop_in_place_wasm_bindgen_JsValue_ha52073a19a60eadc(g);
  goto B_a;
  label B_b:
  var h:int = 4;
  var i:int = a + h;
  core_ptr_drop_in_place_wasm_bindgen_JsValue_ha52073a19a60eadc(i);
  label B_a:
  var j:int = 16;
  var k:int = d + j;
  g_a = k;
}

function core_alloc_layout_Layout_from_size_align_unchecked_h6a97c487e6240d7c(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  var g:int =
    core_num_nonzero_NonZeroUsize_new_unchecked_h43ec79d1871116de(c);
  f.a = b;
  f.b = g;
  var h:int = f.a;
  var i:int = f.b;
  a.b = i;
  a.a = h;
  var j:int = 16;
  var k:int = f + j;
  g_a = k;
}

function core_alloc_layout_Layout_from_size_align_unchecked_hd141f6a17bb12fc4(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  var g:int =
    core_num_nonzero_NonZeroUsize_new_unchecked_hc0c793c7852eceec(c);
  f.a = b;
  f.b = g;
  var h:int = f.a;
  var i:int = f.b;
  a.b = i;
  a.a = h;
  var j:int = 16;
  var k:int = f + j;
  g_a = k;
}

function alloc_raw_vec_RawVec_T_A_from_raw_parts_in_h048bd7a4e1453e56(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  g_a = f;
  f[4] = b;
  f[5] = c;
  var g:int =
    core_ptr_unique_Unique_T_new_unchecked_hf80bbb969ed74f34(b);
  f[2] = g;
  f[3] = c;
  var h:int = f[2];
  var i:int = f[3];
  a.b = i;
  a.a = h;
  var j:int = 32;
  var k:int = f + j;
  g_a = k;
}

function core_alloc_layout_Layout_from_size_align_unchecked_he038ca9588015484(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  var g:int =
    core_num_nonzero_NonZeroUsize_new_unchecked_hffbc008436706e3c(c);
  f.a = b;
  f.b = g;
  var h:int = f.a;
  var i:int = f.b;
  a.b = i;
  a.a = h;
  var j:int = 16;
  var k:int = f + j;
  g_a = k;
}

function core_fmt_ArgumentV1_new_haa0d1c28daa7270e(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[4] = b;
  f[5] = c;
  f[6] = c;
  var g:int = f[6];
  f[7] = b;
  var h:int = f[7];
  f[2] = h;
  f[3] = g;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
}

function core_ptr_metadata_from_raw_parts_hcb87317b5e6c2db1(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[6] = b;
  f[7] = c;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[2] = g;
  f[3] = h;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
}

function core_ptr_metadata_from_raw_parts_mut_hc0e3587afa2c1afc(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[6] = b;
  f[7] = c;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[2] = g;
  f[3] = h;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
}

function wasm_bindgen_JsValue_is_undefined_hd826965f4d9968bd(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[0];
  var f:int = wasm_bindgen_wbindgen_is_undefined_h80067d99dd27ecb2(e);
  var g:int = 1;
  var h:int = f;
  var i:int = g;
  var j:int = h == i;
  var k:int = 1;
  var l:int = j & k;
  var m:int = 16;
  var n:int = d + m;
  g_a = n;
  return l;
}

function core_ptr_metadata_from_raw_parts_mut_hbbd9c7bf16992fd6(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[6] = b;
  f[7] = c;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[2] = g;
  f[3] = h;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
}

function core_ptr_metadata_from_raw_parts_mut_hfe43d280bea1fee4(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[6] = b;
  f[7] = c;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[2] = g;
  f[3] = h;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
}

function core_fmt_ArgumentV1_new_h687622c7d3eb9603(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[4] = b;
  f[5] = c;
  f[6] = c;
  var g:int = f[6];
  f[7] = b;
  var h:int = f[7];
  f[2] = h;
  f[3] = g;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
}

function core_ptr_metadata_from_raw_parts_mut_h155afa3bdc79b038(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[6] = b;
  f[7] = c;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[2] = g;
  f[3] = h;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
}

function core_ptr_metadata_from_raw_parts_h92d4ec6588c38a5a(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[6] = b;
  f[7] = c;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[2] = g;
  f[3] = h;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
}

function core_ptr_metadata_from_raw_parts_mut_h86c00281a20b1645(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[6] = b;
  f[7] = c;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[2] = g;
  f[3] = h;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
}

function core_ptr_metadata_from_raw_parts_mut_ha6e01e56d6678613(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 32;
  var f:int_ptr = d - e;
  f[6] = b;
  f[7] = c;
  f[4] = b;
  f[5] = c;
  var g:int = f[4];
  var h:int = f[5];
  f[2] = g;
  f[3] = h;
  var i:int = f[2];
  var j:int = f[3];
  a.b = j;
  a.a = i;
}

function core_ptr_unique_Unique_T_as_ref_hb259cfc64fdb0bd0(a:{ a:int, b:int }, b:{ a:int, b:int }) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  var f:int = b.a;
  var g:int = b.b;
  core_ptr_unique_Unique_T_as_ptr_hc15a2faae3b056a4(e, f, g);
  var h:int = e[1];
  var i:int = e[0];
  a.b = h;
  a.a = i;
  var j:int = 16;
  var k:int = e + j;
  g_a = k;
}

function core_ptr_slice_from_raw_parts_h98d0d420453a4355(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  var g:int = core_ptr_ptr_impl_T_cast_h91337973e45f2d50(b);
  core_ptr_metadata_from_raw_parts_hcb87317b5e6c2db1(f, g, c);
  var h:int = f.b;
  var i:int = f.a;
  a.b = h;
  a.a = i;
  var j:int = 16;
  var k:int = f + j;
  g_a = k;
}

function alloc_vec_Vec_T_A_as_core_ops_deref_Deref_deref_hc08cd3884bd85f98(a:{ a:int, b:int }, b:int_ptr) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  var f:int = alloc_vec_Vec_T_A_as_ptr_h0224805ece1b0b7e(b);
  var g:int = b[2];
  core_slice_raw_from_raw_parts_h8677b041deeee7ea(e, f, g);
  var h:int = e[1];
  var i:int = e[0];
  a.b = h;
  a.a = i;
  var j:int = 16;
  var k:int = e + j;
  g_a = k;
}

function core_ptr_slice_from_raw_parts_hdb5bffc0dde131b5(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  var g:int = core_ptr_ptr_impl_T_cast_hee3715c5cbd5bcf8(b);
  core_ptr_metadata_from_raw_parts_h92d4ec6588c38a5a(f, g, c);
  var h:int = f.b;
  var i:int = f.a;
  a.b = h;
  a.a = i;
  var j:int = 16;
  var k:int = f + j;
  g_a = k;
}

function alloc_vec_Vec_T_A_as_core_ops_deref_Deref_deref_h30bd18da80b67e7c(a:{ a:int, b:int }, b:int_ptr) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  var f:int = alloc_vec_Vec_T_A_as_ptr_hc4f1d648b83a73a7(b);
  var g:int = b[2];
  core_slice_raw_from_raw_parts_hdef8727ebe33fd2c(e, f, g);
  var h:int = e[1];
  var i:int = e[0];
  a.b = h;
  a.a = i;
  var j:int = 16;
  var k:int = e + j;
  g_a = k;
}

function T_as_alloc_slice_hack_ConvertVec_to_vec_h8698ab487c2a8751(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int } = d - e;
  g_a = f;
  f.a = b;
  f.b = c;
  alloc_vec_Vec_T_A_with_capacity_in_h9e9bf1033d9ff22e(a, c);
  var g:int = core_slice_impl_T_as_ptr_he7625c3e66273994(b, c);
  var h:int = alloc_vec_Vec_T_A_as_mut_ptr_h834293a9eeb4907e(a);
  core_ptr_ptr_impl_T_copy_to_nonoverlapping_h5b393dfaf871a9a7(g, h, c);
  alloc_vec_Vec_T_A_set_len_hd6e59fbce748eb24(a, c);
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function alloc_alloc_dealloc_h8f88c954d8ae0aa5(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[0] = b;
  f[1] = c;
  f[3] = a;
  var g:int = f;
  var h:int = core_alloc_layout_Layout_size_hec1bfea4eb6d0cc6(g);
  var i:int = f;
  var j:int = core_alloc_layout_Layout_align_h1fe3f5e869a780ef(i);
  rust_dealloc(a, h, j);
  var k:int = 16;
  var l:int = f + k;
  g_a = l;
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_hf2aa3c64480527d8(a:int):int {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  d[2] = a;
  var e:int = d[2];
  var f:int = eqz(e);
  br_table[B_c, B_b, ..B_c](f)
  label B_c:
  var g:int = d[2];
  d[7] = g;
  d[3] = g;
  goto B_a;
  label B_b:
  var h:int = 0;
  d[3] = h;
  label B_a:
  var i:int = d[3];
  return i;
}

function core_option_Option_T_as_ref_hb0e95d745ad335d7(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[2] = a;
  var e:int = a[0];
  br_table[B_c, B_b, ..B_c](e)
  label B_c:
  var f:int = 0;
  d[1] = f;
  goto B_a;
  label B_b:
  var g:int = 4;
  var h:int = a + g;
  d[3] = h;
  d[1] = h;
  label B_a:
  var i:int = d[1];
  return i;
}

function alloc_alloc_dealloc_h327d9e1349a238ef(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[0] = b;
  f[1] = c;
  f[3] = a;
  var g:int = f;
  var h:int = core_alloc_layout_Layout_size_h23e58bed513508c1(g);
  var i:int = f;
  var j:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(i);
  rust_dealloc(a, h, j);
  var k:int = 16;
  var l:int = f + k;
  g_a = l;
}

function core_ptr_ptr_impl_T_guaranteed_eq_hd5cb1d2879d2ac50(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int = c - d;
  e[1]:int = a;
  e[2]:int = b;
  var f:int = a;
  var g:int = b;
  var h:int = f == g;
  var i:int = 1;
  var j:int = h & i;
  e[15]:byte = j;
  var k:int = e[15]:ubyte;
  var l:int = 1;
  var m:int = k & l;
  return m;
}

function alloc_alloc_dealloc_had876e177e3eb82a(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[0] = b;
  f[1] = c;
  f[3] = a;
  var g:int = f;
  var h:int = core_alloc_layout_Layout_size_hd03d4df4a572a4a6(g);
  var i:int = f;
  var j:int = core_alloc_layout_Layout_align_he66d4e1016473d9e(i);
  rust_dealloc(a, h, j);
  var k:int = 16;
  var l:int = f + k;
  g_a = l;
}

function core_result_Result_T_E_as_core_ops_try_trait_Try_branch_h4b08277a288989e0(a:int):int {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  d[2] = a;
  var e:int = d[2];
  var f:int = eqz(e);
  br_table[B_c, B_b, ..B_c](f)
  label B_c:
  var g:int = d[2];
  d[7] = g;
  d[3] = g;
  goto B_a;
  label B_b:
  var h:int = 0;
  d[3] = h;
  label B_a:
  var i:int = d[3];
  return i;
}

function core_ptr_mut_ptr_impl_mut_T_guaranteed_eq_h175b643141e1b631(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int = c - d;
  e[1]:int = a;
  e[2]:int = b;
  var f:int = a;
  var g:int = b;
  var h:int = f == g;
  var i:int = 1;
  var j:int = h & i;
  e[15]:byte = j;
  var k:int = e[15]:ubyte;
  var l:int = 1;
  var m:int = k & l;
  return m;
}

function alloc_alloc_dealloc_h69523d9f2769d69e(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[0] = b;
  f[1] = c;
  f[3] = a;
  var g:int = f;
  var h:int = core_alloc_layout_Layout_size_hed7bf60fc00d518d(g);
  var i:int = f;
  var j:int = core_alloc_layout_Layout_align_hbe5a9f7fb8662166(i);
  rust_dealloc(a, h, j);
  var k:int = 16;
  var l:int = f + k;
  g_a = l;
}

function core_option_Option_T_as_ref_h7c6c5e8f3250821a(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[2] = a;
  var e:int = a[0];
  br_table[B_c, B_b, ..B_c](e)
  label B_c:
  var f:int = 0;
  d[1] = f;
  goto B_a;
  label B_b:
  var g:int = 4;
  var h:int = a + g;
  d[3] = h;
  d[1] = h;
  label B_a:
  var i:int = d[1];
  return i;
}

function core_iter_range_impl_core_iter_iterator_Iterator_for_core_ops_range_Range_A_nth_he764d753ccb93a0e(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  core_ops_range_Range_T_as_core_iter_range_RangeIteratorImpl_spec_nth_h0e9f97a4d62fec61(
    f,
    b,
    c);
  var g:int = f.b;
  var h:int = f.a;
  a.b = g;
  a.a = h;
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function core_slice_raw_from_raw_parts_h8677b041deeee7ea(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  core_ptr_slice_from_raw_parts_h98d0d420453a4355(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  a.b = g;
  a.a = h;
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function core_slice_impl_T_iter_h5497c6bdda3ae519(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  core_slice_iter_Iter_T_new_ha86f4167517dbb2d(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  a.b = g;
  a.a = h;
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function alloc_vec_Vec_T_A_as_core_ops_index_Index_I_index_hdf262a2c7b861313(a:int, b:int, c:int):int {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = a;
  f.d = b;
  alloc_vec_Vec_T_A_as_core_ops_deref_Deref_deref_hc08cd3884bd85f98(f, a);
  var g:int = f.b;
  var h:int = f.a;
  var i:int =
    core_slice_index_impl_core_ops_index_Index_I_for_T_index_h77699520da4a1d4a(
      h,
      g,
      b,
      c);
  var j:int = 16;
  var k:int = f + j;
  g_a = k;
  return i;
}

function alloc_raw_vec_RawVec_T_A_new_in_h93cc52992ff32a18(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 16;
  var d:{ a:int, b:int } = b - c;
  g_a = d;
  var e:int = core_ptr_unique_Unique_T_dangling_h0b866e52cec4e290();
  d.a = e;
  var f:int = 0;
  d.b = f;
  var g:int = d.a;
  var h:int = d.b;
  a.b = h;
  a.a = g;
  var i:int = 16;
  var j:int = d + i;
  g_a = j;
}

function alloc_raw_vec_RawVec_T_A_new_in_hfb850b9b4488d097(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 16;
  var d:{ a:int, b:int } = b - c;
  g_a = d;
  var e:int = core_ptr_unique_Unique_T_dangling_h3f725656b3ab0a84();
  d.a = e;
  var f:int = 0;
  d.b = f;
  var g:int = d.a;
  var h:int = d.b;
  a.b = h;
  a.a = g;
  var i:int = 16;
  var j:int = d + i;
  g_a = j;
}

function core_slice_raw_from_raw_parts_mut_h6e22ba9bb4dba110(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  core_ptr_slice_from_raw_parts_mut_ha9fdd40deb40c392(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  a.b = g;
  a.a = h;
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function core_slice_raw_from_raw_parts_mut_he933a103c51e3842(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  core_ptr_slice_from_raw_parts_mut_h6a711182eaaf2c95(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  a.b = g;
  a.a = h;
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function core_slice_impl_T_iter_h965bf82793b57669(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  core_slice_iter_Iter_T_new_h8cbedd25cf7dfe6a(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  a.b = g;
  a.a = h;
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function core_slice_raw_from_raw_parts_mut_hd0fb5c1236e0cb3e(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  core_ptr_slice_from_raw_parts_mut_h853bda8e55fd43b2(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  a.b = g;
  a.a = h;
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function core_slice_raw_from_raw_parts_hdef8727ebe33fd2c(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  core_ptr_slice_from_raw_parts_hdb5bffc0dde131b5(f, b, c);
  var g:int = f.b;
  var h:int = f.a;
  a.b = g;
  a.a = h;
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function T_as_core_convert_Into_U_into_h6eedd7c65925ce3f(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  g_a = f;
  f.c = b;
  f.d = c;
  alloc_collections_TryReserveError_as_core_convert_From_alloc_collections_TryReserveErrorKind_from_h9(
    f,
    b,
    c);
  var g:int = f.b;
  var h:int = f.a;
  a.b = g;
  a.a = h;
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function core_option_expect_failed_h4dde128bbd491598(a:int, b:int, c:int) {
  var d:int = g_a - 48;
  g_a = d;
  d[3]:int = b;
  d[2]:int = a;
  (d + 36)[0]:int = 1;
  d[5]:long@4 = 1L;
  d[4]:int = 1054040;
  d[11]:int = 54;
  d[8]:int = d + 40;
  d[10]:int = d + 8;
  core_panicking_panic_fmt_hf69c8b08bc9d2ee5(d + 16, c);
  unreachable;
}

function core_array_impl_core_iter_collect_IntoIterator_for_T_N_into_iter_h1596b510c5415bf4(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  var f:int = 4;
  core_slice_impl_T_iter_h5497c6bdda3ae519(e, b, f);
  var g:int = e[1];
  var h:int = e[0];
  a.b = g;
  a.a = h;
  var i:int = 16;
  var j:int = e + i;
  g_a = j;
}

function wasm_bindgen_externref_HEAP_SLAB_init_h7571ae11dff7b978(a:int) {
  var b:int = g_a;
  var c:int = 32;
  var d:int = b - c;
  g_a = d;
  var e:int = 8;
  var f:int = d + e;
  var g:int = f;
  wasm_bindgen_externref_Slab_new_h22d0245eb517d6d7(g);
  var h:int = 8;
  var i:int = d + h;
  var j:int = i;
  core_cell_Cell_T_new_hc81e2fc504fc19db(a, j);
  var k:int = 32;
  var l:int = d + k;
  g_a = l;
}

function core_ptr_unique_Unique_T_cast_hfb39abf4f56345f7(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:{ a:int, b:int, c:int, d:int } = c - d;
  g_a = e;
  e.c = a;
  e.d = b;
  core_ptr_unique_Unique_T_as_ptr_hc15a2faae3b056a4(e, a, b);
  e.b;
  var f:int = e.a;
  var g:int =
    core_ptr_unique_Unique_T_new_unchecked_hf80bbb969ed74f34(f);
  var h:int = 16;
  var i:int = e + h;
  g_a = i;
  return g;
}

function core_ptr_non_null_NonNull_T_cast_h01ee112d63f5eb02(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:{ a:int, b:int, c:int, d:int } = c - d;
  g_a = e;
  e.c = a;
  e.d = b;
  core_ptr_non_null_NonNull_T_as_ptr_hbbb41f19cbf8ef4d(e, a, b);
  e.b;
  var f:int = e.a;
  var g:int =
    core_ptr_non_null_NonNull_T_new_unchecked_haf0a40ad5334b2d0(f);
  var h:int = 16;
  var i:int = e + h;
  g_a = i;
  return g;
}

function core_ptr_non_null_NonNull_T_cast_h25fdbfaa1bcf6682(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:{ a:int, b:int, c:int, d:int } = c - d;
  g_a = e;
  e.c = a;
  e.d = b;
  core_ptr_non_null_NonNull_T_as_ptr_hbbb41f19cbf8ef4d(e, a, b);
  e.b;
  var f:int = e.a;
  var g:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h5f68ca722f50596c(f);
  var h:int = 16;
  var i:int = e + h;
  g_a = i;
  return g;
}

function core_ptr_non_null_NonNull_T_cast_h2a581058b20aba72(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:{ a:int, b:int, c:int, d:int } = c - d;
  g_a = e;
  e.c = a;
  e.d = b;
  core_ptr_non_null_NonNull_T_as_ptr_hbbb41f19cbf8ef4d(e, a, b);
  e.b;
  var f:int = e.a;
  var g:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h46314b06c79b45ed(f);
  var h:int = 16;
  var i:int = e + h;
  g_a = i;
  return g;
}

function T_as_core_fmt_Debug_fmt_h67b4369b583e76a2(a:int_ptr, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = a[0];
  var g:int =
    core_fmt_num_impl_core_fmt_Debug_for_usize_fmt_hd455b4d034984e1a(f, b);
  var h:int = 1;
  var i:int = g & h;
  var j:int = 16;
  var k:int = e + j;
  g_a = k;
  return i;
}

function core_ptr_non_null_NonNull_T_cast_h9b8f69a2b2fb2833(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:{ a:int, b:int, c:int, d:int } = c - d;
  g_a = e;
  e.c = a;
  e.d = b;
  core_ptr_non_null_NonNull_T_as_ptr_hbbb41f19cbf8ef4d(e, a, b);
  e.b;
  var f:int = e.a;
  var g:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h46314b06c79b45ed(f);
  var h:int = 16;
  var i:int = e + h;
  g_a = i;
  return g;
}

function T_as_core_fmt_Debug_fmt_hf62bedfa0d03776d(a:int_ptr, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = a[0];
  var g:int =
    core_fmt_num_impl_core_fmt_Debug_for_u32_fmt_h4612b93b8193d6ea(f, b);
  var h:int = 1;
  var i:int = g & h;
  var j:int = 16;
  var k:int = e + j;
  g_a = k;
  return i;
}

function core_intrinsics_write_bytes_h536da24571cf16eb(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int = d - e;
  g_a = f;
  f[1]:int = a;
  f[11]:byte = b;
  f[3]:int = c;
  var g:int = 0;
  var h:int = c << g;
  memset(a, b, h);
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function core_intrinsics_copy_nonoverlapping_h2eac84473f2f528f(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int = 0;
  var h:int = c << g;
  memcpy(b, a, h);
  var i:int = 16;
  var j:int = f + i;
  g_a = j;
}

function alloc_vec_Vec_T_A_as_core_ops_drop_Drop_drop_hbaa4bfdef38e31a2(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = alloc_vec_Vec_T_A_as_mut_ptr_h0c095d47a5690066(a);
  var f:int = a[2];
  core_ptr_slice_from_raw_parts_mut_h134b7b93007f0fe5(d, e, f);
  d[1];
  d[0];
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
}

function alloc_vec_Vec_T_A_as_core_ops_drop_Drop_drop_hbd74b7615e40da33(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = alloc_vec_Vec_T_A_as_mut_ptr_h834293a9eeb4907e(a);
  var f:int = a[2];
  core_ptr_slice_from_raw_parts_mut_h097538769b43587c(d, e, f);
  d[1];
  d[0];
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
}

function alloc_vec_Vec_T_A_as_core_ops_drop_Drop_drop_hde6cba202029c74d(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = alloc_vec_Vec_T_A_as_mut_ptr_h8b9ae80bb099b5f6(a);
  var f:int = a[2];
  core_ptr_slice_from_raw_parts_mut_hc60dce5439e070b6(d, e, f);
  d[1];
  d[0];
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
}

function mut_W_as_core_fmt_Write_write_str_hbb9d609fa6ca2265(a:int_ptr, b:int, c:int):int {
  var e:int_ptr;
  var d:int_ptr;
  d = a[0];
  if ((d + 4)[0]:int - (a = (e = d + 8)[0]) >= c) goto B_a;
  alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h4924ead02e4b7940(
    d,
    a,
    c);
  a = e[0];
  label B_a:
  memcpy(d[0] + a, b, c);
  e[0] = a + c;
  return 0;
}

function mut_W_as_core_fmt_Write_write_str_h6f6291646cf412cf(a:int_ptr, b:int, c:int):int {
  var e:int_ptr;
  var d:int_ptr;
  d = a[0];
  if ((d + 4)[0]:int - (a = (e = d + 8)[0]) >= c) goto B_a;
  alloc_raw_vec_RawVec_T_A_reserve_do_reserve_and_handle_h72b5fc9a2b077781(
    d,
    a,
    c);
  a = e[0];
  label B_a:
  memcpy(d[0] + a, b, c);
  e[0] = a + c;
  return 0;
}

function core_iter_range_impl_core_iter_iterator_Iterator_for_core_ops_range_Range_A_next_h63350c1d1fe46d98(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  core_ops_range_Range_T_as_core_iter_range_RangeIteratorImpl_spec_next_h04a97a339d488b07(
    e,
    b);
  var f:int = e[1];
  var g:int = e[0];
  a.b = f;
  a.a = g;
  var h:int = 16;
  var i:int = e + h;
  g_a = i;
}

function core_iter_range_impl_core_iter_iterator_Iterator_for_core_ops_range_Range_A_next_hab889fd73c12cadf(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  core_ops_range_Range_T_as_core_iter_range_RangeIteratorImpl_spec_next_h6d0e82e7c1fe4f02(
    e,
    b);
  var f:int = e[1];
  var g:int = e[0];
  a.b = f;
  a.a = g;
  var h:int = 16;
  var i:int = e + h;
  g_a = i;
}

function alloc_string_String_as_bytes_h53849742ea31bc9f(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  alloc_vec_Vec_T_A_as_core_ops_deref_Deref_deref_h30bd18da80b67e7c(e, b);
  var f:int = e[1];
  var g:int = e[0];
  a.b = f;
  a.a = g;
  var h:int = 16;
  var i:int = e + h;
  g_a = i;
}

function match_twenty_sign_f_h519ec698e229a18f(a:int, b:int, c:int):int {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int = a & b;
  var h:int = -1;
  var i:int = a ^ h;
  var j:int = i & c;
  var k:int = g | j;
  return k;
}

function match_twenty_sign_g_h2ae454331f5a4e9d(a:int, b:int, c:int):int {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int = a & c;
  var h:int = -1;
  var i:int = c ^ h;
  var j:int = b & i;
  var k:int = g | j;
  return k;
}

function core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_6(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  g_a = d;
  T_as_core_convert_From_T_from_h22c08f862544113c();
  var e:int = 1;
  d[2] = e;
  var f:int = d[2];
  var g:int = d[3];
  a.b = g;
  a.a = f;
  var h:int = 32;
  var i:int = d + h;
  g_a = i;
}

function core_ptr_drop_in_place_core_option_Option_js_sys_Object_hd9de9f556e0633dc(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[0];
  if (eqz(e)) goto B_a;
  var f:int = 4;
  var g:int = a + f;
  core_ptr_drop_in_place_js_sys_Object_h9a6c2effa8308ac5(g);
  label B_a:
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
}

function core_alloc_layout_size_align_h05702dd1bba9a301(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  var e:int = 4;
  d[3] = e;
  var f:int = d[3];
  var g:int = 4;
  d[0] = g;
  d[1] = f;
  var h:int = d[0];
  var i:int = d[1];
  a.b = i;
  a.a = h;
}

function core_alloc_layout_size_align_h485de565e8c03b41(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  var e:int = 1;
  d[3] = e;
  var f:int = d[3];
  var g:int = 1;
  d[0] = g;
  d[1] = f;
  var h:int = d[0];
  var i:int = d[1];
  a.b = i;
  a.a = h;
}

function core_alloc_layout_size_align_hbba6579936286681(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  var e:int = 1;
  d[3] = e;
  var f:int = d[3];
  var g:int = 1;
  d[0] = g;
  d[1] = f;
  var h:int = d[0];
  var i:int = d[1];
  a.b = i;
  a.a = h;
}

function core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_7(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  g_a = d;
  T_as_core_convert_From_T_from_hc51d8c015ee4f8e7();
  var e:int = 0;
  d[3] = e;
  var f:int = d[2];
  var g:int = d[3];
  a.b = g;
  a.a = f;
  var h:int = 32;
  var i:int = d + h;
  g_a = i;
}

function core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_8(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  g_a = d;
  T_as_core_convert_From_T_from_h883cb76823123471();
  var e:int = 0;
  d[2] = e;
  var f:int = d[2];
  var g:int = d[3];
  a.b = g;
  a.a = f;
  var h:int = 32;
  var i:int = d + h;
  g_a = i;
}

function core_ptr_drop_in_place_core_option_Option_core_cell_Cell_wasm_bindgen_externref_Slab_hd5b52ba6ae8f09(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[0];
  if (eqz(e)) goto B_a;
  var f:int = 4;
  var g:int = a + f;
  core_ptr_drop_in_place_core_cell_Cell_wasm_bindgen_externref_Slab_h548228a348fec47b(
    g);
  label B_a:
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
}

function alloc_collections_TryReserveError_kind_h92f85f9cab1081bd(a:{ a:int, b:int }, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  alloc_collections_TryReserveErrorKind_as_core_clone_Clone_clone_hb9068c3aaaa7478b(
    e,
    b);
  var f:int = e[1];
  var g:int = e[0];
  a.b = f;
  a.a = g;
  var h:int = 16;
  var i:int = e + h;
  g_a = i;
}

function core_ops_function_FnOnce_call_once_hf3475e4c772b70c7(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:{ a:int, b:int } = c - d;
  g_a = e;
  e.a = a;
  e.b = b;
  var f:int = e.a;
  var g:int = e.b;
  var h:int =
    core_cmp_impls_impl_core_cmp_Ord_for_usize_cmp_h7dc086cef8422b00(f, g);
  var i:int = 16;
  var j:int = e + i;
  g_a = j;
  return h;
}

function core_cmp_impls_impl_core_cmp_PartialOrd_for_i32_lt_h53dde44c4598c27a(a:int_ptr, b:int_ptr):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  var f:int = a[0];
  var g:int = b[0];
  var h:int = f;
  var i:int = g;
  var j:int = h < i;
  var k:int = 1;
  var l:int = j & k;
  return l;
}

function core_cmp_impls_impl_core_cmp_PartialOrd_for_usize_lt_h5a5760edc4e97d2e(a:int_ptr, b:int_ptr):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  var f:int = a[0];
  var g:int = b[0];
  var h:int = f;
  var i:int = g;
  var j:int = h < i;
  var k:int = 1;
  var l:int = j & k;
  return l;
}

function alloc_raw_vec_RawVec_T_A_shrink_closure_h0087d5c6a2850fd2(a:{ a:int, b:int }, b:{ a:int, b:int }) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  e[5] = b;
  var f:int = b.a;
  var g:int = b.b;
  e[2] = f;
  e[3] = g;
  var h:int = e[2];
  var i:int = e[3];
  a.b = i;
  a.a = h;
}

function alloc_raw_vec_RawVec_T_A_shrink_closure_h37540afccbefc556(a:{ a:int, b:int }, b:{ a:int, b:int }) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  e[5] = b;
  var f:int = b.a;
  var g:int = b.b;
  e[2] = f;
  e[3] = g;
  var h:int = e[2];
  var i:int = e[3];
  a.b = i;
  a.a = h;
}

function alloc_raw_vec_RawVec_T_A_shrink_closure_h13d3d79147e666e2(a:{ a:int, b:int }, b:{ a:int, b:int }) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  e[5] = b;
  var f:int = b.a;
  var g:int = b.b;
  e[2] = f;
  e[3] = g;
  var h:int = e[2];
  var i:int = e[3];
  a.b = i;
  a.a = h;
}

function core_ops_function_FnOnce_call_once_h56cbafbcab97a190(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:{ a:int, b:int } = c - d;
  g_a = e;
  e.a = a;
  e.b = b;
  var f:int = e.a;
  var g:int = e.b;
  var h:int =
    core_cmp_impls_impl_core_cmp_Ord_for_usize_cmp_h29acab65d858e343(f, g);
  var i:int = 16;
  var j:int = e + i;
  g_a = j;
  return h;
}

function core_ptr_ptr_impl_T_is_null_h87240b65f40d0c92(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = 0;
  var f:int = core_ptr_ptr_impl_T_guaranteed_eq_hd5cb1d2879d2ac50(a, e);
  var g:int = 1;
  var h:int = f & g;
  var i:int = 16;
  var j:int = d + i;
  g_a = j;
  return h;
}

function core_slice_index_impl_core_ops_index_Index_I_for_T_index_h77699520da4a1d4a(a:int, b:int, c:int, d:int):int {
  var e:int = g_a;
  var f:int = 16;
  var g:int_ptr = e - f;
  g_a = g;
  g[0] = a;
  g[1] = b;
  g[3] = c;
  var h:int =
    usize_as_core_slice_index_SliceIndex_T_index_h215346f25bc09eff(c, a, b, d);
  var i:int = 16;
  var j:int = g + i;
  g_a = j;
  return h;
}

function core_mem_replace_h1facca175f1c381c(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[1] = a;
  e[2] = b;
  var f:int = core_ptr_read_h427864b75c626476(a);
  e[3] = f;
  core_ptr_write_h5d07cacf7b66a33b(a, b);
  var g:int = 16;
  var h:int = e + g;
  g_a = h;
  return f;
}

function core_mem_replace_h7cd2cdcc662d43a5(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[1] = a;
  e[2] = b;
  var f:int = core_ptr_read_hbd9ff689e1aae83d(a);
  e[3] = f;
  core_ptr_write_h1962c8889f195c62(a, b);
  var g:int = 16;
  var h:int = e + g;
  g_a = h;
  return f;
}

function web_sys_features_gen_Document_wbg_generated_Document_impl_wasm_bindgen_convert_FromWasmAbi_for_web_s(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h(
      a);
  var f:int = T_as_core_convert_Into_U_into_h921a1a2c17cfa907(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function wasm_bindgen_cast_JsCast_has_type_h143621c26baeedde(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    js_sys_wbg_generated_Object_impl_core_convert_AsRef_wasm_bindgen_JsValue_for_js_sys_Object_as_ref_h5(
      a);
  var f:int = wasm_bindgen_cast_JsCast_is_type_of_h59f5948fe31f19a5(e);
  var g:int = 1;
  var h:int = f & g;
  var i:int = 16;
  var j:int = d + i;
  g_a = j;
  return h;
}

function web_sys_features_gen_HtmlElement_wbg_generated_HtmlElement_impl_wasm_bindgen_convert_FromWasmAbi_for(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2147289776db0cf5(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_Object_as_core_clone_Clone_clone_h9f14c93834e0824b(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[2] = a;
  d[3] = a;
  var e:int =
    wasm_bindgen_JsValue_as_core_clone_Clone_clone_he5b2d59a9aa316bf(a);
  d[1] = e;
  var f:int = d[1];
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function js_sys_wbg_generated_Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Array_from_abi_hcf75a4a2(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_BigInt_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_BigInt_from_abi_hc20117(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Function_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Function_from_abi_h97(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Object_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Object_from_abi_hcddb74(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h6f6e8a56792a84b9(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Set_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Set_from_abi_hef0b4a038e5b(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Int8Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Int8Array_from_abi_h(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Int16Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Int16Array_from_abi(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Int32Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Int32Array_from_abi(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Uint8Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Uint8Array_from_abi(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Uint8ClampedArray_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Uint8Clamped(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Uint16Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Uint16Array_from_a(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Uint32Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Uint32Array_from_a(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Float32Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Float32Array_from(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_Float64Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_Float64Array_from(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_BigInt64Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_BigInt64Array_fr(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function js_sys_wbg_generated_BigUint64Array_impl_wasm_bindgen_convert_FromWasmAbi_for_js_sys_BigUint64Array_(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(
      a);
  var f:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(e);
  d[2] = f;
  var g:int = d[2];
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function core_ptr_mut_ptr_impl_mut_T_is_null_ha07c92a7aa0fb7e5(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = 0;
  var f:int =
    core_ptr_mut_ptr_impl_mut_T_guaranteed_eq_h175b643141e1b631(a, e);
  var g:int = 1;
  var h:int = f & g;
  var i:int = 16;
  var j:int = d + i;
  g_a = j;
  return h;
}

function wasm_bindgen_JsValue_as_core_clone_Clone_clone_he5b2d59a9aa316bf(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[2] = a;
  var e:int = a[0];
  var f:int =
    wasm_bindgen_wbindgen_object_clone_ref_h09704c30037b1bcd(e);
  d[3] = f;
  var g:int = wasm_bindgen_JsValue_new_ha4e2edd01235f4ce(f);
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function core_ptr_ptr_impl_T_is_null_he969adfdcf5f1f09(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = 0;
  var f:int = core_ptr_ptr_impl_T_guaranteed_eq_hd5cb1d2879d2ac50(a, e);
  var g:int = 1;
  var h:int = f & g;
  var i:int = 16;
  var j:int = d + i;
  g_a = j;
  return h;
}

function core_ptr_mut_ptr_impl_mut_T_is_null_h2f6559593d20d692(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = 0;
  var f:int =
    core_ptr_mut_ptr_impl_mut_T_guaranteed_eq_h175b643141e1b631(a, e);
  var g:int = 1;
  var h:int = f & g;
  var i:int = 16;
  var j:int = d + i;
  g_a = j;
  return h;
}

function core_ptr_mut_ptr_impl_mut_T_is_null_ha3ccfaf5e122fcd9(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = 0;
  var f:int =
    core_ptr_mut_ptr_impl_mut_T_guaranteed_eq_h175b643141e1b631(a, e);
  var g:int = 1;
  var h:int = f & g;
  var i:int = 16;
  var j:int = d + i;
  g_a = j;
  return h;
}

function core_fmt_Formatter_pad_integral_write_prefix_h585c4f72e1d84c1a(a:int_ptr, b:int, c:int, d:int):int {
  var e:int;
  if (b == 1114112) goto B_c;
  e = 1;
  if (call_indirect(a[6], b, ((a + 28)[0]:int)[4]:int)) goto B_b;
  label B_c:
  if (c) goto B_a;
  e = 0;
  label B_b:
  return e;
  label B_a:
  return call_indirect(a[6], c, d, ((a + 28)[0]:int)[3]:int);
}

function core_iter_iterator_Iterator_for_each_call_closure_h850e4f4b5ee7b1d0(a:int, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[1] = a;
  e[3] = b;
  e[0] = b;
  var f:int = e[0];
  alloc_vec_Vec_T_A_as_alloc_vec_spec_extend_SpecExtend_T_I_spec_extend_closure_he5b4e9732087d5a1(
    a,
    f);
  var g:int = 16;
  var h:int = e + g;
  g_a = h;
}

function core_str_impl_str_len_h6105dbdd3a14780a(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  e[4] = a;
  e[5] = b;
  e[6] = a;
  e[7] = b;
  e[6];
  var f:int = e[7];
  return f;
}

function core_iter_iterator_Iterator_step_by_hfa611ae80be08bc6(a:int, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 16;
  var g:int_ptr = e - f;
  g_a = g;
  g[0] = b;
  g[1] = c;
  g[3] = d;
  core_iter_adapters_step_by_StepBy_I_new_hdf1932be37da85ea(a, b, c, d);
  var h:int = 16;
  var i:int = g + h;
  g_a = i;
}

function core_str_converts_from_utf8_unchecked_h64cf2c319e97434f(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.a = b;
  f.b = c;
  f.c = b;
  f.d = c;
  var g:int = f.c;
  var h:int = f.d;
  a.b = h;
  a.a = g;
}

function u32_as_core_ops_bit_Shr_i32_shr_h679fbe9fdd2f5553(a:int_ptr, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = a[0];
  var g:int = u32_as_core_ops_bit_Shr_i32_shr_he040aceb879d1e9c(f, b);
  var h:int = 16;
  var i:int = e + h;
  g_a = i;
  return g;
}

function alloc_vec_set_len_on_drop_SetLenOnDrop_new_h5555552ffcd432cd(a:{ a:int, b:int }, b:int_ptr) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[3] = b;
  var f:int = b[0];
  e[0] = b;
  e[1] = f;
  var g:int = e[0];
  var h:int = e[1];
  a.b = h;
  a.a = g;
}

function match_twenty_sign_i_h2d14fd979edfc150(a:int, b:int, c:int):int {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int = -1;
  var h:int = c ^ g;
  var i:int = a | h;
  var j:int = b ^ i;
  return j;
}

function core_ptr_unique_Unique_T_new_unchecked_h3df5d8100a766f84(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.c = b;
  f.d = c;
  f.a = b;
  f.b = c;
  var g:int = f.a;
  var h:int = f.b;
  a.b = h;
  a.a = g;
}

function core_ptr_unique_Unique_T_new_unchecked_h3e18737fe385c210(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.c = b;
  f.d = c;
  f.a = b;
  f.b = c;
  var g:int = f.a;
  var h:int = f.b;
  a.b = h;
  a.a = g;
}

function core_ptr_unique_Unique_T_new_unchecked_h46587944fcb5fd5b(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.c = b;
  f.d = c;
  f.a = b;
  f.b = c;
  var g:int = f.a;
  var h:int = f.b;
  a.b = h;
  a.a = g;
}

function core_ptr_unique_Unique_T_new_unchecked_hdaa2e2351b7cb5ae(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.c = b;
  f.d = c;
  f.a = b;
  f.b = c;
  var g:int = f.a;
  var h:int = f.b;
  a.b = h;
  a.a = g;
}

function core_ptr_unique_Unique_T_as_core_convert_From_mut_T_from_h43e9525d54de8e07(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.c = b;
  f.d = c;
  f.a = b;
  f.b = c;
  var g:int = f.a;
  var h:int = f.b;
  a.b = h;
  a.a = g;
}

function core_ptr_unique_Unique_T_as_core_convert_From_mut_T_from_hca1d3f6d6eb36b85(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.c = b;
  f.d = c;
  f.a = b;
  f.b = c;
  var g:int = f.a;
  var h:int = f.b;
  a.b = h;
  a.a = g;
}

function core_ptr_unique_Unique_T_new_unchecked_h37a24957928a7859(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.c = b;
  f.d = c;
  f.a = b;
  f.b = c;
  var g:int = f.a;
  var h:int = f.b;
  a.b = h;
  a.a = g;
}

function core_ptr_unique_Unique_T_new_unchecked_h81257fc057bde2ec(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.c = b;
  f.d = c;
  f.a = b;
  f.b = c;
  var g:int = f.a;
  var h:int = f.b;
  a.b = h;
  a.a = g;
}

function core_ptr_unique_Unique_T_as_core_convert_From_mut_T_from_h68da51a81768ce98(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.c = b;
  f.d = c;
  f.a = b;
  f.b = c;
  var g:int = f.a;
  var h:int = f.b;
  a.b = h;
  a.a = g;
}

function core_ptr_non_null_NonNull_T_new_unchecked_he38ccf3f36104f80(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.c = b;
  f.d = c;
  f.a = b;
  f.b = c;
  var g:int = f.a;
  var h:int = f.b;
  a.b = h;
  a.a = g;
}

function core_ptr_non_null_NonNull_T_as_mut_ptr_h88585fb77a23da8e(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int =
    core_ptr_non_null_NonNull_T_as_non_null_ptr_h5bb27f5687862f50(a, b);
  var g:int = core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(f);
  var h:int = 16;
  var i:int = e + h;
  g_a = i;
  return g;
}

function alloc_vec_Vec_T_from_raw_parts_h27155069f293c026(a:int, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 16;
  var g:int_ptr = e - f;
  g_a = g;
  g[1] = b;
  g[2] = c;
  g[3] = d;
  alloc_vec_Vec_T_A_from_raw_parts_in_h900e2cf510f977f6(a, b, c, d);
  var h:int = 16;
  var i:int = g + h;
  g_a = i;
}

function alloc_collections_TryReserveError_as_core_convert_From_alloc_collections_TryReserveErrorKind_from_h9(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int, c:int, d:int } = d - e;
  f.c = b;
  f.d = c;
  f.a = b;
  f.b = c;
  var g:int = f.a;
  var h:int = f.b;
  a.b = h;
  a.a = g;
}

function core_ptr_ptr_impl_T_copy_to_nonoverlapping_h5b393dfaf871a9a7(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  core_intrinsics_copy_nonoverlapping_h2eac84473f2f528f(a, b, c);
  var g:int = 16;
  var h:int = f + g;
  g_a = h;
}

function T_as_core_convert_TryFrom_U_try_from_h121a72a31af6498f(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_Into_U_into_h965c8f4bf88508e5(a);
  d[2] = e;
  var f:int = d[2];
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function alloc_string_String_as_core_ops_arith_AddAssign_str_add_assign_ha159ee33c420fba9(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  alloc_string_String_push_str_he023cb8b7aed1167(a, b, c);
  var g:int = 16;
  var h:int = f + g;
  g_a = h;
}

function core_slice_impl_T_is_empty_h553b40ca32589462(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  var f:int = 0;
  var g:int = b;
  var h:int = f;
  var i:int = g == h;
  var j:int = 1;
  var k:int = i & j;
  return k;
}

function i32_as_core_iter_range_Step_forward_unchecked_h4b08274e4b64a49a(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  e[3] = a;
  e[4] = b;
  e[5] = a;
  e[6] = b;
  var f:int = a + b;
  e[7] = f;
  var g:int = e[7];
  return g;
}

function usize_as_core_iter_range_Step_forward_unchecked_h7025af2f31cc6430(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  e[3] = a;
  e[4] = b;
  e[5] = a;
  e[6] = b;
  var f:int = a + b;
  e[7] = f;
  var g:int = e[7];
  return g;
}

function alloc_vec_Vec_T_A_as_ptr_h0224805ece1b0b7e(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[2] = a;
  var e:int = alloc_raw_vec_RawVec_T_A_ptr_h4587201f7d5778b0(a);
  d[3] = e;
  core_ptr_mut_ptr_impl_mut_T_is_null_ha07c92a7aa0fb7e5(e);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function alloc_vec_Vec_T_A_reserve_h1ffabcef4aa6a4e4(a:int_ptr, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = a[2];
  alloc_raw_vec_RawVec_T_A_reserve_h31297051cea57edf(a, f, b);
  var g:int = 16;
  var h:int = e + g;
  g_a = h;
}

function wasm_bindgen_cast_JsCast_is_type_of_h59f5948fe31f19a5(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    web_sys_features_gen_Window_wbg_generated_Window_impl_wasm_bindgen_cast_JsCast_for_web_sys_features__1(
      a);
  var f:int = 1;
  var g:int = e & f;
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function web_sys_features_gen_Window_wbg_generated_Window_impl_wasm_bindgen_cast_JsCast_for_web_sys_features__2(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_Into_U_into_h3c50c45aa9ea1778(a);
  d[2] = e;
  var f:int = d[2];
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function web_sys_features_gen_Document_wbg_generated_Document_impl_wasm_bindgen_convert_OptionFromWasmAbi_for(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[0];
  var f:int = 0;
  var g:int = e;
  var h:int = f;
  var i:int = g == h;
  var j:int = 1;
  var k:int = i & j;
  return k;
}

function web_sys_features_gen_Element_wbg_generated_Element_impl_core_convert_From_wasm_bindgen_JsValue_for_w(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_Into_U_into_h921a1a2c17cfa907(a);
  d[2] = e;
  var f:int = d[2];
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function web_sys_features_gen_HtmlElement_wbg_generated_HtmlElement_impl_wasm_bindgen_convert_OptionFromWasmA(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[0];
  var f:int = 0;
  var g:int = e;
  var h:int = f;
  var i:int = g == h;
  var j:int = 1;
  var k:int = i & j;
  return k;
}

function web_sys_features_gen_Node_wbg_generated_Node_impl_core_convert_From_wasm_bindgen_JsValue_for_web_sys(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_Into_U_into_h3c50c45aa9ea1778(a);
  d[2] = e;
  var f:int = d[2];
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function web_sys_features_gen_EventTarget_wbg_generated_EventTarget_impl_core_convert_From_wasm_bindgen_JsVal(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_Into_U_into_h2aae4ab08a62b872(a);
  d[2] = e;
  var f:int = d[2];
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function js_sys_wbg_generated_Object_impl_core_convert_From_wasm_bindgen_JsValue_for_js_sys_Object_from_he5b4(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_Into_U_into_h6f6e8a56792a84b9(a);
  d[2] = e;
  var f:int = d[2];
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function js_sys_wbg_generated_Object_impl_wasm_bindgen_cast_JsCast_for_js_sys_Object_unchecked_from_js_hc3efc(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_Into_U_into_h6f6e8a56792a84b9(a);
  d[2] = e;
  var f:int = d[2];
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function alloc_vec_Vec_T_A_as_mut_ptr_h0c095d47a5690066(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[2] = a;
  var e:int = alloc_raw_vec_RawVec_T_A_ptr_h4587201f7d5778b0(a);
  d[3] = e;
  core_ptr_mut_ptr_impl_mut_T_is_null_ha07c92a7aa0fb7e5(e);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function alloc_vec_Vec_T_A_reserve_h4366fa0b9e11541f(a:int_ptr, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = a[2];
  alloc_raw_vec_RawVec_T_A_reserve_h71f69e40853a8b2a(a, f, b);
  var g:int = 16;
  var h:int = e + g;
  g_a = h;
}

function alloc_vec_Vec_T_A_as_mut_ptr_h834293a9eeb4907e(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[2] = a;
  var e:int = alloc_raw_vec_RawVec_T_A_ptr_hdcb939d847f89486(a);
  d[3] = e;
  core_ptr_mut_ptr_impl_mut_T_is_null_h2f6559593d20d692(e);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function alloc_vec_Vec_T_A_as_mut_ptr_h8b9ae80bb099b5f6(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[2] = a;
  var e:int = alloc_raw_vec_RawVec_T_A_ptr_h39ebde27f36d2106(a);
  d[3] = e;
  core_ptr_mut_ptr_impl_mut_T_is_null_ha3ccfaf5e122fcd9(e);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function alloc_vec_Vec_T_A_as_ptr_hc4f1d648b83a73a7(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[2] = a;
  var e:int = alloc_raw_vec_RawVec_T_A_ptr_hdcb939d847f89486(a);
  d[3] = e;
  core_ptr_mut_ptr_impl_mut_T_is_null_h2f6559593d20d692(e);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function core_iter_adapters_map_map_fold_hc7d9d4e437ebfe94(a:long_ptr@4, b:long_ptr@4) {
  var c:int = g_a;
  var d:int = 16;
  c - d;
  var i:long = b[0];
  a[0] = i;
  var e:int = 8;
  var f:int_ptr = a + e;
  var g:int_ptr = b + e;
  var h:int = g[0];
  f[0] = h;
}

function core_ptr_drop_in_place_alloc_boxed_Box_str_hf407902d7cc55a89(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a.a;
  var f:int = a.b;
  alloc_alloc_box_free_hb5496ca0259f563f(e, f);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
}

function core_ptr_unique_Unique_T_dangling_h0b866e52cec4e290():int {
  var a:int = g_a;
  var b:int = 16;
  var c:int_ptr = a - b;
  g_a = c;
  var d:int = 1;
  c[3] = d;
  var e:int = c[3];
  var f:int =
    core_ptr_unique_Unique_T_new_unchecked_hf80bbb969ed74f34(e);
  var g:int = 16;
  var h:int = c + g;
  g_a = h;
  return f;
}

function core_ptr_unique_Unique_T_dangling_h3f725656b3ab0a84():int {
  var a:int = g_a;
  var b:int = 16;
  var c:int_ptr = a - b;
  g_a = c;
  var d:int = 4;
  c[3] = d;
  var e:int = c[3];
  var f:int =
    core_ptr_unique_Unique_T_new_unchecked_h8016cd05df31846a(e);
  var g:int = 16;
  var h:int = c + g;
  g_a = h;
  return f;
}

function core_panicking_panic_hceae0c79b0247f98(a:int, b:int, c:int) {
  var d:int = g_a - 32;
  g_a = d;
  (d + 20)[0]:int = 0;
  d[4]:int = 1054040;
  d[1]:long@4 = 1L;
  d[7]:int = b;
  d[6]:int = a;
  d[0]:int = d + 24;
  core_panicking_panic_fmt_hf69c8b08bc9d2ee5(d, c);
  unreachable;
}

function core_ptr_ptr_impl_T_len_h30df55a99447e371(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = core_ptr_metadata_metadata_he385fc93bb16abd7(a, b);
  var g:int = 16;
  var h:int = e + g;
  g_a = h;
  return f;
}

function core_cmp_Ord_min_hd1855d7edabb242e(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = core_cmp_min_by_h699129abab0367e8(a, b);
  var g:int = 16;
  var h:int = e + g;
  g_a = h;
  return f;
}

function core_cmp_min_h3985419e1eacf37e(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = core_cmp_Ord_min_hd1855d7edabb242e(a, b);
  var g:int = 16;
  var h:int = e + g;
  g_a = h;
  return f;
}

function core_ptr_drop_in_place_alloc_vec_Vec_u32_as_alloc_vec_spec_extend_SpecExtend_u32_core_iter_adapters_(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = 4;
  var f:int = a + e;
  core_ptr_drop_in_place_alloc_vec_set_len_on_drop_SetLenOnDrop_h1fd4b4a3c459cce1(
    f);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
}

function T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_hdc7405c6ec1f4734(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:byte_ptr = b - c;
  g_a = d;
  var e:int = a;
  d[15] = e;
  var f:int = a;
  var g:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_bool_into_abi_hb2e4e4e88d95202f(
      f);
  var h:int = 16;
  var i:int = d + h;
  g_a = i;
  return g;
}

function core_cmp_Ord_max_hdb86c62ad95eff16(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = core_cmp_max_by_hb8d87a6c10feca0d(a, b);
  var g:int = 16;
  var h:int = e + g;
  g_a = h;
  return f;
}

function core_cmp_max_h8ff0ff1744752a9e(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = core_cmp_Ord_max_hdb86c62ad95eff16(a, b);
  var g:int = 16;
  var h:int = e + g;
  g_a = h;
  return f;
}

function core_ptr_unique_Unique_T_cast_h57f179783635b6e0(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = core_ptr_unique_Unique_T_as_ptr_h15959b5cc7c331d6(a);
  var f:int =
    core_ptr_unique_Unique_T_new_unchecked_hf80bbb969ed74f34(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function alloc_slice_hack_to_vec_h0ba80d8eecc75428(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int } = d - e;
  g_a = f;
  f.a = b;
  f.b = c;
  T_as_alloc_slice_hack_ConvertVec_to_vec_h8698ab487c2a8751(a, b, c);
  var g:int = 16;
  var h:int = f + g;
  g_a = h;
}

function alloc_string_String_as_core_convert_From_str_from_h725f6be6839eccbf(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[2] = b;
  f[3] = c;
  alloc_str_impl_alloc_borrow_ToOwned_for_str_to_owned_ha0f88bb1eb1fd6e7(
    a,
    b,
    c);
  var g:int = 16;
  var h:int = f + g;
  g_a = h;
}

function core_ptr_write_h5d07cacf7b66a33b(a:int_ptr, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = b;
  e[3] = a;
  var f:int = 8;
  var g:int = e + f;
  var h:int_ptr = g;
  var i:int = h[0];
  a[0] = i;
}

function core_alloc_layout_Layout_align_h1fe3f5e869a780ef(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[1];
  var f:int = core_num_nonzero_NonZeroUsize_get_hc2e182ebb4976273(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function alloc_slice_impl_T_to_vec_h12a81d3033a4d2e2(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[2] = b;
  f[3] = c;
  alloc_slice_impl_T_to_vec_in_hc96b5116226556e1(a, b, c);
  var g:int = 16;
  var h:int = f + g;
  g_a = h;
}

function alloc_slice_impl_T_to_vec_in_hc96b5116226556e1(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:{ a:int, b:int } = d - e;
  g_a = f;
  f.a = b;
  f.b = c;
  alloc_slice_hack_to_vec_h0ba80d8eecc75428(a, b, c);
  var g:int = 16;
  var h:int = f + g;
  g_a = h;
}

function alloc_slice_impl_alloc_borrow_ToOwned_for_T_to_owned_h42ffe34c41d6a148(a:int, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  g_a = f;
  f[2] = b;
  f[3] = c;
  alloc_slice_impl_T_to_vec_h12a81d3033a4d2e2(a, b, c);
  var g:int = 16;
  var h:int = f + g;
  g_a = h;
}

function wasm_bindgen_cast_JsCast_unchecked_into_hb0b57f3af1496fc9(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_Into_U_into_h77ed91fa0b86856f(a);
  var f:int =
    web_sys_features_gen_Window_wbg_generated_Window_impl_wasm_bindgen_cast_JsCast_for_web_sys_features__2(
      e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function alloc_raw_vec_RawVec_T_A_ptr_h39df9be9b3c19184(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[0];
  var f:int = core_ptr_unique_Unique_T_as_ptr_h279aa515912a26f5(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function alloc_raw_vec_RawVec_T_A_ptr_h4587201f7d5778b0(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[0];
  var f:int = core_ptr_unique_Unique_T_as_ptr_h15959b5cc7c331d6(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function wasm_bindgen_cast_JsCast_unchecked_into_hc9f53ee90f80bb77(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_Into_U_into_h6f6e8a56792a84b9(a);
  var f:int =
    js_sys_wbg_generated_Object_impl_wasm_bindgen_cast_JsCast_for_js_sys_Object_unchecked_from_js_hc3efc(
      e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[1];
  var f:int = core_num_nonzero_NonZeroUsize_get_h08c04c7716d30de1(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function core_alloc_layout_Layout_dangling_h0c39cb062893327b(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = core_alloc_layout_Layout_align_h7c8c60a54cd2ac64(a);
  var f:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h46314b06c79b45ed(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function thread_local_lazy_LazyKeyInner_T_get_h37d812a295a56be1(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[2] = a;
  d[3] = a;
  var e:int = core_option_Option_T_as_ref_hb0e95d745ad335d7(a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function core_ptr_write_h08075b59e270f878(a:int_ptr, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = b;
  e[3] = a;
  var f:int = 8;
  var g:int = e + f;
  var h:int_ptr = g;
  var i:int = h[0];
  a[0] = i;
}

function core_ptr_unique_Unique_T_cast_h6bd557bfabb55f05(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = core_ptr_unique_Unique_T_as_ptr_h279aa515912a26f5(a);
  var f:int =
    core_ptr_unique_Unique_T_new_unchecked_hf80bbb969ed74f34(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function core_alloc_layout_Layout_align_he66d4e1016473d9e(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[1];
  var f:int = core_num_nonzero_NonZeroUsize_get_h5482394b308412f2(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function core_alloc_layout_Layout_dangling_hb70d900652111132(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = core_alloc_layout_Layout_align_he66d4e1016473d9e(a);
  var f:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h46314b06c79b45ed(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function alloc_raw_vec_RawVec_T_A_ptr_h39ebde27f36d2106(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[0];
  var f:int = core_ptr_unique_Unique_T_as_ptr_h751806a75e01b8a3(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function alloc_raw_vec_RawVec_T_A_ptr_hdcb939d847f89486(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[0];
  var f:int = core_ptr_unique_Unique_T_as_ptr_h83825263fb3fc0e3(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function core_ptr_write_h1962c8889f195c62(a:int_ptr, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = b;
  e[3] = a;
  var f:int = 8;
  var g:int = e + f;
  var h:int_ptr = g;
  var i:int = h[0];
  a[0] = i;
}

function core_ptr_non_null_NonNull_T_as_core_convert_From_core_ptr_unique_Unique_T_from_h83ab9cfb61f776e1(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = core_ptr_unique_Unique_T_as_ptr_h83825263fb3fc0e3(a);
  var f:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h46314b06c79b45ed(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function core_alloc_layout_Layout_align_hbe5a9f7fb8662166(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = a[1];
  var f:int = core_num_nonzero_NonZeroUsize_get_h473add2284083e03(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function core_alloc_layout_Layout_dangling_h2d7a900c7916fa84(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = core_alloc_layout_Layout_align_hbe5a9f7fb8662166(a);
  var f:int =
    core_ptr_non_null_NonNull_T_new_unchecked_h46314b06c79b45ed(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function core_ptr_unique_Unique_T_cast_hd168d1149267c9a5(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = core_ptr_unique_Unique_T_as_ptr_h751806a75e01b8a3(a);
  var f:int =
    core_ptr_unique_Unique_T_new_unchecked_hf80bbb969ed74f34(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function core_ptr_unique_Unique_T_cast_hffa40adb81a19d6c(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = core_ptr_unique_Unique_T_as_ptr_h83825263fb3fc0e3(a);
  var f:int =
    core_ptr_unique_Unique_T_new_unchecked_hf80bbb969ed74f34(e);
  var g:int = 16;
  var h:int = d + g;
  g_a = h;
  return f;
}

function thread_local_lazy_LazyKeyInner_T_get_hf92aaf23b4265214(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[2] = a;
  d[3] = a;
  var e:int = core_option_Option_T_as_ref_h7c6c5e8f3250821a(a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_wasm_bindgen_JsValue_into_abi_h(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[2] = a;
  d[3] = a;
  core_mem_forget_he0335f69a1153ffe(a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
  return a;
}

function wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(a:int, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[2] = a;
  e[3] = b;
  var f:int = core_str_impl_str_as_ptr_hfbf2b408cfdbb1cb(a, b);
  var g:int = core_str_impl_str_len_h6105dbdd3a14780a(a, b);
  wasm_bindgen_wbindgen_throw_ha4b1f9432cf5af56(f, g);
  unreachable;
}

function panicking_begin_panic_handler_StrPanicPayload_as_core_panic_BoxMeUp_take_box_h8c5dc867f0a69941(a:{ a:int, b:int }, b:{ a:int, b:int }) {
  var c:int = b.b;
  var d:int = b.a;
  b = rust_alloc(8, 4);
  if (b) goto B_a;
  alloc_alloc_handle_alloc_error_h45a714900d29bef5(8, 4);
  unreachable;
  label B_a:
  b.b = c;
  b.a = d;
  a.b = 1053828;
  a.a = b;
}

function core_slice_iter_Chunks_T_new_h8221750e2cc614b4(a:{ a:int, b:int, c:int }, b:int, c:int, d:int) {
  var e:int = g_a;
  var f:int = 16;
  var g:int_ptr = e - f;
  g[0] = b;
  g[1] = c;
  g[3] = d;
  a.a = b;
  a.b = c;
  a.c = d;
}

function match_twenty_sign_h_h1eb034bf1284c53a(a:int, b:int, c:int):int {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[1] = a;
  f[2] = b;
  f[3] = c;
  var g:int = a ^ b;
  var h:int = g ^ c;
  return h;
}

function core_mem_forget_h5d8fc464b1e2226b(a:int, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  e[6] = a;
  e[7] = b;
  e[4] = a;
  e[5] = b;
}

function core_mem_forget_h3f35919f69b7da73(a:int, b:int) {
  var c:int = g_a;
  var d:int = 32;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  e[6] = a;
  e[7] = b;
  e[4] = a;
  e[5] = b;
}

function dlmalloc_sys_System_as_dlmalloc_Allocator_alloc_heece4aba06c14827(a:{ a:int, b:int, c:int }, b:int, c:int) {
  var d:int = memory_grow(c >> 16);
  a.c = 0;
  a.b = select_if(0, c & -65536, c = d == -1);
  a.a = select_if(0, d << 16, c);
}

function T_as_core_convert_Into_U_into_h965c8f4bf88508e5(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_From_T_from_he898397db8810dbc(a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function core_ptr_drop_in_place_alloc_vec_Vec_u32_h6eb01096de591f4f(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  alloc_vec_Vec_T_A_as_core_ops_drop_Drop_drop_hbaa4bfdef38e31a2(a);
  core_ptr_drop_in_place_alloc_raw_vec_RawVec_u32_h4978657e93f36c7d(a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function web_sys_features_gen_Window_wbg_generated_Window_impl_wasm_bindgen_convert_IntoWasmAbi_for_web_sys_f(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    web_sys_features_gen_EventTarget_wbg_generated_EventTarget_impl_wasm_bindgen_convert_IntoWasmAbi_for(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function web_sys_features_gen_Document_wbg_generated_Document_impl_wasm_bindgen_convert_IntoWasmAbi_for_web_s(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    web_sys_features_gen_Node_wbg_generated_Node_impl_wasm_bindgen_convert_IntoWasmAbi_for_web_sys_featu(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function T_as_core_convert_Into_U_into_h77ed91fa0b86856f(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    js_sys_wbg_generated_Object_impl_core_convert_From_js_sys_Object_for_wasm_bindgen_JsValue_from_heaa2(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function js_sys_wbg_generated_Object_impl_core_convert_AsRef_wasm_bindgen_JsValue_for_js_sys_Object_as_ref_h5(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_JsValue_as_core_convert_AsRef_wasm_bindgen_JsValue_as_ref_h26704884eecf8b4d(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function js_sys_wbg_generated_Object_impl_wasm_bindgen_convert_IntoWasmAbi_for_js_sys_Object_into_abi_h25316b(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_wasm_bindgen_JsValue_into_abi_h_1(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = wasm_bindgen_JsValue_new_h65cd858f3c56d24a(a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function T_as_core_convert_Into_U_into_h2147289776db0cf5(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    web_sys_features_gen_Element_wbg_generated_Element_impl_core_convert_From_wasm_bindgen_JsValue_for_w(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function T_as_core_convert_Into_U_into_h3c50c45aa9ea1778(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    web_sys_features_gen_EventTarget_wbg_generated_EventTarget_impl_core_convert_From_wasm_bindgen_JsVal(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function T_as_core_convert_Into_U_into_h921a1a2c17cfa907(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    web_sys_features_gen_Node_wbg_generated_Node_impl_core_convert_From_wasm_bindgen_JsValue_for_web_sys(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function js_sys_wbg_generated_Object_impl_core_convert_From_js_sys_Object_for_wasm_bindgen_JsValue_from_heaa2(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_Into_U_into_h6f6e8a56792a84b9(a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function web_sys_features_gen_Node_wbg_generated_Node_impl_wasm_bindgen_convert_IntoWasmAbi_for_web_sys_featu(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    web_sys_features_gen_EventTarget_wbg_generated_EventTarget_impl_wasm_bindgen_convert_IntoWasmAbi_for(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function web_sys_features_gen_EventTarget_wbg_generated_EventTarget_impl_wasm_bindgen_convert_IntoWasmAbi_for(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    js_sys_wbg_generated_Object_impl_wasm_bindgen_convert_IntoWasmAbi_for_js_sys_Object_into_abi_h25316b(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function js_sys_global_closure_hae6b7408340f12a5(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    js_sys_Object_as_core_clone_Clone_clone_h9f14c93834e0824b(a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function js_sys_wbg_generated_Object_impl_wasm_bindgen_convert_IntoWasmAbi_for_js_sys_Object_into_abi_hf2eb3e(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_wasm_bindgen_JsValue_into_abi_h_2(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function js_sys_wbg_generated_Function_impl_wasm_bindgen_convert_IntoWasmAbi_for_js_sys_Function_into_abi_h68(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    js_sys_wbg_generated_Object_impl_wasm_bindgen_convert_IntoWasmAbi_for_js_sys_Object_into_abi_hf2eb3e(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function T_as_core_convert_Into_U_into_h6f6e8a56792a84b9(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = T_as_core_convert_From_T_from_h42518409f8b75c09(a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_wasm_bindgen_JsValue_from_abi_h_1(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = wasm_bindgen_JsValue_new_ha4e2edd01235f4ce(a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function core_ops_function_FnOnce_call_once_h8b3c362ffa59abf7(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int = call_indirect(a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function T_as_core_convert_Into_U_into_h2aae4ab08a62b872(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    js_sys_wbg_generated_Object_impl_core_convert_From_wasm_bindgen_JsValue_for_js_sys_Object_from_he5b4(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_hf35f06d0d8e0b24d(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_wasm_bindgen_JsValue_into_abi_h(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function core_ptr_write_h7aada906f313145e(a:long_ptr@4, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[0] = b;
  f[1] = c;
  f[3] = a;
  var g:long_ptr@4 = f;
  var h:long = g[0];
  a[0] = h;
}

function alloc_raw_vec_finish_grow_closure_h671276c1adc80539(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 32;
  var d:int_ptr = b - c;
  var e:int = 0;
  d[3] = e;
  var f:int = d[2];
  var g:int = d[3];
  a.b = g;
  a.a = f;
}

function core_ptr_drop_in_place_alloc_vec_Vec_u8_h5517fb22505fcaa0(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  alloc_vec_Vec_T_A_as_core_ops_drop_Drop_drop_hbd74b7615e40da33(a);
  core_ptr_drop_in_place_alloc_raw_vec_RawVec_u8_hebb58bbfadc0cf26(a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_alloc_vec_Vec_usize_h850a34b8d866581b(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  alloc_vec_Vec_T_A_as_core_ops_drop_Drop_drop_hde6cba202029c74d(a);
  core_ptr_drop_in_place_alloc_raw_vec_RawVec_usize_h3258e4f344a70cb2(a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function T_as_core_convert_Into_U_into_he220193fffbba529(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  var e:int =
    core_ptr_non_null_NonNull_T_as_core_convert_From_core_ptr_unique_Unique_T_from_h83ab9cfb61f776e1(
      a);
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
  return e;
}

function rust_begin_unwind(a:int) {
  var b:{ a:int, b:int, c:int } = g_a - 16;
  g_a = b;
  var c:int =
    core_option_Option_T_unwrap_hccc5d45ca79a283d(
      core_panic_panic_info_PanicInfo_location_h6f567dfbe8cd82af(a),
      1053740);
  var d:int =
    core_option_Option_T_unwrap_h25bb243e5fdcf654(
      core_panic_panic_info_PanicInfo_message_h36702d3d004a6dee(a));
  b.c = c;
  b.b = a;
  b.a = d;
  sys_common_backtrace_rust_end_backtrace_h438eceaf49d629cd(b);
  unreachable;
}

function core_iter_adapters_map_Map_I_F_as_core_iter_iterator_Iterator_size_hint_he13cf4396e83598a(a:int, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  core_slice_iter_Chunks_T_as_core_iter_iterator_Iterator_size_hint_h1dc0c157e66c4294(
    a,
    b);
  var f:int = 16;
  var g:int = e + f;
  g_a = g;
}

function alloc_vec_set_len_on_drop_SetLenOnDrop_increment_len_hba888394be5b97ec(a:int_ptr, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  var f:int = a[1];
  var g:int = f + b;
  a[1] = g;
}

function alloc_vec_Vec_T_with_capacity_h271d8026689becdc(a:int, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  alloc_vec_Vec_T_A_with_capacity_in_h48c9e8d584456e9b(a, b);
  var f:int = 16;
  var g:int = e + f;
  g_a = g;
}

function alloc_vec_Vec_T_A_capacity_h91154bb255f99de1(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[1] = a;
  d[3] = a;
  var e:int = a[1];
  d[2] = e;
  var f:int = d[2];
  return f;
}

function alloc_vec_Vec_T_A_capacity_h04b6b4cdc47ac4f3(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[1] = a;
  d[3] = a;
  var e:int = a[1];
  d[2] = e;
  var f:int = d[2];
  return f;
}

function alloc_vec_Vec_T_A_capacity_ha40c9d7a2757b888(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[1] = a;
  d[3] = a;
  var e:int = a[1];
  d[2] = e;
  var f:int = d[2];
  return f;
}

function core_result_Result_T_F_as_core_ops_try_trait_FromResidual_core_result_Result_core_convert_Infallible_9(a:int_ptr) {
  var b:int = g_a;
  var c:int = 16;
  var d:int = b - c;
  g_a = d;
  T_as_core_convert_From_T_from_hc51d8c015ee4f8e7();
  var e:int = 0;
  a[1] = e;
  var f:int = 16;
  var g:int = d + f;
  g_a = g;
}

function core_ptr_metadata_metadata_he385fc93bb16abd7(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:{ a:int, b:int, c:int, d:int } = c - d;
  e.c = a;
  e.d = b;
  e.a = a;
  e.b = b;
  var f:int = e.b;
  return f;
}

function core_ops_function_FnOnce_call_once_h0e7a95c230e9d8fa(a:int, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  g_a = e;
  e[3] = b;
  call_indirect(a, b);
  var f:int = 16;
  var g:int = e + f;
  g_a = g;
}

function core_ptr_drop_in_place_alloc_vec_set_len_on_drop_SetLenOnDrop_h1fd4b4a3c459cce1(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  alloc_vec_set_len_on_drop_SetLenOnDrop_as_core_ops_drop_Drop_drop_h7bc08c9e0e071b48(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_core_iter_iterator_Iterator_for_each_call_u32_alloc_vec_Vec_u32_as_alloc_vec_(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_alloc_vec_Vec_u32_as_alloc_vec_spec_extend_SpecExtend_u32_core_iter_adapters_(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_alloc_raw_vec_RawVec_u32_h4978657e93f36c7d(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  alloc_raw_vec_RawVec_T_A_as_core_ops_drop_Drop_drop_h08bd0948dc049d87(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_web_sys_features_gen_Node_Node_h833bee661da34fb3(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_web_sys_features_gen_EventTarget_EventTarget_h856c791c070fabc8(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_core_iter_adapters_map_map_fold_u8_u32_match_twenty_sign_MD5_hash_closure_cor(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_core_iter_iterator_Iterator_for_each_call_u32_alloc_vec_Vec_u32_as_alloc_vec_(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_web_sys_features_gen_Element_Element_h60ec555a700b61e9(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_web_sys_features_gen_Node_Node_h833bee661da34fb3(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_web_sys_features_gen_Document_Document_h3ddc74debdae6464(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_web_sys_features_gen_Node_Node_h833bee661da34fb3(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_web_sys_features_gen_HtmlElement_HtmlElement_h4e521b86e3b41168(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_web_sys_features_gen_Element_Element_h60ec555a700b61e9(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_web_sys_features_gen_Window_Window_hbb32e061b5062bd7(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_web_sys_features_gen_EventTarget_EventTarget_h856c791c070fabc8(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_web_sys_features_gen_EventTarget_EventTarget_h856c791c070fabc8(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_js_sys_Object_h9a6c2effa8308ac5(a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_js_sys_Object_h9a6c2effa8308ac5(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_wasm_bindgen_JsValue_ha52073a19a60eadc(a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_wasm_bindgen_JsValue_ha52073a19a60eadc(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  wasm_bindgen_JsValue_as_core_ops_drop_Drop_drop_h5b123f0322e5e8c0(a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_js_sys_Function_h2f6e8fcb028e8385(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_js_sys_Object_h9a6c2effa8308ac5(a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_wasm_bindgen_convert_slices_impl_wasm_bindgen_convert_IntoWasmAbi_for_alloc_s(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_alloc_string_String_h1a752c630726971c(a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_core_cell_Cell_wasm_bindgen_externref_Slab_h548228a348fec47b(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_core_cell_UnsafeCell_wasm_bindgen_externref_Slab_hc82171dcd88aa161(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_alloc_string_String_h1a752c630726971c(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_alloc_vec_Vec_u8_h5517fb22505fcaa0(a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_alloc_raw_vec_RawVec_u8_hebb58bbfadc0cf26(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  alloc_raw_vec_RawVec_T_A_as_core_ops_drop_Drop_drop_hf91247a05ef55aa9(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_alloc_raw_vec_RawVec_usize_h3258e4f344a70cb2(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  alloc_raw_vec_RawVec_T_A_as_core_ops_drop_Drop_drop_h30df1befe90a4939(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_wasm_bindgen_externref_Slab_h25fea19db21bd964(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_alloc_vec_Vec_usize_h850a34b8d866581b(a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_ptr_drop_in_place_core_cell_UnsafeCell_wasm_bindgen_externref_Slab_hc82171dcd88aa161(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  g_a = d;
  d[3] = a;
  core_ptr_drop_in_place_wasm_bindgen_externref_Slab_h25fea19db21bd964(
    a);
  var e:int = 16;
  var f:int = d + e;
  g_a = f;
}

function core_alloc_layout_Layout_as_core_clone_Clone_clone_h14e59157dfd23f47(a:{ a:int, b:int }, b:{ a:int, b:int }) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[3] = b;
  var f:int = b.a;
  var g:int = b.b;
  a.b = g;
  a.a = f;
}

function I_as_core_iter_collect_IntoIterator_into_iter_ha4933ed307ada64b(a:long_ptr@4, b:long_ptr@4) {
  var g:long = b[0];
  a[0] = g;
  var c:int = 8;
  var d:int_ptr = a + c;
  var e:int_ptr = b + c;
  var f:int = e[0];
  d[0] = f;
}

function core_iter_iterator_Iterator_for_each_call_hec25c4097f400d07(a:long_ptr@4, b:long_ptr@4) {
  var g:long = b[0];
  a[0] = g;
  var c:int = 8;
  var d:int_ptr = a + c;
  var e:int_ptr = b + c;
  var f:int = e[0];
  d[0] = f;
}

function I_as_core_iter_collect_IntoIterator_into_iter_hbf288caaed930b74(a:long_ptr@4, b:long_ptr@4) {
  var g:long = b[0];
  a[0] = g;
  var c:int = 8;
  var d:int_ptr = a + c;
  var e:int_ptr = b + c;
  var f:int = e[0];
  d[0] = f;
}

function I_as_core_iter_collect_IntoIterator_into_iter_h1bc5167ff51c5e3e(a:long_ptr@4, b:long_ptr@4) {
  var f:long = b[0];
  a[0] = f;
  var c:int = 8;
  var d:long_ptr@4 = a + c;
  var e:long_ptr@4 = b + c;
  var g:long = e[0];
  d[0] = g;
}

function alloc_string_String_into_bytes_h5512df41c4ae71bf(a:long_ptr@4, b:long_ptr@4) {
  var g:long = b[0];
  a[0] = g;
  var c:int = 8;
  var d:int_ptr = a + c;
  var e:int_ptr = b + c;
  var f:int = e[0];
  d[0] = f;
}

function alloc_vec_Vec_T_new_h837b2651f076230b(a:{ a:int, b:int, c:int }) {
  var b:int_ptr = 0;
  var c:int = b[263112];
  var d:int_ptr = 0;
  var e:int = d[263113];
  a.a = c;
  a.b = e;
  var f:int = 0;
  a.c = f;
}

function alloc_vec_Vec_T_new_h686143bde653a80c(a:{ a:int, b:int, c:int }) {
  var b:int_ptr = 0;
  var c:int = b[263341];
  var d:int_ptr = 0;
  var e:int = d[263342];
  a.a = c;
  a.b = e;
  var f:int = 0;
  a.c = f;
}

function rdl_alloc_zeroed(a:int, b:int):int {
  b = dlmalloc_Dlmalloc_A_malloc_hbd2b2a561e0ef670(a, b);
  if (eqz(b)) goto B_a;
  if (
    eqz(
      dlmalloc_sys_System_as_dlmalloc_Allocator_allocates_zeros_hcf202111fcba408d(
        1054692))) goto B_b;
  if (
    dlmalloc_dlmalloc_Chunk_mmapped_h433d048e993b396e(
      dlmalloc_dlmalloc_Chunk_from_mem_hee6c19b2ff028b5c(b))) goto B_a;
  label B_b:
  memset(b, 0, a);
  label B_a:
  return b;
}

function I_as_core_iter_collect_IntoIterator_into_iter_h6d304cdaeb34afb9(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[2] = b;
  f[3] = c;
  a.b = c;
  a.a = b;
}

function core_ptr_unique_Unique_T_as_ptr_hc15a2faae3b056a4(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[2] = b;
  f[3] = c;
  a.b = c;
  a.a = b;
}

function alloc_vec_set_len_on_drop_SetLenOnDrop_as_core_ops_drop_Drop_drop_h7bc08c9e0e071b48(a:{ a:int, b:int }) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a.b;
  var f:int_ptr = a.a;
  f[0] = e;
}

function core_ptr_unique_Unique_T_as_ptr_h2e81056810c4504b(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[2] = b;
  f[3] = c;
  a.b = c;
  a.a = b;
}

function core_ptr_unique_Unique_T_as_ptr_h89ceb27563bff787(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[2] = b;
  f[3] = c;
  a.b = c;
  a.a = b;
}

function core_ptr_write_h4aa3ce7c0b5fbce7(a:byte_ptr, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int = c - d;
  e[11]:byte = b;
  e[3]:int = a;
  var f:int = e[11]:ubyte;
  a[0] = f;
}

function core_ptr_unique_Unique_T_as_ptr_h5ea11eb5b31f8006(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[2] = b;
  f[3] = c;
  a.b = c;
  a.a = b;
}

function core_ptr_non_null_NonNull_T_as_ptr_hbbb41f19cbf8ef4d(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[2] = b;
  f[3] = c;
  a.b = c;
  a.a = b;
}

function T_as_core_convert_From_T_from_h32498c635a891114(a:{ a:int, b:int }, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[2] = b;
  f[3] = c;
  a.b = c;
  a.a = b;
}

function thread_local_AccessError_as_core_fmt_Debug_fmt_h20d0229a496a7360(a:int, b:int):int {
  var c:long_ptr = g_a - 16;
  g_a = c;
  c[1] =
    core_fmt_Formatter_debug_struct_he73ff4cf83f55f54(b, 1053700, 11);
  b = core_fmt_builders_DebugStruct_finish_hf25481809ffbda7d(c + 8);
  g_a = c + 16;
  return b;
}

function dlmalloc_dlmalloc_Chunk_set_inuse_ha2f9cf9ea44c655d(a:{ a:int, b:int }, b:int) {
  a.b = ((a.b & 1) | b) | 2;
  a = b + a + 4;
  a.a = a.a | 1;
}

function wasm_bindgen_convert_slices_unsafe_get_cached_str_h35e2405641bc6775(a:int_ptr, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[2] = b;
  f[3] = c;
  var g:int = 0;
  a[0] = g;
}

function wasm_bindgen_convert_slices_unsafe_get_cached_str_h456c139fb3405569(a:int_ptr, b:int, c:int) {
  var d:int = g_a;
  var e:int = 16;
  var f:int_ptr = d - e;
  f[2] = b;
  f[3] = c;
  var g:int = 0;
  a[0] = g;
}

function T_as_wasm_bindgen_convert_ReturnWasmAbi_return_abi_h8078227e393cd444() {
  var a:int = g_a;
  var b:int = 16;
  var c:int = a - b;
  g_a = c;
  wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_into_abi_hc4de4e274ed34972();
  var d:int = 16;
  var e:int = c + d;
  g_a = e;
}

function core_panicking_panic_fmt_hf69c8b08bc9d2ee5(a:int, b:int) {
  var c:{ a:int, b:int, c:int, d:int } = g_a - 16;
  g_a = c;
  c.d = b;
  c.c = a;
  c.b = 1054048;
  c.a = 1054040;
  rust_begin_unwind(c);
  unreachable;
}

function core_num_nonzero_NonZeroUsize_new_unchecked_h4b678ec2078f875b(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function wasm_bindgen_JsValue_new_h65cd858f3c56d24a(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function wasm_bindgen_JsValue_new_ha4e2edd01235f4ce(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function core_ptr_non_null_NonNull_T_new_unchecked_h5f68ca722f50596c(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function core_num_nonzero_NonZeroUsize_new_unchecked_h43ec79d1871116de(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function core_ptr_read_h61084485bfebe2e5(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[1] = a;
  var e:int = d;
  d[3] = e;
  d;
}

function core_ptr_unique_Unique_T_new_unchecked_h8016cd05df31846a(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function core_ptr_unique_Unique_T_new_unchecked_hbe11a986f1be9ece(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function core_num_nonzero_NonZeroUsize_new_unchecked_hc0c793c7852eceec(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function core_ptr_read_h8b1d2132530ddc7f(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[1] = a;
  var e:int = d;
  d[3] = e;
  d;
}

function core_ptr_non_null_NonNull_T_new_unchecked_h46314b06c79b45ed(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function core_ptr_non_null_NonNull_T_new_unchecked_haf0a40ad5334b2d0(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function core_ptr_unique_Unique_T_new_unchecked_hf80bbb969ed74f34(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function wasm_bindgen_JsValue_new_hba5f1700cca2fb16(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function core_num_nonzero_NonZeroUsize_new_unchecked_hffbc008436706e3c(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  d[2] = a;
  var e:int = d[2];
  return e;
}

function alloc_vec_Vec_T_A_set_len_hd6e59fbce748eb24(a:int_ptr, b:int) {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  a[2] = b;
}

function core_mem_forget_he0335f69a1153ffe(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[1] = a;
  d[3] = a;
  d[2] = a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_bool_into_abi_hb2e4e4e88d95202f(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:byte_ptr = b - c;
  var e:int = a;
  d[15] = e;
  var f:int = a;
  return f;
}

function core_ptr_drop_in_place_error_impl_core_convert_From_alloc_string_String_for_alloc_boxed_Box_dyn_erro(a:int_ptr) {
  var b:int = (a + 4)[0]:int;
  if (eqz(b)) goto B_a;
  a = a[0];
  if (eqz(a)) goto B_a;
  rust_dealloc(a, b, 1);
  label B_a:
}

function core_ptr_drop_in_place_panicking_begin_panic_handler_PanicPayload_hd9ab65052492b52a(a:int_ptr) {
  var b:int = a[1];
  if (eqz(b)) goto B_a;
  a = (a + 8)[0]:int;
  if (eqz(a)) goto B_a;
  rust_dealloc(b, a, 1);
  label B_a:
}

function rust_panic(a:int, b:int) {
  var c:int_ptr = g_a - 16;
  g_a = c;
  c[3] = b;
  c[2] = a;
  rust_start_panic(c + 8);
  unreachable;
}

function dlmalloc_dlmalloc_Segment_holds_h07422241f50b6662(a:{ a:int, b:int }, b:int):int {
  var c:int = 0;
  var d:int = a.a;
  if (d > b) goto B_a;
  c = d + a.b > b;
  label B_a:
  return c;
}

function core_ptr_ptr_impl_T_as_ptr_he51d0aec9574f809(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  return a;
}

function core_clone_impls_impl_core_clone_Clone_for_i32_clone_h3da5ad231a363afc(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[0];
  return e;
}

function core_clone_impls_impl_core_clone_Clone_for_usize_clone_h59e1769a8b1f0beb(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[0];
  return e;
}

function core_alloc_layout_Layout_size_hec1bfea4eb6d0cc6(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[0];
  return e;
}

function alloc_vec_Vec_T_A_len_h9996fdf2f519c597(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[2];
  return e;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_wasm_bindgen_JsValue_into_abi_h_1(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[0];
  return e;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_wasm_bindgen_JsValue_into_abi_h_2(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[0];
  return e;
}

function core_slice_impl_T_as_ptr_hf33fd17c16b7ae5a(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  return a;
}

function core_alloc_layout_Layout_size_h23e58bed513508c1(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[0];
  return e;
}

function core_slice_impl_T_as_ptr_hb86620dd5b00222e(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  return a;
}

function core_slice_impl_T_as_ptr_he7625c3e66273994(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  return a;
}

function alloc_vec_Vec_T_A_len_h2580c98541add436(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[2];
  return e;
}

function alloc_vec_Vec_T_A_len_h6beeebfabdd2aa80(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[2];
  return e;
}

function core_slice_impl_T_as_ptr_hb4f316d84b9f4f66(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  return a;
}

function core_alloc_layout_Layout_size_hd03d4df4a572a4a6(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[0];
  return e;
}

function alloc_vec_Vec_T_A_len_h1c78540e29c262ca(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[2];
  return e;
}

function core_alloc_layout_Layout_size_hed7bf60fc00d518d(a:int_ptr):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  var e:int = a[0];
  return e;
}

function core_str_impl_str_as_ptr_hfbf2b408cfdbb1cb(a:int, b:int):int {
  var c:int = g_a;
  var d:int = 16;
  var e:int_ptr = c - d;
  e[2] = a;
  e[3] = b;
  return a;
}

function dlmalloc_dlmalloc_Chunk_set_inuse_and_pinuse_h75c2f837cb762f26(a:{ a:int, b:int }, b:int) {
  a.b = b | 3;
  a = b + a + 4;
  a.a = a.a | 1;
}

function dlmalloc_dlmalloc_Chunk_set_free_with_pinuse_hde64410721cd558f(a:int_ptr, b:int, c:int_ptr) {
  c[1] = c[1] & -2;
  a[1] = b | 1;
  (a + b)[0]:int = b;
}

function core_fmt_Formatter_debug_struct_he73ff4cf83f55f54(a:int_ptr, b:int, c:int):long {
  return
    select_if(4294967296L,
              0L,
              call_indirect(a[6], b, c, ((a + 28)[0]:int)[3]:int)) |
    i64_extend_i32_u(a)
}

function core_ptr_ptr_impl_T_cast_h91337973e45f2d50(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function T_as_core_convert_From_T_from_he898397db8810dbc(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_num_nonzero_NonZeroUsize_get_hc2e182ebb4976273(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_JsValue_as_core_convert_AsRef_wasm_bindgen_JsValue_as_ref_h26704884eecf8b4d(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function js_sys_Object_as_core_ops_deref_Deref_deref_h8da4a7ffabe90450(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_T_into_abi_hc64d5fd915818bc1(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function T_as_core_convert_From_T_from_h42518409f8b75c09(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_i8_from_abi_h8ee4ccb93c323a17(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u8_from_abi_h781c131b1ad627ac(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_f32_from_abi_h0d75a5cbb9f520ed(a:float):float {
  var b:int = g_a;
  var c:int = 16;
  var d:float_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_f64_from_abi_hd311589fde1f1f4c(a:double):double {
  var b:int = g_a;
  var c:int = 16;
  var d:double_ptr = b - c;
  d[1] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_i16_from_abi_hec04342c66e45330(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_i32_from_abi_h7c0a0e26952dda74(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u16_from_abi_hfd5853b261350e76(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_u32_from_abi_he8154d4125ce2c20(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_FromWasmAbi_for_mut_T_from_abi_hc80a2d2b95712fb(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_T_into_abi_hdf86ed9026d0df65(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_ptr_non_null_NonNull_T_as_ptr_h80ab7d4aa42677da(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_num_nonzero_NonZeroUsize_get_h08c04c7716d30de1(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_ptr_unique_Unique_T_as_ptr_h279aa515912a26f5(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_ptr_unique_Unique_T_as_ptr_h15959b5cc7c331d6(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_T_into_abi_h0231a98fb8f4b477(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_num_nonzero_NonZeroUsize_get_h5482394b308412f2(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_ptr_non_null_NonNull_T_as_ptr_hb117359db57ced22(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_ptr_non_null_NonNull_T_as_ptr_hfb3ff7adfe2a20a8(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_ptr_unique_Unique_T_as_ptr_h751806a75e01b8a3(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_ptr_unique_Unique_T_as_ptr_h83825263fb3fc0e3(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_num_nonzero_NonZeroUsize_get_h473add2284083e03(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function core_ptr_ptr_impl_T_cast_hee3715c5cbd5bcf8(a:int):int {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
  return a;
}

function js_sys_global_GLOBAL_getit_hd35d80e4d64a4333():int {
  var a:int = 1054632;
  var b:int = a;
  var c:int = 2;
  var d:int = thread_local_statik_Key_T_get_hd83acac61c0ab6c1(b, c);
  return d;
}

function core_ptr_drop_in_place_usize_h16a271500e23a20c(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
}

function core_ptr_drop_in_place_thread_local_AccessError_hd101839ea890828e(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
}

function core_ptr_drop_in_place_u32_h0cb51930c1ff311f(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
}

function core_ptr_drop_in_place_core_alloc_layout_LayoutError_hcd29013ebe78bdcd(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
}

function core_clone_Clone_clone_h5f2641c39188718d(a:int) {
  var b:int = g_a;
  var c:int = 16;
  var d:int_ptr = b - c;
  d[3] = a;
}

function wasm_bindgen_externref_HEAP_SLAB_getit_h71785815d3e12aba():int {
  var a:int = 1054640;
  var b:int = a;
  var c:int = 31;
  var d:int = thread_local_statik_Key_T_get_hafc650927fc2e942(b, c);
  return d;
}

function dlmalloc_dlmalloc_TreeChunk_leftmost_child_h48f2502fcdcfa0a2(a:int_ptr):int {
  var b:int;
  b = a[4];
  if (b) goto B_a;
  b = (a + 20)[0]:int;
  label B_a:
  return b;
}

function wasm_bindgen_rt_malloc_failure_h50b5403fa33c6d0e() {
  var a:int = 1053584;
  var b:int = a;
  var c:int = 22;
  wasm_bindgen_throw_str_h2b0bdbd8fcc9c2e8(b, c);
  unreachable;
}

function rust_oom(a:int, b:int) {
  var c:int;
  call_indirect(a, b, select_if(c = 0[263668]:int, 35, c));
  unreachable;
}

function dlmalloc_dlmalloc_leftshift_for_tree_index_h62dacf28ccbe01be(a:int):int {
  return select_if(0, 25 - (a >> 1), a == 31)
}

function dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_free_chunk_h94ceb082391f899d(a:int_ptr, b:int) {
  a[1] = b | 1;
  (a + b)[0]:int = b;
}

function core_fmt_Error_as_core_fmt_Debug_fmt_hc2ef6a25142e514a(a:int, b:int_ptr):int {
  return call_indirect(b[6], 1054612, 5, ((b + 28)[0]:int)[3]:int)
}

function core_alloc_layout_LayoutError_as_core_fmt_Debug_fmt_h15d3c947e19df788(a:int, b:int_ptr):int {
  return call_indirect(b[6], 1054617, 11, ((b + 28)[0]:int)[3]:int)
}

function js_sys_global_ha060cbdc52a1dfdc():int {
  var a:int = 1051252;
  var b:int = a;
  var c:int = thread_local_LocalKey_T_with_h2af130ee782a21d9(b);
  return c;
}

function wasm_bindgen_convert_impls_impl_wasm_bindgen_convert_IntoWasmAbi_for_into_abi_hc4de4e274ed34972() {
  var a:int = g_a;
  var b:int = 16;
  a - b;
}

function T_as_core_convert_From_T_from_h22c08f862544113c() {
  var a:int = g_a;
  var b:int = 16;
  a - b;
}

function T_as_core_convert_From_T_from_hc51d8c015ee4f8e7() {
  var a:int = g_a;
  var b:int = 16;
  a - b;
}

function T_as_core_convert_From_T_from_h883cb76823123471() {
  var a:int = g_a;
  var b:int = 16;
  a - b;
}

function core_option_Option_T_unwrap_h25bb243e5fdcf654(a:int):int {
  if (a) goto B_a;
  core_panicking_panic_hceae0c79b0247f98(1053648, 43, 1053756);
  unreachable;
  label B_a:
  return a;
}

function core_option_Option_T_unwrap_hccc5d45ca79a283d(a:int, b:int):int {
  if (a) goto B_a;
  core_panicking_panic_hceae0c79b0247f98(1053648, 43, b);
  unreachable;
  label B_a:
  return a;
}

function dlmalloc_dlmalloc_align_up_h4772c6244aec6713(a:int, b:int):int {
  return a + b + -1 & 0 - b
}

function rust_realloc(a:int, b:int, c:int, d:int):int {
  var e:int = rdl_realloc(a, b, c, d);
  return e;
}

function sys_common_backtrace_rust_end_backtrace_h438eceaf49d629cd(a:{ a:int, b:int, c:int }) {
  panicking_begin_panic_handler_closure_h9c6751687bfc5521(a.a, a.b, a.c);
  unreachable;
}

function dlmalloc_dlmalloc_left_bits_hfbf3138e75a56fe9(a:int):int {
  a = a << 1;
  return a | 0 - a;
}

function T_as_core_fmt_Debug_fmt_he0fb0ec556a6ab4a(a:{ a:int, b:int }, b:int):int {
  return call_indirect(a.a, b, a.b[3]:int)
}

function rust_alloc(a:int, b:int):int {
  var c:int = rdl_alloc(a, b);
  return c;
}

function rust_alloc_zeroed(a:int, b:int):int {
  var c:int = rdl_alloc_zeroed(a, b);
  return c;
}

function panicking_begin_panic_handler_StrPanicPayload_as_core_panic_BoxMeUp_get_hb5cbf70b53a72f1e(a:{ a:int, b:int }, b:int) {
  a.b = 1053828;
  a.a = b;
}

function dlmalloc_dlmalloc_Chunk_cinuse_h5e879d0433022895(a:ubyte_ptr):int {
  return (a[4] & 2) >> 1
}

function dlmalloc_dlmalloc_Chunk_clear_pinuse_h1e84b2f283ad8e89(a:int_ptr) {
  a[1] = a[1] & -2
}

function dlmalloc_dlmalloc_Chunk_inuse_h8cfc6665aae9b287(a:int_ptr):int {
  return (a[1] & 3) != 1
}

function T_as_core_fmt_Display_fmt_ha820d3379de3c823(a:{ a:int, b:int }, b:int):int {
  return core_fmt_Formatter_pad_h72ccc4219c1d09f0(b, a.a, a.b)
}

function core_fmt_Formatter_debug_lower_hex_h0dc285d0f26f6b14(a:ubyte_ptr):int {
  return (a[0] & 16) >> 4
}

function core_fmt_Formatter_debug_upper_hex_h3886f20a2bf4d78c(a:ubyte_ptr):int {
  return (a[0] & 32) >> 5
}

function rust_dealloc(a:int, b:int, c:int) {
  rdl_dealloc(a, b, c)
}

function dlmalloc_dlmalloc_least_bit_hf1ac7fbb0c9afcf6(a:int):int {
  return 0 - a & a
}

function dlmalloc_dlmalloc_Chunk_mmapped_h433d048e993b396e(a:ubyte_ptr):int {
  return eqz(a[4] & 3)
}

function dlmalloc_dlmalloc_Chunk_set_size_and_pinuse_of_inuse_chunk_hb3cda7ee1be519b8(a:int_ptr, b:int) {
  a[1] = b | 3
}

function dlmalloc_dlmalloc_Segment_top_h7ba4cb35b2ab78b3(a:{ a:int, b:int }):int {
  return a.a + a.b
}

function mut_W_as_core_fmt_Write_write_hdf690d217efb421e(a:int_ptr, b:int):int {
  alloc_string_String_push_h3520305ca561dcf7(a[0], b);
  return 0;
}

function alloc_raw_vec_capacity_overflow_h56c8d20d9eefc93d() {
  core_panicking_panic_hceae0c79b0247f98(1054004, 17, 1054024);
  unreachable;
}

function core_ops_function_FnOnce_call_once_h66d552c917209568(a:int_ptr, b:int):int {
  a[0];
  return loop L_a {
           continue L_a
         }
}

function core_fmt_num_imp_impl_core_fmt_Display_for_u32_fmt_h3df307cf9bb0f560(a:uint_ptr, b:int):int {
  return core_fmt_num_imp_fmt_u64_h4d8c26c3623cb98b(a[0], 1, b)
}

export function wbindgen_add_to_stack_pointer(a:int):int {
  g_a = a + g_a;
  return g_a;
}

function rust_alloc_error_handler(a:int, b:int) {
  rg_oom(a, b)
}

function js_sys_global_GLOBAL_init_hcff6766298a4903a():int {
  var a:int = js_sys_global_get_global_object_h66d7855fb34f2042();
  return a;
}

function wasm_bindgen_JsValue_undefined_hfa9b1ae026853097():int {
  var a:int = 32;
  return a;
}

function dlmalloc_dlmalloc_Chunk_size_h477182019ccb4687(a:int_ptr):int {
  return a[1] & -8
}

function dlmalloc_dlmalloc_Chunk_pinuse_h49d83fe486a8c426(a:int_ptr):int {
  return a[1] & 1
}

function dlmalloc_dlmalloc_Segment_is_extern_hcb93322195efbcce(a:int_ptr):int {
  return a[3] & 1
}

function dlmalloc_dlmalloc_Segment_sys_flags_hba09df10f4d19d6e(a:int_ptr):int {
  return a[3] >> 1
}

function alloc_alloc_handle_alloc_error_h45a714900d29bef5(a:int, b:int) {
  rust_alloc_error_handler(a, b);
  unreachable;
}

function rg_oom(a:int, b:int) {
  rust_oom(a, b);
  unreachable;
}

function rdl_alloc(a:int, b:int):int {
  return dlmalloc_Dlmalloc_A_malloc_hbd2b2a561e0ef670(a, b)
}

function dlmalloc_dlmalloc_Chunk_plus_offset_ha281c8f37de9cb65(a:int, b:int):int {
  return a + b
}

function dlmalloc_dlmalloc_Chunk_minus_offset_h956a4e2adf3eefcb(a:int, b:int):int {
  return a - b
}

function dlmalloc_dlmalloc_Chunk_to_mem_h955b963a7a834301(a:int):int {
  return a + 8
}

function dlmalloc_dlmalloc_Chunk_from_mem_hee6c19b2ff028b5c(a:int):int {
  return a + -8
}

function rdl_dealloc(a:int, b:int, c:int) {
  dlmalloc_dlmalloc_Dlmalloc_A_free_hb07eefd31eacd84c(a)
}

function dlmalloc_dlmalloc_TreeChunk_next_h115dce7333e5fc2c(a:int_ptr):int {
  return a[3]
}

function dlmalloc_dlmalloc_TreeChunk_prev_h06d58a8550adfb36(a:int_ptr):int {
  return a[2]
}

function core_panic_panic_info_PanicInfo_message_h36702d3d004a6dee(a:int_ptr):int {
  return a[2]
}

function core_panic_panic_info_PanicInfo_location_h6f567dfbe8cd82af(a:int_ptr):int {
  return a[3]
}

function core_hint_unreachable_unchecked_h0a606f0cb22731fe() {
  unreachable
}

function core_hint_unreachable_unchecked_hada860efdb3b02da() {
  unreachable
}

function T_as_core_any_Any_type_id_hbfbca4fb35e9bd6d(a:int):long {
  return 9147559743429524724L
}

function T_as_core_any_Any_type_id_hef2b492c5a1991f7(a:int):long {
  return -304500839653225287L
}

function rust_start_panic(a:int):int {
  return unreachable
}

function dlmalloc_dlmalloc_Chunk_fencepost_head_h8f835e0dbf36cac4():int {
  return 7
}

function dlmalloc_dlmalloc_TreeChunk_chunk_h045726532a1e0c8d(a:int):int {
  return a
}

function dlmalloc_sys_System_as_dlmalloc_Allocator_remap_h2ff00066846ea921(a:int, b:int, c:int, d:int, e:int):int {
  return 0
}

function dlmalloc_sys_System_as_dlmalloc_Allocator_free_part_he0a6ef0c01b934cb(a:int, b:int, c:int, d:int):int {
  return 0
}

function dlmalloc_sys_System_as_dlmalloc_Allocator_free_hb5a074dd393cd90a(a:int, b:int, c:int):int {
  return 0
}

function dlmalloc_sys_System_as_dlmalloc_Allocator_can_release_part_hbadca9aef442623d(a:int, b:int):int {
  return 0
}

function dlmalloc_sys_System_as_dlmalloc_Allocator_allocates_zeros_hcf202111fcba408d(a:int):int {
  return 1
}

function dlmalloc_sys_System_as_dlmalloc_Allocator_page_size_h2c29bf8b31566e63(a:int):int {
  return 65536
}

function T_as_core_any_Any_type_id_h509a82f298b121bc(a:int):long {
  return -8369601888463335144L
}

function core_ptr_drop_in_place_mut_io_Write_write_fmt_Adapter_alloc_vec_Vec_u8_hbb05f427c3faacac(a:int) {
}

function alloc_default_alloc_error_hook_hc8541f7c1ec32afe(a:int, b:int) {
}

function core_ptr_drop_in_place_u8_h894ae664ce93932d(a:int) {
}

function core_ptr_drop_in_place_core_iter_adapters_copied_Copied_core_slice_iter_Iter_u8_haa4e00c186f7b014(a:int) {
}

export function webpack_init() {
}
